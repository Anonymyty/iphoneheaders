/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:46:11 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol HDSyncStore;
@class HDDaemon, NSUUID, NSDate, NSCalendar, NSString;

@interface HDSyncSession : NSObject {

	BOOL _attemptWhileLocking;
	HDDaemon* _daemon;
	id<HDSyncStore> _syncStore;
	NSUUID* _sessionUUID;
	NSDate* _startDate;
	NSCalendar* _calendar;
	NSString* _reason;

}

@property (nonatomic,__weak,readonly) HDDaemon * daemon;               //@synthesize daemon=_daemon - In the implementation block
@property (nonatomic,readonly) id<HDSyncStore> syncStore;              //@synthesize syncStore=_syncStore - In the implementation block
@property (nonatomic,readonly) NSUUID * sessionUUID;                   //@synthesize sessionUUID=_sessionUUID - In the implementation block
@property (nonatomic,readonly) NSDate * startDate;                     //@synthesize startDate=_startDate - In the implementation block
@property (nonatomic,readonly) NSCalendar * calendar;                  //@synthesize calendar=_calendar - In the implementation block
@property (nonatomic,copy,readonly) NSString * reason;                 //@synthesize reason=_reason - In the implementation block
@property (nonatomic,readonly) BOOL attemptWhileLocking;               //@synthesize attemptWhileLocking=_attemptWhileLocking - In the implementation block
-(id)init;
-(id)description;
-(NSCalendar *)calendar;
-(NSString *)reason;
-(NSUUID *)sessionUUID;
-(NSDate *)startDate;
-(HDDaemon *)daemon;
-(id<HDSyncStore>)syncStore;
-(BOOL)attemptWhileLocking;
-(id)initWithDaemon:(id)arg1 syncStore:(id)arg2 attemptWhileLocking:(BOOL)arg3 reason:(id)arg4 ;
-(id)newChangeWithSyncEntityClass:(Class)arg1 ;
-(void)sendChanges:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)syncDidFinishWithSuccess:(BOOL)arg1 error:(id)arg2 ;
-(id)predicateForSyncEntityClass:(Class)arg1 ;
-(unsigned long long)syncObjectLimitForEntityClass:(Class)arg1 ;
-(void)syncWillBegin;
@end

