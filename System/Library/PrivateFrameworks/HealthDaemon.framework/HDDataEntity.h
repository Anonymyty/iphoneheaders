/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:46:10 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HealthDaemon/HealthDaemon-Structs.h>
#import <HealthDaemon/HDHealthEntity.h>
#import <libobjc.A.dylib/HDSQLiteEntity.h>

@class NSString;

@interface HDDataEntity : HDHealthEntity <HDSQLiteEntity>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_databaseTable;
+(id)columnsDefinition;
+(id)insertDataObject:(id)arg1 withProvenance:(id)arg2 inDatabase:(id)arg3 persistentID:(id)arg4 error:(id*)arg5 ;
+(id)codableObjectsFromObjectCollection:(id)arg1 ;
+(BOOL)addCodableObject:(id)arg1 toCollection:(id)arg2 ;
+(id)entityEncoderForHealthDaemon:(id)arg1 database:(id)arg2 purpose:(long long)arg3 authorizationFilter:(/*^block*/id)arg4 ;
+(id)databaseTable;
+(long long)protectionClass;
+(id)propertyForSyncProvenance;
+(id)anyInDatabase:(id)arg1 predicate:(id)arg2 error:(id*)arg3 ;
+(id)joinClausesForProperty:(id)arg1 ;
+(id)associationPropertyForEntityClass:(Class)arg1 ;
+(id)columnNameForSortIdentifier:(id)arg1 ;
+(Class)_deletedEntityClass;
+(id)sourceIDsForObjectsOfType:(long long)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 error:(id*)arg4 ;
+(BOOL)requiresSampleTypePredicate;
+(id)disambiguatedSQLForProperty:(id)arg1 ;
+(long long)preferredEntityType;
+(id)columnNamesForTimeOffset;
+(id)predicateForObjectsFromAppleWatchSources:(BOOL)arg1 healthDaemon:(id)arg2 error:(id*)arg3 ;
+(id)entityEnumeratorWithDaemon:(id)arg1 ;
+(void)insertDataObjects:(id)arg1 withProvenance:(id)arg2 creationDate:(double)arg3 healthDaemon:(id)arg4 skipInsertionFilter:(BOOL)arg5 completionHandler:(/*^block*/id)arg6 ;
+(/*^block*/id)objectInsertionFilter;
+(id)entitiesToDeleteBeforeInsertingObject:(id)arg1 provenance:(id)arg2 error:(id*)arg3 database:(id)arg4 ;
+(id)_insertDataObject:(id)arg1 withProvenance:(id)arg2 inDatabase:(id)arg3 error:(id*)arg4 ;
+(BOOL)journalObjects:(id)arg1 withProvenance:(id)arg2 creationDate:(double)arg3 healthDaemon:(id)arg4 error:(id*)arg5 ;
+(void)deleteDataObjects:(id)arg1 restrictedSourceEntity:(id)arg2 failIfNotFound:(BOOL)arg3 healthDaemon:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
+(BOOL)_deleteDataObjectWithUUID:(id)arg1 type:(long long)arg2 restrictedSourceEntity:(id)arg3 failIfNotFound:(BOOL)arg4 deletionContext:(id)arg5 provenanceIdentifier:(id*)arg6 error:(id*)arg7 ;
+(BOOL)_addCodableObjectsToCollections:(id)arg1 healthDaemon:(id)arg2 error:(id*)arg3 queryHandler:(/*^block*/id)arg4 ;
+(BOOL)isBackedByTable;
+(BOOL)_removeObjectWithPersistentID:(long long)arg1 database:(id)arg2 error:(id*)arg3 ;
+(BOOL)_deleteDataEntityWithPredicate:(id)arg1 restrictedSourceEntity:(id)arg2 failIfNotFound:(BOOL)arg3 deletionContext:(id)arg4 provenanceIdentifier:(id*)arg5 error:(id*)arg6 ;
+(BOOL)acceptsObject:(id)arg1 ;
+(id)insertDataObject:(id)arg1 withProvenance:(id)arg2 creationDate:(double)arg3 healthDaemon:(id)arg4 error:(id*)arg5 ;
+(BOOL)deleteDataObjects:(id)arg1 restrictedSourceEntity:(id)arg2 healthDaemon:(id)arg3 error:(id*)arg4 ;
+(id)dataEntityForObject:(id)arg1 healthDaemon:(id)arg2 error:(id*)arg3 ;
+(id)objectWithUUID:(id)arg1 healthDaemon:(id)arg2 error:(id*)arg3 ;
+(BOOL)addCodableObjectsToCollections:(id)arg1 excludedSyncStore:(id)arg2 syncAnchorRange:(HDSyncAnchorRange)arg3 lastSyncAnchor:(long long*)arg4 predicate:(id)arg5 limit:(unsigned long long)arg6 healthDaemon:(id)arg7 error:(id*)arg8 ;
+(id)codableObjectCollectionsWithExcludedSyncStore:(id)arg1 syncAnchorRange:(HDSyncAnchorRange)arg2 lastSyncAnchor:(long long*)arg3 predicate:(id)arg4 limit:(unsigned long long)arg5 healthDaemon:(id)arg6 error:(id*)arg7 ;
+(id)foreignDatabaseColumnForProperty:(id)arg1 ;
+(id)foreignDatabaseTableForProperty:(id)arg1 ;
+(id)foreignKeyColumnForTable:(id)arg1 ;
+(id)_dataObjectForPersistentID:(long long)arg1 encoder:(id)arg2 row:(HDSQLiteRowRef)arg3 ;
+(id)deleteStatementsForRelatedEntitiesInDatabase:(id)arg1 ;
-(long long)_dataID;
-(long long)dataAnchor;
@end

