/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:39:43 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/ClassroomKit.framework/ClassroomKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CATTransportDelegate.h>

@protocol CRKClassSessionDelegate;
@class CATStateMachine, CATTransport, DMFControlSessionIdentifier, NSArray, NSString;

@interface CRKClassSession : NSObject <CATTransportDelegate> {

	CATStateMachine* mFSM;
	CATTransport* mTransport;
	unsigned short _flags;
	DMFControlSessionIdentifier* _identifier;
	id<CRKClassSessionDelegate> _delegate;
	id _clientIdentity;
	NSArray* _trustedCertificates;

}

@property (nonatomic,readonly) DMFControlSessionIdentifier * identifier;               //@synthesize identifier=_identifier - In the implementation block
@property (assign,nonatomic,__weak) id<CRKClassSessionDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) id clientIdentity;                                      //@synthesize clientIdentity=_clientIdentity - In the implementation block
@property (nonatomic,copy,readonly) NSArray * trustedCertificates;                     //@synthesize trustedCertificates=_trustedCertificates - In the implementation block
@property (assign,nonatomic) unsigned short flags;                                     //@synthesize flags=_flags - In the implementation block
@property (nonatomic,retain) CATStateMachine * stateMachine; 
@property (nonatomic,retain) CATTransport * transport; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setDelegate:(id<CRKClassSessionDelegate>)arg1 ;
-(id<CRKClassSessionDelegate>)delegate;
-(void)invalidate;
-(DMFControlSessionIdentifier *)identifier;
-(void)disconnect;
-(CATStateMachine *)stateMachine;
-(void)setStateMachine:(CATStateMachine *)arg1 ;
-(id)clientIdentity;
-(void)transportDidConnect:(id)arg1 ;
-(void)transport:(id)arg1 didInterruptWithError:(id)arg2 ;
-(void)transportDidInvalidate:(id)arg1 ;
-(void)registerDefaults;
-(void)delegateOutOfRangeWithContext:(id)arg1 ;
-(void)foundBeaconWithFlags:(unsigned short)arg1 ;
-(void)delegateInRangeWithContext:(id)arg1 ;
-(void)lostBeacon;
-(void)localWiFiBecameAvailable;
-(void)localWiFiBecameUnavailable;
-(void)lostConnection;
-(void)delegateIdleWithContext:(id)arg1 ;
-(void)delegateNoNetworkWithContext:(id)arg1 ;
-(void)tryConnecting;
-(void)didConnect;
-(void)failedToConnect;
-(void)cancelConnectionAttempt;
-(void)delegateConnected;
-(void)delegateDisconnected;
-(void)delegateInvalidatedWithState:(id)arg1 ;
-(NSArray *)trustedCertificates;
-(id)studentSocketOptions;
-(void)delegateDidChangeState:(long long)arg1 previousState:(long long)arg2 ;
-(id)initWithIdentifier:(id)arg1 clientIdentity:(id)arg2 trustedCertificates:(id)arg3 ;
-(CATTransport *)transport;
-(void)setTransport:(CATTransport *)arg1 ;
-(void)setFlags:(unsigned short)arg1 ;
-(unsigned short)flags;
@end

