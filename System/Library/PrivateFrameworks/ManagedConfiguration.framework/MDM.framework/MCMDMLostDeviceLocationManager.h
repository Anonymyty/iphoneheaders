/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 3:18:22 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/MDM.framework/MDM
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CLLocationManagerDelegate.h>

@protocol OS_dispatch_semaphore;
@class CLLocationManager, CLLocation, NSError, NSObject, NSString;

@interface MCMDMLostDeviceLocationManager : NSObject <CLLocationManagerDelegate> {

	CLLocationManager* _locationManager;
	CLLocation* _currentLocation;
	NSError* _currentError;
	NSObject*<OS_dispatch_semaphore> _semaphore;

}

@property (nonatomic,retain) CLLocationManager * locationManager;                     //@synthesize locationManager=_locationManager - In the implementation block
@property (nonatomic,retain) CLLocation * currentLocation;                            //@synthesize currentLocation=_currentLocation - In the implementation block
@property (nonatomic,retain) NSError * currentError;                                  //@synthesize currentError=_currentError - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_semaphore> semaphore;              //@synthesize semaphore=_semaphore - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(CLLocation *)currentLocation;
-(void)setCurrentLocation:(CLLocation *)arg1 ;
-(void)locationManager:(id)arg1 didFailWithError:(id)arg2 ;
-(void)locationManager:(id)arg1 didUpdateLocations:(id)arg2 ;
-(NSObject*<OS_dispatch_semaphore>)semaphore;
-(void)setSemaphore:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(CLLocationManager *)locationManager;
-(void)setLocationManager:(CLLocationManager *)arg1 ;
-(void)clearLastLocationRequestedDate;
-(void)showLocationRequestedAlertIfNecessaryForServer:(id)arg1 assertion:(id)arg2 ;
-(id)currentDeviceLocation;
-(void)_getCurrentDeviceLocation;
-(void)setCurrentError:(NSError *)arg1 ;
-(NSError *)currentError;
@end

