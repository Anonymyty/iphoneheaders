/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:43:59 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MediaPlayer/MPQueueFeeder.h>
#import <libobjc.A.dylib/MPShuffleControllerDataSource.h>
#import <libobjc.A.dylib/MPStoreAVItemDownloadMetadataConsuming.h>

@class MusicEntityValueContext, MPPlaceholderAVItem, MusicStorePlaybackContext, MPShuffleController, MusicStoreEntityProvider, NSArray, NSString;

@interface MusicStoreQueueFeeder : MPQueueFeeder <MPShuffleControllerDataSource, MPStoreAVItemDownloadMetadataConsuming> {

	MusicEntityValueContext* _containerEntityValueContext;
	MPPlaceholderAVItem* _placeholderAVItem;
	unsigned long long _feederRevisionID;
	MusicStorePlaybackContext* _pendingLoadPlaybackContext;
	BOOL _shouldIgnoreEntityProviderInvalidationForContentsChange;
	MPShuffleController* _shuffleController;
	MusicStoreEntityProvider* _storeEntityProvider;
	NSArray* _storeMetadataContexts;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_operationQueue;
+(BOOL)supportsStateRestoration;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)valueForEntityProperty:(id)arg1 ;
-(id)valuesForEntityProperties:(id)arg1 ;
-(id)MPU_contentItemIdentifierCollection;
-(unsigned long long)itemCount;
-(id)identifierAtIndex:(unsigned long long)arg1 ;
-(void)reloadWithPlaybackContext:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)mediaItemAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)realRepeatType;
-(unsigned long long)indexOfMediaItem:(id)arg1 ;
-(void)shuffleItemsWithAnchor:(unsigned long long*)arg1 ;
-(BOOL)canSkipToPreviousItem;
-(id)errorResolverForItem:(id)arg1 ;
-(unsigned long long)realShuffleType;
-(Class)itemClass;
-(unsigned long long)indexOfItemWithIdentifier:(id)arg1 ;
-(unsigned long long)itemCountForShuffleController:(id)arg1 ;
-(id)shuffleController:(id)arg1 identifierForItemAtIndex:(unsigned long long)arg2 ;
-(unsigned long long)shuffleController:(id)arg1 countOfItemIdentifier:(id)arg2 withMaximumCount:(unsigned long long)arg3 ;
-(void)_storeEntityProviderDidInvalidateNotification:(id)arg1 ;
-(unsigned long long)itemTypeForIndex:(unsigned long long)arg1 ;
-(BOOL)_hasPlaceholderItemAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)_songShuffledIndexForIndex:(unsigned long long)arg1 ;
-(id)_storeItemMetadataContextAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)initialPlaybackQueueDepthForStartingIndex:(unsigned long long)arg1 ;
-(BOOL)_reloadStoreMetadataContexts;
-(void)_configurePlaceholderItem;
-(id)_currentEmptyQueueErrorUsingEntityProviderCount:(BOOL)arg1 ;
-(void)_resolveItemMetadataContexts:(id)arg1 clientContext:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
-(void)storeAVItem:(id)arg1 didReceiveResponseAssetDictionary:(id)arg2 ;
-(id)audioSessionModeForItemAtIndex:(unsigned long long)arg1 ;
-(id)copyRawItemAtIndex:(unsigned long long)arg1 ;
-(BOOL)hasValidItemAtIndex:(unsigned long long)arg1 ;
-(BOOL)playerPreparesItemsForPlaybackAsynchronously;
-(void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1 ;
@end

