/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:22:40 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/iTunesStore.framework/Support/itunesstored
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <itunesstored/DirectUploadSessionDelegate.h>
#import <itunesstored/MediaSocialAuthenticationDelegate.h>
#import <itunesstored/MediaSocialErrorDelegate.h>
#import <itunesstored/MediaSocialStatusPollingDelegate.h>

@protocol OS_dispatch_queue;
@class MediaSocialAuthenticationCoordinator, NSMutableArray, SSSQLiteDatabase, NSObject, MediaSocialErrorCoordinator, MediaSocialStatusPollingCoordinator, ISOperationQueue, NSMutableDictionary, DirectUploadSessionController, NSString;

@interface DirectUploadController : NSObject <DirectUploadSessionDelegate, MediaSocialAuthenticationDelegate, MediaSocialErrorDelegate, MediaSocialStatusPollingDelegate> {

	MediaSocialAuthenticationCoordinator* _authenticationCoordinator;
	id _backgroundTaskObserver;
	NSMutableArray* _clients;
	SSSQLiteDatabase* _database;
	NSObject*<OS_dispatch_queue> _dispatchQueue;
	MediaSocialErrorCoordinator* _errorCoordinator;
	MediaSocialStatusPollingCoordinator* _pollingCoordinator;
	ISOperationQueue* _postOperationQueue;
	NSMutableDictionary* _progressDictionary;
	DirectUploadSessionController* _sessionController;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)observeXPCServer:(id)arg1 ;
+(BOOL)_isConnectionEntitled:(id)arg1 ;
+(void)_sendAccessDeniedErrorWithMessage:(id)arg1 connection:(id)arg2 ;
+(id)_copyPersistentIdentifiersArrayWithXPCArray:(id)arg1 ;
+(id)_orderedUploadQueryWithDatabase:(id)arg1 predicate:(id)arg2 ;
+(void)cancelUploadsWithMessage:(id)arg1 connection:(id)arg2 ;
+(void)getUploadsWithMessage:(id)arg1 connection:(id)arg2 ;
+(void)pauseUploadsWithMessage:(id)arg1 connection:(id)arg2 ;
+(void)registerObserverWithMessage:(id)arg1 connection:(id)arg2 ;
+(void)resumeUploadsWithMessage:(id)arg1 connection:(id)arg2 ;
+(id)_orderedPostQueryWithDatabase:(id)arg1 predicate:(id)arg2 ;
+(void)_setupDatabase:(id)arg1 ;
+(id)sharedController;
-(void)_handleMessage:(id)arg1 connection:(id)arg2 usingBlock:(/*^block*/id)arg3 ;
-(void)_clientDisconnectNotification:(id)arg1 ;
-(void)uploadSessionController:(id)arg1 taskDidStopWithDatabaseID:(long long)arg2 ;
-(void)uploadSessionController:(id)arg1 uploadDidFinishWithDatabaseID:(long long)arg2 response:(id)arg3 ;
-(void)uploadSessionController:(id)arg1 uploadDidBeginTransferWithDatabaseID:(long long)arg2 ;
-(void)uploadSessionController:(id)arg1 uploadDidFailWithDatabaseID:(long long)arg2 error:(id)arg3 ;
-(void)uploadSessionController:(id)arg1 uploadProgressDidChange:(id)arg2 ;
-(void)_enqueueNextReadyMediaSocialPostOperationWithDatabase:(id)arg1 ;
-(id)_newAddUploadsMessageWithDatabase:(id)arg1 hydratedUploadIDs:(id)arg2 ;
-(id)_sessionController;
-(void)_retryFailedEntities;
-(void)_scheduleDelayedRetry;
-(id)_databaseIfExists;
-(void)_cleanupPendingUploads:(id)arg1 database:(id)arg2 ;
-(BOOL)_resumeUploadsWithPredicate:(id)arg1 clientIdentifier:(id)arg2 resetFailureCount:(BOOL)arg3 error:(id*)arg4 ;
-(BOOL)_cancelUploadsWithPredicate:(id)arg1 clientIdentifier:(id)arg2 error:(id*)arg3 ;
-(void)_handleMessage:(id)arg1 connection:(id)arg2 usingReplyBlock:(/*^block*/id)arg3 ;
-(void)_enumerateSSVDirectUploadsWithQuery:(id)arg1 block:(/*^block*/id)arg2 ;
-(BOOL)_pauseUploadsWithPredicate:(id)arg1 clientIdentifier:(id)arg2 error:(id*)arg3 ;
-(void)_registerObserverWithMessage:(id)arg1 connection:(id)arg2 ;
-(void)_cleanupSessionController;
-(id)_newSSVDirectUploadWithProgress:(id)arg1 state:(long long)arg2 ;
-(void)_sendChangeUploadsMessageWithUploads:(id)arg1 ;
-(id)_errorCoordinator;
-(id)_authenticationCoordinator;
-(void)_sendRemoveUploadsMessageWithUploadIdentifiers:(id)arg1 ;
-(void)_finishPostWithPostIdentifier:(long long)arg1 response:(id)arg2 ;
-(id)_pollingCoordinator;
-(id)_postOperationQueue;
-(void)_operationDidFinishForPostIdentifier:(long long)arg1 response:(id)arg2 ;
-(void)authenticationCoordinator:(id)arg1 didFinishAuthenticationWithResponse:(id)arg2 ;
-(void)mediaSocialErrorCoordinator:(id)arg1 didFinishWithResult:(long long)arg2 ;
-(void)pollingCoordinator:(id)arg1 didPollWithResponses:(id)arg2 ;
-(void)addMediaSocialPostWithDescription:(id)arg1 client:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(void)start;
-(id)_database;
@end

