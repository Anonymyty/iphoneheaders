/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 3:11:00 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <StoreServices/StoreServices-Structs.h>
#import <libobjc.A.dylib/SSXPCCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSString, NSData, NSLock, NSMutableDictionary, NSNumber;

@interface SSAccount : NSObject <SSXPCCoding, NSCopying> {

	long long _accountKind;
	NSString* _accountName;
	long long _accountScope;
	long long _accountSource;
	BOOL _active;
	BOOL _activeLockerAccount;
	NSString* _altDSID;
	long long _availableServiceTypes;
	NSData* _bioToken;
	NSString* _creditsString;
	BOOL _demo;
	BOOL _didFallbackToPassword;
	long long _enabledServiceTypes;
	NSString* _firstName;
	long long _freeDownloadsPasswordSetting;
	NSString* _itunesPassSerialNumber;
	NSString* _lastName;
	NSLock* _lock;
	BOOL _newCustomer;
	long long _paidPurchasesPasswordSetting;
	NSString* _secureToken;
	NSMutableDictionary* _serviceEligibility;
	NSString* _storeFrontID;
	NSNumber* _uniqueIdentifier;
	BOOL _managedAppleID;

}

@property (assign) long long accountKind; 
@property (copy) NSString * accountName; 
@property (assign) long long accountScope; 
@property (copy) NSString * altDSID; 
@property (getter=isAuthenticated,readonly) BOOL authenticated; 
@property (copy) NSString * creditsString; 
@property (copy) NSString * firstName; 
@property (copy) NSString * lastName; 
@property (copy) NSString * storeFrontIdentifier; 
@property (retain) NSNumber * uniqueIdentifier; 
@property (assign) long long accountSource; 
@property (copy) NSString * secureToken; 
@property (getter=isDemoAccount) BOOL demoAccount; 
@property (getter=isActive) BOOL active; 
@property (getter=isActiveLockerAccount) BOOL activeLockerAccount; 
@property (copy) NSString * ITunesPassSerialNumber; 
@property (getter=isNewCustomer) BOOL newCustomer; 
@property (getter=isManagedAppleID) BOOL managedAppleID; 
@property (getter=isSocialEnabled) BOOL socialEnabled; 
@property (assign) long long availableServiceTypes; 
@property (assign) long long enabledServiceTypes; 
@property (assign) long long freeDownloadsPasswordSetting; 
@property (assign) long long paidPurchasesPasswordSetting; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setLockdownDictionary:(id)arg1 ;
-(BOOL)isNewCustomer;
-(void)setDemoAccount:(BOOL)arg1 ;
-(NSString *)altDSID;
-(BOOL)isDemoAccount;
-(void)_sendBlockingXPCMessage:(id)arg1 ;
-(long long)availableServiceTypes;
-(long long)freeDownloadsPasswordSetting;
-(long long)paidPurchasesPasswordSetting;
-(BOOL)didFallbackToPassword;
-(BOOL)isSocialEnabled;
-(long long)accountSource;
-(void)setAccountScope:(long long)arg1 ;
-(void)setAccountSource:(long long)arg1 ;
-(void)setDidFallbackToPassword:(BOOL)arg1 ;
-(void)setFreeDownloadsPasswordSetting:(long long)arg1 ;
-(void)setNewCustomer:(BOOL)arg1 ;
-(void)setPaidPurchasesPasswordSetting:(long long)arg1 ;
-(void)setAvailableServiceTypes:(long long)arg1 ;
-(void)setEnabledServiceTypes:(long long)arg1 ;
-(id)eligibilityForService:(long long)arg1 ;
-(void)setEligibility:(id)arg1 forServiceType:(long long)arg2 ;
-(void)updateAccountPasswordSettingsWithRequestProperties:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(id)initDemoAccount;
-(void)acceptTermsAndConditions:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)getDownloadKindsEligibleForContentRestoreWithBlock:(/*^block*/id)arg1 ;
-(void)getEligibilityForService:(long long)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)getPurchasedItemsForItems:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)getTermsAndConditionsWithBlock:(/*^block*/id)arg1 ;
-(void)addAvailableServiceTypes:(long long)arg1 ;
-(void)getKeybagSyncDataWithType:(long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)removeAvailableServiceTypes:(long long)arg1 ;
-(void)resetTransientData;
-(id)copyLockdownRepresentation;
-(BOOL)mergeValuesFromAccount:(id)arg1 ;
-(id)popBiometricToken;
-(void)setBiometricToken:(id)arg1 ;
-(void)updateAccountPasswordSettings:(/*^block*/id)arg1 ;
-(void)_sendMessage:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)dealloc;
-(id)init;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)description;
-(BOOL)isActive;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setActive:(BOOL)arg1 ;
-(NSNumber *)uniqueIdentifier;
-(void)setUniqueIdentifier:(NSNumber *)arg1 ;
-(void)getITunesMatchStatusWithCompletionBlock:(/*^block*/id)arg1 ;
-(id)copyXPCEncoding;
-(id)initWithXPCEncoding:(id)arg1 ;
-(BOOL)isAuthenticated;
-(long long)accountScope;
-(void)setStoreFrontIdentifier:(NSString *)arg1 ;
-(void)setActiveLockerAccount:(BOOL)arg1 ;
-(NSString *)secureToken;
-(void)setSecureToken:(NSString *)arg1 ;
-(BOOL)isActiveLockerAccount;
-(long long)accountKind;
-(long long)enabledServiceTypes;
-(void)setCreditsString:(NSString *)arg1 ;
-(void)setAccountKind:(long long)arg1 ;
-(void)addEnabledServiceTypes:(long long)arg1 ;
-(void)removeEnabledServiceTypes:(long long)arg1 ;
-(void)setSocialEnabled:(BOOL)arg1 ;
-(NSString *)accountName;
-(BOOL)isManagedAppleID;
-(void)setAccountName:(NSString *)arg1 ;
-(void)setAltDSID:(NSString *)arg1 ;
-(NSString *)ITunesPassSerialNumber;
-(void)setITunesPassSerialNumber:(NSString *)arg1 ;
-(NSString *)storeFrontIdentifier;
-(void)setFirstName:(NSString *)arg1 ;
-(void)setLastName:(NSString *)arg1 ;
-(NSString *)creditsString;
-(NSString *)firstName;
-(NSString *)lastName;
-(void)setManagedAppleID:(BOOL)arg1 ;
@end

