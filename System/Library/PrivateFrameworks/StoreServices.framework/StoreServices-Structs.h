/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 3:11:03 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct __CFSet* CFSetRef;

typedef struct _NSZone* NSZoneRef;

typedef struct __CFURLStorageSession* CFURLStorageSessionRef;

typedef struct _CFURLCache* CFURLCacheRef;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::less<long long>, true> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::less<long long>, true> >;

typedef struct _tree_end_node<std::__1::__tree_node_base<void *> *> {
	__tree_node_base<void *> __left_;
} tree_end_node<std::__1::__tree_node_base<void *> *>;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, void *> > > {
	tree_end_node<std::__1::__tree_node_base<void *> *> __first_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, void *> > >;

typedef struct _tree<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, SSVMediaContentTasteItem *> > > {
	__tree_node<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, void *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, void *> > > __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::less<long long>, true> > __pair3_;
} tree<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, SSVMediaContentTasteItem *> > >;

typedef struct map<long long, SSVMediaContentTasteItem *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, SSVMediaContentTasteItem *> > > {
	tree<std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, SSVMediaContentTasteItem *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, SSVMediaContentTasteItem *> > > __tree_;
} map<long long, SSVMediaContentTasteItem *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, SSVMediaContentTasteItem *> > >;

typedef struct _CFCachedURLResponse* CFCachedURLResponseRef;

typedef struct __CTServerConnection* CTServerConnectionRef;

typedef struct IONotificationPort* IONotificationPortRef;

typedef struct __CFString* CFStringRef;

typedef struct __CFArray* CFArrayRef;

typedef struct FPSAPContextOpaque_* FPSAPContextOpaque_Ref;

typedef struct FairPlayHWInfo_ {
	unsigned IDLength;
	unsigned char ID[20];
} FairPlayHWInfo_;

typedef struct sqlite3_stmt* sqlite3_stmtRef;

typedef struct SecCmsMessageStr* SecCmsMessageStrRef;

typedef struct SecCmsSignedDataStr* SecCmsSignedDataStrRef;

typedef struct __SecCertificate* SecCertificateRef;

typedef struct __SecTrust* SecTrustRef;

typedef struct sqlite3* sqlite3Ref;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct SBSProcessAssertion* SBSProcessAssertionRef;

typedef struct dispatch_source_type_s* dispatch_source_type_sRef;

typedef struct {
	unsigned eventDateTimestamp : 1;
	unsigned eventSecondsFromGMT : 1;
	unsigned itemDuration : 1;
	unsigned itemEndTime : 1;
	unsigned itemStartTime : 1;
	unsigned persistentID : 1;
	unsigned storeAccountID : 1;
	unsigned containerType : 1;
	unsigned endReasonType : 1;
	unsigned itemType : 1;
	unsigned mediaType : 1;
	unsigned sourceType : 1;
	unsigned offline : 1;
	unsigned sBEnabled : 1;
} SCD_Struct_SS25;

typedef struct z_stream_s {
	char* next_in;
	unsigned avail_in;
	unsigned long long total_in;
	char* next_out;
	unsigned avail_out;
	unsigned long long total_out;
	char* msg;
	internal_state state;
	/*function pointer*/void* zalloc;
	/*function pointer*/void* zfree;
	void opaque;
	int data_type;
	unsigned long long adler;
	unsigned long long reserved;
} z_stream_s;

