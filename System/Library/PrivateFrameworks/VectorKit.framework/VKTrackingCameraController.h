/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:56:59 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKCameraController.h>

@protocol VKTrackingCameraControllerDelegate;
@class VKTimedAnimation, VKMapModel, VKMapCanvas, VKCameraContext;

@interface VKTrackingCameraController : VKCameraController {

	id<VKTrackingCameraControllerDelegate> _trackingDelegate;
	int _viewStyle;
	int _focusStyle;
	VKTimedAnimation* _animation;
	double _verticalGroundspan;
	double _verticalGroundspanScale;
	VKPoint _farthestPoi;
	SCD_Struct_VK144 _puckPosition;
	VKPoint _puckTargetPosition;
	double _startZoomScale;
	double _endZoomScale;
	double _zoomScale;
	double _startPinchScale;
	VKMapModel* _mapModel;
	VKMapCanvas* _mapCanvas;
	double _startTime;
	BOOL _animatingIn;
	double _startPitch;
	double _startCourse;
	double _startDistance;
	VKPoint _startPuckScreenPosition;
	/*^block*/id _completionHandler;
	double _puckOffset;
	VKPoint _previousReference;
	double _previousCourse;
	double _previousOffset;
	VKCircularBuffer<double>* _rotationRateBuffer;
	double _previousStepTime;
	VKTimedAnimation* _tapZoomAnimation;
	double _tracePlaybackSpeedMultiplier;
	BOOL _receivedFirstUpdate;
	BOOL _puckAnimatorRunning;
	double _cruisePhi;
	double _cruiseHeight;
	double _cruisePhiOverride;
	double _cruiseHeightOverride;
	VKCameraContext* _lastCameraContext;
	BOOL _shouldLimitTopDownHeight;
	VKEdgeInsets _insets;
	BOOL _insetsAnimating;
	double _puckOffsetDelta;
	VKNavigationCameraModel _cameraModel;
	int _panStyle;
	State _panStartCameraState;
	Matrix<double, 3, 1> _panCameraOffset;
	double _panReturnStartTime;
	CGPoint _startPanPoint;
	double _panCourseOffset;
	double _panPitch;
	double _panStartPitch;
	double _panBoomLength;
	double _panStartBoomLength;
	double _panRouteOffset;
	VKTimedAnimation* _panAnimation;
	BOOL _panning;
	double _pitchOffset;
	VKTimedAnimation* _pitchAnimation;
	BOOL _pitching;
	BOOL _zooming;
	double _userZoomFocusStyleZoomScale;
	double _userZoomFocusStyleMinZoomScale;
	double _userZoomFocusStyleMaxZoomScale;
	VKTimedAnimation* _zoomScaleAnimation;
	fast_shared_ptr<vk::RouteLineSection>* _matchedSection;
	PolylineCoordinate _matchedIndex;
	BOOL _successfullyStartedRouteLinePan;
	VKPoint _lastRouteLinePanPuckPosition;
	int _panDirection;
	float _halfPuckSize;
	long long _desiredMapMode;
	double _mapModeTransitionZoomScale;
	BOOL _shouldAllowMapModeTransition;
	double _maxBoomLength;
	double _maxDistanceScale;
	BOOL _canZoomIn;
	BOOL _canZoomOut;

}

@property (assign,nonatomic) id<VKTrackingCameraControllerDelegate> trackingDelegate;              //@synthesize trackingDelegate=_trackingDelegate - In the implementation block
@property (nonatomic,retain) VKMapModel * mapModel;                                                //@synthesize mapModel=_mapModel - In the implementation block
@property (assign,nonatomic) VKMapCanvas * mapCanvas;                                              //@synthesize mapCanvas=_mapCanvas - In the implementation block
@property (assign,nonatomic) int panStyle;                                                         //@synthesize panStyle=_panStyle - In the implementation block
@property (nonatomic,readonly) BOOL canZoomIn;                                                     //@synthesize canZoomIn=_canZoomIn - In the implementation block
@property (nonatomic,readonly) BOOL canZoomOut;                                                    //@synthesize canZoomOut=_canZoomOut - In the implementation block
@property (assign,nonatomic) double zoomScale; 
@property (assign,nonatomic) double tracePlaybackSpeedMultiplier;                                  //@synthesize tracePlaybackSpeedMultiplier=_tracePlaybackSpeedMultiplier - In the implementation block
@property (assign,nonatomic) BOOL shouldLimitTopDownHeight;                                        //@synthesize shouldLimitTopDownHeight=_shouldLimitTopDownHeight - In the implementation block
@property (assign,nonatomic) double verticalGroundspanScale;                                       //@synthesize verticalGroundspanScale=_verticalGroundspanScale - In the implementation block
@property (assign,nonatomic) double userZoomFocusStyleGroundspanMeters; 
@property (assign,nonatomic) double userZoomFocusStyleMinGroundspanMeters; 
@property (assign,nonatomic) double userZoomFocusStyleMaxGroundspanMeters; 
@property (assign,nonatomic) float puckSize; 
-(void)dealloc;
-(id)init;
-(void)stop;
-(double)zoomScale;
-(void)setZoomScale:(double)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setEdgeInsets:(VKEdgeInsets)arg1 ;
-(void)_step;
-(id)detailedDescription;
-(void)setUserZoomFocusStyleMaxGroundspanMeters:(double)arg1 ;
-(double)userZoomFocusStyleMaxGroundspanMeters;
-(void)updateCameraContext:(id)arg1 ;
-(VKMapCanvas *)mapCanvas;
-(void)edgeInsetsDidEndAnimating;
-(void)setUserZoomFocusStyleGroundspanMeters:(double)arg1 ;
-(double)userZoomFocusStyleGroundspanMeters;
-(void)setUserZoomFocusStyleMinGroundspanMeters:(double)arg1 ;
-(double)userZoomFocusStyleMinGroundspanMeters;
-(void)edgeInsetsWillBeginAnimating;
-(void)updatedMatchedSection:(fast_shared_ptr<vk::RouteLineSection>*)arg1 index:(PolylineCoordinate*)arg2 ;
-(void)canvasFrameDidChange;
-(void)setMapCanvas:(VKMapCanvas *)arg1 ;
-(void)setMapModel:(VKMapModel *)arg1 ;
-(VKMapModel *)mapModel;
-(double)tracePlaybackSpeedMultiplier;
-(BOOL)canZoomOut;
-(void)stopPanning:(CGPoint)arg1 ;
-(void)startWithPounce:(BOOL)arg1 pounceCompletionHandler:(/*^block*/id)arg2 ;
-(void)zoom:(double)arg1 relativeToPoint:(CGPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)canZoomIn;
-(void)pan:(CGPoint)arg1 worldDelta:(const Matrix<double, 3, 1>*)arg2 ;
-(BOOL)isAtDefaultZoomScale;
-(void)startPanning:(CGPoint)arg1 ;
-(void)setShouldLimitTopDownHeight:(BOOL)arg1 ;
-(void)setZoomStyle:(int)arg1 ;
-(void)setPuckSize:(float)arg1 ;
-(void)setPanStyle:(int)arg1 ;
-(int)panStyle;
-(void)_resumeAnimationIfNecessary;
-(void)setMapModeTransitionZoomScale:(double)arg1 ;
-(id<VKTrackingCameraControllerDelegate>)trackingDelegate;
-(void)resumeIfNeeded;
-(void)setTrackingDelegate:(id<VKTrackingCameraControllerDelegate>)arg1 ;
-(void)_startTapZoomAnimationFrom:(double)arg1 to:(double)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setCanZoomIn:(BOOL)arg1 ;
-(double)relevantZoomScale;
-(void)_updateVerticalGroundspanForCameraContext:(id)arg1 reference:(VKPoint)arg2 focus:(VKPoint)arg3 offset:(double)arg4 ;
-(float)puckSize;
-(double)verticalGroundspanScale;
-(void)setCanZoomOut:(BOOL)arg1 ;
-(void)setUserZoomFocusStyleZoomScale:(double)arg1 ;
-(void)setVerticalGroundspanScale:(double)arg1 ;
-(void)_updateCruiseHeightAndPhi;
-(double)relavantMaxZoomScale;
-(void)pauseIfNeeded;
-(void)_handleZoomChanged;
-(void)_updateCameraForStartAnimation:(double)arg1 position:(VKPoint)arg2 orientation:(const SCD_Struct_VK6*)arg3 ;
-(double)relavantMinZoomScale;
-(void)setRelevantZoomScale:(double)arg1 ;
-(BOOL)shouldLimitTopDownHeight;
-(BOOL)isGesturing;
-(void)setGesturing:(BOOL)arg1 ;
-(void)setTracePlaybackSpeedMultiplier:(double)arg1 ;
-(void)puckAnimator:(id)arg1 updatedPosition:(SCD_Struct_VK27*)arg2 ;
-(void)puckAnimatorDidStop:(id)arg1 ;
-(void)puckAnimator:(id)arg1 updatedTargetPosition:(VKPoint)arg2 ;
-(void)updatePitchWithFocusPoint:(CGPoint)arg1 translation:(double)arg2 ;
-(void)stopPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)updatePinchWithFocusPoint:(CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3 ;
-(void)stopPitchingWithFocusPoint:(CGPoint)arg1 ;
-(void)startPitchingWithFocusPoint:(CGPoint)arg1 ;
-(void)startPinchingWithFocusPoint:(CGPoint)arg1 ;
@end

