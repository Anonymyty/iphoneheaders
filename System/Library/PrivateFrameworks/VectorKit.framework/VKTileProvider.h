/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:57:02 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <libobjc.A.dylib/VKLRUCacheDelegate.h>
#import <libobjc.A.dylib/VKTileSourceClient.h>

@protocol VKTileProviderClient, VKMapLayer;
@class VKTileSelection, VKTileKeyList, VKTimer, NSMutableSet, NSArray, VKTileCache, VKTileSource, VKMapRasterizer, GEOTileKeyList, _VKTileProviderTimerTarget, GEOResourceManifestConfiguration, NSLocale, NSSet, NSString;

@interface VKTileProvider : NSObject <VKLRUCacheDelegate, VKTileSourceClient> {

	id<VKTileProviderClient> _client;
	int _mode;
	VKTileSelection* _tileSelection;
	VKTileKeyList* _keysInView;
	VKTileKeyList* _neighborKeys;
	VKTileKeyList* _prefetchKeys;
	VKTimer* _evaluationTimer;
	VKTimer* _prefetchTimer;
	NSMutableSet* _tilesToRender;
	NSArray* _holes;
	NSMutableSet* _lostTiles;
	NSMutableSet* _fallbackTiles;
	NSMutableSet* _neighborTiles;
	unsigned long long _neighborMode;
	BOOL _fallbackEnabled;
	BOOL _prefetchEnabled;
	VKTileCache* _tilePool;
	VKTileSource* _tilesSources[34];
	VKTileSource* _optionalTileSources[34];
	shared_ptr<gss::StyleManager>* _styleManager;
	float _loadingProgress;
	BOOL _hasFailedTile;
	BOOL _finishedLoading;
	BOOL _finishedLoadingOptionalLayers;
	VKCameraState _lastCameraState;
	CGSize _lastCanvasSize;
	BOOL _tilesChanged;
	VKMapRasterizer* _rasterizer;
	id<VKMapLayer> _debugLayer;
	GEOTileKeyList* _debugLayerKeys;
	unsigned long long _tileReserveLimit;
	unsigned long long _tileMaximumLimit;
	unsigned _prefetchNumberOfScreens;
	BOOL _useSmallTileCache;
	float _lastMidDisplayZoomLevel;
	CGSize _sortPoint;
	double _contentScale;
	vector<vk::TileExclusionArea, std::__1::allocator<vk::TileExclusionArea> >* _exclusionAreas;
	BOOL _exclusionAreaVisible;
	_VKTileProviderTimerTarget* _evaluationTarget;
	_VKTileProviderTimerTarget* _prefetchTarget;
	GEOResourceManifestConfiguration* _manifestConfiguration;
	NSLocale* _locale;

}

@property (assign,nonatomic) int mode;                                                                                 //@synthesize mode=_mode - In the implementation block
@property (assign,getter=isFallbackEnabled,nonatomic) BOOL fallbackEnabled;                                            //@synthesize fallbackEnabled=_fallbackEnabled - In the implementation block
@property (assign,nonatomic) unsigned long long neighborMode;                                                          //@synthesize neighborMode=_neighborMode - In the implementation block
@property (assign,getter=isPrefetchEnabled,nonatomic) BOOL prefetchEnabled;                                            //@synthesize prefetchEnabled=_prefetchEnabled - In the implementation block
@property (assign,nonatomic) BOOL useSmallTileCache;                                                                   //@synthesize useSmallTileCache=_useSmallTileCache - In the implementation block
@property (assign,nonatomic) id<VKTileProviderClient> client;                                                          //@synthesize client=_client - In the implementation block
@property (assign,nonatomic) shared_ptr<gss::StyleManager>* styleManager;                                              //@synthesize styleManager=_styleManager - In the implementation block
@property (assign,nonatomic) double contentScale;                                                                      //@synthesize contentScale=_contentScale - In the implementation block
@property (nonatomic,readonly) VKTileKeyList * keysInView;                                                             //@synthesize keysInView=_keysInView - In the implementation block
@property (nonatomic,readonly) VKTileKeyList * neighborKeys;                                                           //@synthesize neighborKeys=_neighborKeys - In the implementation block
@property (nonatomic,readonly) NSSet * tilesToRender;                                                                  //@synthesize tilesToRender=_tilesToRender - In the implementation block
@property (nonatomic,readonly) NSSet * neighborTiles;                                                                  //@synthesize neighborTiles=_neighborTiles - In the implementation block
@property (nonatomic,readonly) float loadingProgress;                                                                  //@synthesize loadingProgress=_loadingProgress - In the implementation block
@property (getter=isFinishedLoading,nonatomic,readonly) BOOL finishedLoading;                                          //@synthesize finishedLoading=_finishedLoading - In the implementation block
@property (getter=isFinishedLoadingOptionalLayers,nonatomic,readonly) BOOL finishedLoadingOptionalLayers;              //@synthesize finishedLoadingOptionalLayers=_finishedLoadingOptionalLayers - In the implementation block
@property (nonatomic,readonly) BOOL hasFailedTile;                                                                     //@synthesize hasFailedTile=_hasFailedTile - In the implementation block
@property (nonatomic,readonly) NSArray * visibleTileSets; 
@property (nonatomic,retain) id<VKMapLayer> debugLayer;                                                                //@synthesize debugLayer=_debugLayer - In the implementation block
@property (nonatomic,readonly) GEOTileKeyList * debugLayerKeys;                                                        //@synthesize debugLayerKeys=_debugLayerKeys - In the implementation block
@property (assign,nonatomic) double lodBias; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(void)setMode:(int)arg1 ;
-(int)mode;
-(void)timerFired:(id)arg1 ;
-(void)setContentScale:(double)arg1 ;
-(double)contentScale;
-(id)tileForKey:(const VKTileKey*)arg1 ;
-(NSArray *)visibleTileSets;
-(id)detailedDescription;
-(void)setClient:(id<VKTileProviderClient>)arg1 ;
-(void)clearScene;
-(void)setStyleManager:(shared_ptr<gss::StyleManager>*)arg1 ;
-(shared_ptr<gss::StyleManager>*)styleManager;
-(unsigned long long)neighborMode;
-(void)flushCaches:(BOOL)arg1 ;
-(void)setNeighborMode:(unsigned long long)arg1 ;
-(void)quiesce;
-(BOOL)isFinishedLoading;
-(BOOL)isPrefetchEnabled;
-(void)cancelLoadingTiles;
-(void)setPrefetchEnabled:(BOOL)arg1 ;
-(void)foreachActiveLayer:(/*^block*/id)arg1 ;
-(BOOL)hasFailedTile;
-(void)setFallbackEnabled:(BOOL)arg1 ;
-(VKTileKeyList *)neighborKeys;
-(BOOL)isFinishedLoadingOptionalLayers;
-(float)loadingProgress;
-(VKTileKeyList *)keysInView;
-(NSSet *)tilesToRender;
-(void)updateWithContext:(id)arg1 selectionScale:(float)arg2 ;
-(void)requireRasterization:(id)arg1 ;
-(void)setTileExclusionAreas:(const vector<vk::TileExclusionArea, std::__1::allocator<vk::TileExclusionArea> >*)arg1 ;
-(void)setDebugLayer:(id<VKMapLayer>)arg1 ;
-(void)removeTileSourceForMapLayer:(unsigned long long)arg1 ;
-(void)invalidateRasterizedTiles;
-(BOOL)tileExclusionAreaVisible;
-(id)sourceForLayer:(id)arg1 ;
-(id)initWithClient:(id)arg1 resourceManifestConfiguration:(id)arg2 locale:(id)arg3 ;
-(NSSet *)neighborTiles;
-(GEOTileKeyList *)debugLayerKeys;
-(void)setLodBias:(double)arg1 ;
-(void)setUseSmallTileCache:(BOOL)arg1 ;
-(void)setTileSource:(id)arg1 forMapLayer:(unsigned long long)arg2 optional:(BOOL)arg3 ;
-(double)lodBias;
-(BOOL)cache:(id)arg1 willEvictObject:(id)arg2 forKey:(const VKCacheKey*)arg3 ;
-(void)invalidateTilesFromTileSource:(id)arg1 ;
-(void)_fillHoles:(id)arg1 context:(id)arg2 ;
-(BOOL)releaseParentFallbackTileForTile:(id)arg1 ;
-(id)selectTiles:(int*)arg1 needRasterization:(BOOL*)arg2 ;
-(void)didStopLoadingTilesWithError:(id)arg1 ;
-(void)_resizeCache;
-(void)releaseTileForRendering:(id)arg1 ;
-(void)changeTileForKey:(const VKTileKey*)arg1 toState:(unsigned long long)arg2 withMetadata:(id)arg3 withTile:(id)arg4 forLayer:(unsigned long long)arg5 ;
-(void)prepareTileForRendering:(id)arg1 ;
-(BOOL)inFailedState:(id)arg1 ;
-(void)cancelLoadForMapTile:(id)arg1 ;
-(void)configureTileSelection;
-(BOOL)evaluateSelectedTileForRendering:(id)arg1 ;
-(void)willStartLoadingTiles;
-(id<VKMapLayer>)debugLayer;
-(BOOL)useSmallTileCache;
-(void)_fetchAvailableTiles:(BOOL)arg1 ;
-(BOOL)hasRequiredTileData:(id)arg1 ;
-(void)_prefetchTiles;
-(void)releaseChildrenFallbackTilesForTile:(id)arg1 context:(id)arg2 ;
-(void)retireRenderTiles:(id)arg1 ;
-(BOOL)tileMatters:(id)arg1 ;
-(void)_dirtyTile:(id)arg1 source:(id)arg2 layer:(unsigned long long)arg3 ;
-(BOOL)canRenderTile:(id)arg1 ;
-(void)retireNeighborTiles:(id)arg1 ;
-(BOOL)hasAllTileData:(id)arg1 ;
-(void)releaseFallbackTileForRendering:(id)arg1 ;
-(void)tileSourcesDidChange;
-(void)_disableTimers;
-(void)describeTilesFromList:(id)arg1 output:(id)arg2 ;
-(void)foreachOptionalLayer:(/*^block*/id)arg1 ;
-(BOOL)evaluateNeighborTileForRendering:(id)arg1 ;
-(void)_updateTimers:(int)arg1 ;
-(BOOL)isFallbackEnabled;
-(unsigned long long)layerForSource:(id)arg1 ;
-(void)tileSource:(id)arg1 invalidateTilesWithState:(unsigned long long)arg2 ;
-(void)releaseNeighborTileForRendering:(id)arg1 ;
-(void)tileSource:(id)arg1 invalidateKeys:(id)arg2 ;
-(void)tileSource:(id)arg1 didFailToDecodeTileForKey:(const VKTileKey*)arg2 ;
-(BOOL)tileSource:(id)arg1 keyIsNeeded:(const VKTileKey*)arg2 ;
-(void)tileSource:(id)arg1 didFailToLoadTileForKey:(const VKTileKey*)arg2 error:(id)arg3 ;
-(void)tileSource:(id)arg1 didFetchTile:(id)arg2 forKey:(const VKTileKey*)arg3 ;
-(BOOL)tileSourceMayUseNetwork:(id)arg1 ;
-(void)tileSource:(id)arg1 dirtyTilesWithinRect:(const SCD_Struct_VK11*)arg2 level:(long long)arg3 ;
-(void)tileSource:(id)arg1 invalidateKey:(const VKTileKey*)arg2 ;
-(void)dirtyTilesFromTileSource:(id)arg1 ;
-(void)rasterizer:(id)arg1 didMakeRasterTile:(id)arg2 forKey:(const VKTileKey*)arg3 ;
-(id<VKTileProviderClient>)client;
@end

