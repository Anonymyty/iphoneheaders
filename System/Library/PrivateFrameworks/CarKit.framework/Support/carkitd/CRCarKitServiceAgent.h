/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:11:39 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/CarKit.framework/Support/carkitd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <carkitd/CRVehicleAccessoryManagerDelegate.h>
#import <carkitd/CRCarPlayPreferencesDelegate.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <libobjc.A.dylib/CRCarKitService.h>

@class CRCarKitMonitoringServiceAgent, CRVehicleAccessoryManager, CRVehicleStore, CRCarPlayPreferences, CRBulletinDataProvider, CRBluetoothManager, CRWiFiCarManager, CRSessionAssertionManager, NSMutableArray, NSNumber, NSString;

@interface CRCarKitServiceAgent : NSObject <CRVehicleAccessoryManagerDelegate, CRCarPlayPreferencesDelegate, NSXPCListenerDelegate, CRCarKitService> {

	CRCarKitMonitoringServiceAgent* _monitoringService;
	CRVehicleAccessoryManager* _accessoryManager;
	CRVehicleStore* _vehicleStore;
	CRCarPlayPreferences* _preferencesManager;
	CRBulletinDataProvider* _bulletinProvider;
	CRBluetoothManager* _bluetoothManager;
	CRWiFiCarManager* _wifiManager;
	CRSessionAssertionManager* _assertionManager;
	NSMutableArray* _outstandingApprovalAlerts;
	NSMutableArray* _outstandingPairingAlerts;
	NSNumber* _cachedCarPlayAllowedChangeValue;

}

@property (assign,nonatomic,__weak) CRCarKitMonitoringServiceAgent * monitoringService;              //@synthesize monitoringService=_monitoringService - In the implementation block
@property (nonatomic,retain) CRVehicleAccessoryManager * accessoryManager;                           //@synthesize accessoryManager=_accessoryManager - In the implementation block
@property (nonatomic,retain) CRVehicleStore * vehicleStore;                                          //@synthesize vehicleStore=_vehicleStore - In the implementation block
@property (nonatomic,retain) CRCarPlayPreferences * preferencesManager;                              //@synthesize preferencesManager=_preferencesManager - In the implementation block
@property (nonatomic,retain) CRBulletinDataProvider * bulletinProvider;                              //@synthesize bulletinProvider=_bulletinProvider - In the implementation block
@property (nonatomic,retain) CRBluetoothManager * bluetoothManager;                                  //@synthesize bluetoothManager=_bluetoothManager - In the implementation block
@property (nonatomic,retain) CRWiFiCarManager * wifiManager;                                         //@synthesize wifiManager=_wifiManager - In the implementation block
@property (nonatomic,retain) CRSessionAssertionManager * assertionManager;                           //@synthesize assertionManager=_assertionManager - In the implementation block
@property (nonatomic,retain) NSMutableArray * outstandingApprovalAlerts;                             //@synthesize outstandingApprovalAlerts=_outstandingApprovalAlerts - In the implementation block
@property (nonatomic,retain) NSMutableArray * outstandingPairingAlerts;                              //@synthesize outstandingPairingAlerts=_outstandingPairingAlerts - In the implementation block
@property (assign,nonatomic) NSNumber * cachedCarPlayAllowedChangeValue;                             //@synthesize cachedCarPlayAllowedChangeValue=_cachedCarPlayAllowedChangeValue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setVehicleStore:(CRVehicleStore *)arg1 ;
-(void)setPreferencesManager:(CRCarPlayPreferences *)arg1 ;
-(CRCarPlayPreferences *)preferencesManager;
-(void)setBluetoothManager:(CRBluetoothManager *)arg1 ;
-(void)setOutstandingApprovalAlerts:(NSMutableArray *)arg1 ;
-(void)setOutstandingPairingAlerts:(NSMutableArray *)arg1 ;
-(void)handleVehicleStoreAvailabiltyDidChange:(id)arg1 ;
-(CRVehicleStore *)vehicleStore;
-(BOOL)_isRestricted:(id*)arg1 ;
-(BOOL)_isVehicleActionable:(id)arg1 ;
-(BOOL)postInCarNotificationForVehicle:(id)arg1 ;
-(id)pairedVehiclesConnectedOnBluetooth;
-(void)_handleCarPlayAllowedDidChange;
-(void)handleCarPlayAttachedAccessories:(id)arg1 ;
-(void)updateVehiclesMatchingAccessories:(id)arg1 ;
-(void)_dismissApprovalAlertForVehicleAccessory:(id)arg1 ;
-(NSNumber *)cachedCarPlayAllowedChangeValue;
-(void)setCachedCarPlayAllowedChangeValue:(NSNumber *)arg1 ;
-(void)handleCarPlayAttached;
-(void)_dismissApprovalAlerts;
-(void)_dismissPairingAlerts;
-(CRCarKitMonitoringServiceAgent *)monitoringService;
-(BOOL)requestWiFiCredentialsIfNecessaryForVehicles:(id)arg1 ;
-(id)_certificateSerialNumbersWithKnownPairing;
-(id)_unknownPairingAccessoriesFromAccessories:(id)arg1 ;
-(void)_presentApprovalAlertForVehicleAccessory:(id)arg1 ;
-(id)vehicleMatchingAccessory:(id)arg1 inVehicles:(id)arg2 ;
-(void)updateVehicle:(id)arg1 usingAccessory:(id)arg2 ;
-(void)_presentWiredBluetoothPairingAlertForVehicleAccessory:(id)arg1 vehicle:(id)arg2 ;
-(NSMutableArray *)outstandingApprovalAlerts;
-(NSMutableArray *)outstandingPairingAlerts;
-(void)_beginWiredPairingWithVehicleAccessory:(id)arg1 vehicle:(id)arg2 ;
-(BOOL)postOutOfCarNotificationForVehicle:(id)arg1 ;
-(void)_dismissPairingAlertForVehicleAccessory:(id)arg1 ;
-(void)setMonitoringService:(CRCarKitMonitoringServiceAgent *)arg1 ;
-(void)dealloc;
-(id)init;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(CRWiFiCarManager *)wifiManager;
-(void)setWifiManager:(CRWiFiCarManager *)arg1 ;
-(void)accessoryManager:(id)arg1 didConnectVehicleAccessory:(id)arg2 ;
-(void)accessoryManager:(id)arg1 didDisconnectVehicleAccessory:(id)arg2 ;
-(void)accessoryManager:(id)arg1 didUpdateVehicleAccessory:(id)arg2 ;
-(void)handleCarPlayAllowedDidChange;
-(id)vehicleForBluetoothAddress:(id)arg1 ;
-(id)saveVehicle:(id)arg1 ;
-(CRSessionAssertionManager *)assertionManager;
-(void)setAssertionManager:(CRSessionAssertionManager *)arg1 ;
-(void)setAccessoryManager:(CRVehicleAccessoryManager *)arg1 ;
-(CRVehicleAccessoryManager *)accessoryManager;
-(CRBulletinDataProvider *)bulletinProvider;
-(void)setBulletinProvider:(CRBulletinDataProvider *)arg1 ;
-(void)isPairedWithCertificateSerial:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)saveVehicle:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)removeVehicle:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)fetchAllVehiclesWithReply:(/*^block*/id)arg1 ;
-(void)handleDidConnectBluetoothAddress:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)handleDidDisconnectBluetoothAddress:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)isBluetoothInCarWithReply:(/*^block*/id)arg1 ;
-(void)saveWiFiCredentialsForAccessoryConnectionIdentifier:(unsigned long long)arg1 credentials:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)allowsConnectionsForWiFiUUID:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)allowsConnectionsForCertificateSerial:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)handleCarPlayRestrictionChangedWithReply:(/*^block*/id)arg1 ;
-(void)isCarPlayAllowedWithReply:(/*^block*/id)arg1 ;
-(CRBluetoothManager *)bluetoothManager;
@end

