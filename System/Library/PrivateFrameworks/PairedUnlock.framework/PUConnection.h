/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:50:51 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/PairedUnlock.framework/PairedUnlock
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/PUUnlockClient.h>

@protocol OS_dispatch_queue, PUConnectionDelegate;
@class NSXPCConnection, NSObject, NSString;

@interface PUConnection : NSObject <PUUnlockClient> {

	NSXPCConnection* _connection;
	NSObject*<OS_dispatch_queue> _connectionQueue;
	NSObject*<OS_dispatch_queue> _delegateQueue;
	id<PUConnectionDelegate> _delegate;
	/*^block*/id _getRemoteDevicePasscodeStateHandler;
	/*^block*/id _remoteDeviceRemoveLockoutHandler;

}

@property (__weak) id<PUConnectionDelegate> delegate;                           //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) id getRemoteDevicePasscodeStateHandler;              //@synthesize getRemoteDevicePasscodeStateHandler=_getRemoteDevicePasscodeStateHandler - In the implementation block
@property (nonatomic,copy) id remoteDeviceRemoveLockoutHandler;                 //@synthesize remoteDeviceRemoveLockoutHandler=_remoteDeviceRemoveLockoutHandler - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)syncPasscodeState;
-(void)setDelegate:(id<PUConnectionDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<PUConnectionDelegate>)delegate;
-(id)initWithDelegate:(id)arg1 ;
-(id)connection;
-(void)setConnection:(id)arg1 ;
-(void)requestRemoteDeviceUnlockNotification;
-(void)requestRemoteDeviceRemoveLockout:(/*^block*/id)arg1 ;
-(const char*)queueNameWithSuffix:(id)arg1 ;
-(void)pairForUnlockWithPasscode:(id)arg1 ;
-(void)unpairForUnlock;
-(void)enableOnlyRemoteUnlockWithPasscode:(id)arg1 ;
-(void)disableOnlyRemoteUnlock;
-(void)requestRemoteDevicePasscodeAction:(long long)arg1 type:(long long)arg2 ;
-(void)didPairForUnlock:(BOOL)arg1 error:(id)arg2 ;
-(void)didUnpairForUnlock:(BOOL)arg1 error:(id)arg2 ;
-(void)didEnableOnlyRemoteUnlock:(BOOL)arg1 error:(id)arg2 ;
-(void)didDisableOnlyRemoteUnlock:(BOOL)arg1 error:(id)arg2 ;
-(void)remoteDeviceDidCompletePasscodeAction:(BOOL)arg1 error:(id)arg2 ;
-(void)remoteDeviceDidUnlock;
-(void)remoteDeviceDidRemoveLockout:(BOOL)arg1 error:(id)arg2 ;
-(void)didGetRemoteDeviceHasPasscode:(BOOL)arg1 isLocked:(BOOL)arg2 isUnlockOnly:(BOOL)arg3 error:(id)arg4 ;
-(void)setRemoteDeviceRemoveLockoutHandler:(id)arg1 ;
-(void)setGetRemoteDevicePasscodeStateHandler:(id)arg1 ;
-(id)delegateIfRespondsToSelector:(SEL)arg1 ;
-(id)getRemoteDevicePasscodeStateHandler;
-(id)remoteDeviceRemoveLockoutHandler;
-(void)getRemoteDeviceState:(/*^block*/id)arg1 ;
@end

