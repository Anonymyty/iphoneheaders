/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:40:24 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/CoreCDPInternal.framework/CoreCDPInternal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CDPDSecureBackupDelegate.h>
#import <libobjc.A.dylib/CDPDCircleDelegate.h>
#import <libobjc.A.dylib/CDPDRemoteDeviceSecretValidatorDelegate.h>

@protocol CDPStateUIProviderInternal;
@class CDPContext, CDPDPCSController, CDPDCircleController, CDPDSecureBackupController, NSString;

@interface CDPDStateMachine : NSObject <CDPDSecureBackupDelegate, CDPDCircleDelegate, CDPDRemoteDeviceSecretValidatorDelegate> {

	CDPContext* _context;
	id<CDPStateUIProviderInternal> _uiProvider;
	CDPDPCSController* _pcsController;
	CDPDCircleController* _circleController;
	CDPDSecureBackupController* _secureBackupController;
	BOOL _attemptedCDPEnable;

}

@property (nonatomic,retain) CDPDSecureBackupController * secureBackupController;              //@synthesize secureBackupController=_secureBackupController - In the implementation block
@property (nonatomic,retain) CDPDCircleController * circleController;                          //@synthesize circleController=_circleController - In the implementation block
@property (nonatomic,retain) CDPDPCSController * pcsController;                                //@synthesize pcsController=_pcsController - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)_incrementActiveStateMachineCount;
+(void)_decrementActiveStateMachineCount;
-(void)dealloc;
-(void)repairCloudDataProtectionStateWithCompletion:(/*^block*/id)arg1 ;
-(void)handleCloudDataProtectionStateWithCompletion:(/*^block*/id)arg1 ;
-(void)remoteSecretValidator:(id)arg1 recoverSecureBackupWithSecret:(id)arg2 device:(id)arg3 completion:(/*^block*/id)arg4 ;
-(BOOL)remoteSecretValidator:(id)arg1 applyToJoinCircleWithJoinHandler:(/*^block*/id)arg2 ;
-(void)cancelRemoteSecretValidatorApplicationToJoinCircle:(id)arg1 ;
-(void)circleController:(id)arg1 secureBackupRecordsArePresentWithCompletion:(/*^block*/id)arg2 ;
-(void)prepareCircleStateForRecoveryWithCompletion:(/*^block*/id)arg1 ;
-(void)joinCircleAfterRecoveryWithCompletion:(/*^block*/id)arg1 ;
-(CDPDSecureBackupController *)secureBackupController;
-(id)initWithContext:(id)arg1 uiProvider:(id)arg2 ;
-(id)circlePeerIDForSecureBackupController:(id)arg1 ;
-(BOOL)synchronizeCircleViewsForSecureBackupController:(id)arg1 ;
-(void)promptForAdoptionOfMultipleICSCWithCompletion:(/*^block*/id)arg1 ;
-(void)promotForLocalSecretWithCompletion:(/*^block*/id)arg1 ;
-(CDPDCircleController *)circleController;
-(void)setCircleController:(CDPDCircleController *)arg1 ;
-(void)setSecureBackupController:(CDPDSecureBackupController *)arg1 ;
-(void)_handleCloudDataProtectionStateWithCompletion:(/*^block*/id)arg1 ;
-(void)_enableSecureBackupWithCompletion:(/*^block*/id)arg1 ;
-(void)_resetAccountCDPStateWithCompletion:(/*^block*/id)arg1 ;
-(void)_recoverSecureBackupWithHasPeersForRemoteApproval:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_disableCloudDataProtectionWithCompletion:(/*^block*/id)arg1 ;
-(void)_confirmCDPEligibilityWithCompletion:(/*^block*/id)arg1 ;
-(void)_preflightAccountStateWithContext:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_authenticatedRepairCloudDataProtectionStateWithCompletion:(/*^block*/id)arg1 ;
-(void)_performInteractivelyAuthenticatedRepair:(/*^block*/id)arg1 ;
-(void)_enableKVSForAccount:(id)arg1 store:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)shouldAllowCDPEnrollment;
-(void)_attemptBackupRecoveryWithLocalSecret:(id)arg1 type:(unsigned long long)arg2 useCachedSecret:(BOOL)arg3 hasPeersForRemoteApproval:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(void)_attemptBackupRecoveryByPromptingForRemoteSecretWithLocalSecret:(id)arg1 localSecretType:(unsigned long long)arg2 useCachedSecret:(BOOL)arg3 hasPeersForRemoteApproval:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(CDPDPCSController *)pcsController;
-(void)setPcsController:(CDPDPCSController *)arg1 ;
@end

