/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:53:55 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/SharedWebCredentials.framework/SharedWebCredentials
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SharedWebCredentials/SharedWebCredentials-Structs.h>
#import <libobjc.A.dylib/NSURLSessionDelegate.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <libobjc.A.dylib/SWCXPCServer.h>

@class NSMutableArray, NSXPCListener, NSURLSession, NSString;

@interface SWCManager : NSObject <NSURLSessionDelegate, NSXPCListenerDelegate, SWCXPCServer> {

	NSMutableArray* _database;
	NSXPCListener* _xpcListener;
	NSURLSession* _urlSession;
	NSMutableArray* _netRequests;
	NSMutableArray* _deferredRequests;
	NSMutableArray* _xpcRequests;
	BOOL _started;
	BOOL _addedAllApps;
	double _recheckForceTime;
	BOOL _rebuildDatabase;
	BOOL _allowUnsigned;
	unsigned _maxNetRequests;
	long long _recheckFailureMaxCount;
	long long _recheckFailureSecs;
	long long _recheckSuccessSecs;
	BOOL _recheckVersionChange;
	BOOL _redirects;
	BOOL _verifyEV;
	BOOL _wellKnown;
	BOOL _wildcardDomains;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)stop;
-(void)start;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)removeBundleID:(id)arg1 ;
-(void)setService:(id)arg1 app:(id)arg2 domain:(id)arg3 details:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)logControl:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)removeService:(id)arg1 app:(id)arg2 domain:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)setService:(id)arg1 app:(id)arg2 domain:(id)arg3 mask:(unsigned)arg4 flags:(unsigned)arg5 reply:(/*^block*/id)arg6 ;
-(void)addAllAppsWithReply:(/*^block*/id)arg1 ;
-(void)checkService:(id)arg1 app:(id)arg2 domain:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)getInfoForService:(id)arg1 app:(id)arg2 domain:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)addService:(id)arg1 app:(id)arg2 domain:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)show:(id)arg1 reply:(/*^block*/id)arg2 ;
-(int)_startAppsRequestForDomain:(id)arg1 ;
-(void)addBundleID:(id)arg1 ;
-(int)_ensureDatabaseLoaded;
-(void)_reorderAppLinks:(id)arg1 domain:(id)arg2 ;
-(void)_recheckStartTimer:(double)arg1 ;
-(void)_connectionInvalidated:(id)arg1 ;
-(void)addBundleID:(id)arg1 preApproved:(BOOL)arg2 ;
-(void)_processDeferredNetRequests;
-(void)_parseServiceDomainString:(id)arg1 legacy:(BOOL)arg2 service:(id*)arg3 domain:(id*)arg4 ;
-(id)_findService:(id)arg1 app:(id)arg2 domain:(id)arg3 ;
-(void)addAllApps;
-(id)_findService:(id)arg1 app:(id)arg2 domain:(id)arg3 wildcards:(BOOL)arg4 ;
-(BOOL)_equivalentDomain:(id)arg1 toDomain:(id)arg2 wildcards:(BOOL)arg3 ;
-(id)_appEntitlementsByID:(id)arg1 ;
-(int)_startAppsRequestForDomain:(id)arg1 wellKnown:(BOOL)arg2 immediate:(BOOL)arg3 ;
-(int)_verifyTrust:(SecTrustRef)arg1 isFile:(BOOL)arg2 ;
-(void)_recheckSchedule;
-(void)_recheckPerform;
-(void)_completeAppsRequestForTask:(id)arg1 status:(int)arg2 services:(id)arg3 ;
-(int)_saveDatabase;
-(id)_findAppRequestForTask:(id)arg1 ;
-(void)_sanitizeDatabase;
-(id)_installedAppByID:(id)arg1 ;
-(int)_addService:(id)arg1 app:(id)arg2 domain:(id)arg3 ;
-(void)addAllAppleApps;
@end

