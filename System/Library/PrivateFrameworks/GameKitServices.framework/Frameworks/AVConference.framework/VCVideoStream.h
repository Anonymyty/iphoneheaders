/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:45:30 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVConference/AVConference-Structs.h>
#import <libobjc.A.dylib/VCMediaStreamProtocol.h>
#import <libobjc.A.dylib/VCVideoStreamTransmitterDelegate.h>
#import <libobjc.A.dylib/VCVideoStreamReceiverDelegate.h>

@protocol OS_dispatch_queue, VCMediaStreamDelegate;
@class NSObject, NSString, AVImageQueue, AVCMediaStreamConfig, VCVideoStreamTransmitter, VCVideoStreamReceiver;

@interface VCVideoStream : NSObject <VCMediaStreamProtocol, VCVideoStreamTransmitterDelegate, VCVideoStreamReceiverDelegate> {

	NSObject*<OS_dispatch_queue> _delegateNotificationQueue;
	int _state;
	BOOL _isSRTPInitialized;
	NSString* _callID;
	opaque_pthread_mutex_t _streamLock;
	opaque_pthread_mutex_t _remoteLayerLock;
	opaque_pthread_mutex_t _localLayerLock;
	opaque_pthread_rwlock_t _stateLock;
	tagHANDLE* _videoRTP;
	double _rtpTimeoutEnabledTime;
	double _rtcpTimeoutEnabledTime;
	double _lastRTPTimeoutReportTime;
	double _lastRTCPTimeoutReportTime;
	AVImageQueue* _remoteQueue;
	AVImageQueue* _localQueue;
	id<VCMediaStreamDelegate> _delegate;
	unsigned _conferenceID;
	BOOL _isValid;
	AVCMediaStreamConfig* _streamConfig;
	VCVideoStreamTransmitter* _videoTransmitter;
	VCVideoStreamReceiver* _videoReceiver;

}

@property (assign,nonatomic) id<VCMediaStreamDelegate> delegate;               //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned conferenceID;                                    //@synthesize conferenceID=_conferenceID - In the implementation block
@property (assign) BOOL isValid;                                               //@synthesize isValid=_isValid - In the implementation block
@property (nonatomic,retain) AVCMediaStreamConfig * streamConfig;              //@synthesize streamConfig=_streamConfig - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isSameSRTPKey:(id)arg1 newKey:(id)arg2 ;
-(void)setDelegate:(id<VCMediaStreamDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<VCMediaStreamDelegate>)delegate;
-(BOOL)isValid;
-(void)stop;
-(void)lock;
-(void)unlock;
-(void)start;
-(void)didReceiveLocalVideoFrame:(CVBufferRef)arg1 atTime:(SCD_Struct_VC13)arg2 ;
-(void)checkPacketTimeouts;
-(AVCMediaStreamConfig *)streamConfig;
-(int)getSRTPMasterKeyLength:(long long)arg1 ;
-(int)getCryptoSet:(tagSRTPExchangeInfo*)arg1 withMasterKey:(id)arg2 ;
-(int)SRTPCipherSuiteForLTECipherSuite:(long long)arg1 ;
-(id)setupRTPWithSockets:(id)arg1 error:(id*)arg2 ;
-(id)setupRTPWithLocalParticipantInfo:(id)arg1 error:(id*)arg2 ;
-(BOOL)isSameSRTPConfig:(id)arg1 ;
-(void)setStreamConfig:(AVCMediaStreamConfig *)arg1 ;
-(void)setupRTPPayloadsWithDestinationIPPort:(tagIPPORT*)arg1 ;
-(BOOL)setRTPPayloads:(int*)arg1 numPayloads:(int)arg2 withError:(id*)arg3 ;
-(void)setRtcpEnabled:(BOOL)arg1 ;
-(void)setRtpTimeOutEnabled:(BOOL)arg1 ;
-(void)setRtcpTimeOutEnabled:(BOOL)arg1 ;
-(void)setRtpTimeOutInterval:(double)arg1 ;
-(void)setRtcpTimeOutInterval:(double)arg1 ;
-(void)setRtcpSendInterval:(double)arg1 ;
-(void)setIsValid:(BOOL)arg1 ;
-(id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id*)arg3 ;
-(BOOL)setStreamConfig:(id)arg1 withError:(id*)arg2 ;
-(void)setPause:(BOOL)arg1 ;
-(void)setStreamDirection:(long long)arg1 ;
-(long long)streamDirection;
-(void)reportRTCPPackets:(tagRTCPPACKET*)arg1 withCount:(int)arg2 ;
-(unsigned)conferenceID;
-(unsigned)setRemoteVideoDestination:(void*)arg1 ;
-(unsigned)setLocalVideoDestination:(void*)arg1 ;
-(BOOL)vcVideoStreamReceiver:(id)arg1 didReceiveRemoteFrame:(CVBufferRef)arg2 atTime:(SCD_Struct_VC13)arg3 ;
-(int)setupSRTP:(tagHANDLE*)arg1 forVideo:(BOOL)arg2 ;
-(id)supportedVideoPayloads;
-(BOOL)configureVideoStreamWithConfiguration:(id)arg1 error:(id*)arg2 ;
-(void)destroyVideoModules;
@end

