/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:38:24 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/BSLogging.h>

@protocol OS_dispatch_queue, BSFileLoggerDelegate;
@class NSObject, NSString, NSMutableArray, NSMutableSet, NSDateFormatter;

@interface BSFileLogger : NSObject <BSLogging> {

	NSObject*<OS_dispatch_queue> _queue;
	NSString* _logPath;
	NSMutableArray* _recentLogs;
	NSMutableSet* _enabledCategories;
	NSDateFormatter* _memoryLogDateFormatter;
	BOOL _enabledByPreference;
	id<BSFileLoggerDelegate> _delegate;

}

@property (nonatomic,readonly) NSString * name; 
@property (getter=isEnabled,nonatomic,readonly) BOOL enabled; 
@property (nonatomic,readonly) int level; 
@property (nonatomic,retain,readonly) NSObject*<OS_dispatch_queue> queue;              //@synthesize queue=_queue - In the implementation block
@property (nonatomic,readonly) NSString * logPath; 
@property (nonatomic,readonly) unsigned long long logDestinations; 
@property (nonatomic,readonly) int maxLogCount; 
@property (nonatomic,readonly) int maxLogSize; 
@property (nonatomic,readonly) unsigned long long maxLogLinesInMemory; 
@property (nonatomic,readonly) NSString * logPreferenceDomain; 
@property (nonatomic,readonly) NSString * logPreferenceName; 
@property (nonatomic,readonly) BOOL shouldEnableOnInternalBuilds; 
@property (assign,nonatomic) id<BSFileLoggerDelegate> delegate;                        //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)logWithFormat:(id)arg1 ;
-(void)logWithFormat:(id)arg1 arguments:(char*)arg2 ;
-(BOOL)_queue_isEnabledForCategory:(id)arg1 ;
-(BOOL)isEnabledForCategory:(id)arg1 ;
-(void)_reloadFromDefaultsDictionary:(id)arg1 ;
-(void)_queue_appendLogForLevel:(int)arg1 category:(id)arg2 withFormat:(id)arg3 arguments:(char*)arg4 ;
-(id)composedLogForCategory:(id)arg1 destination:(unsigned long long)arg2 format:(id)arg3 arguments:(char*)arg4 ;
-(unsigned long long)maxLogLinesInMemory;
-(void)_appendLogForLevel:(int)arg1 category:(id)arg2 withFormat:(id)arg3 arguments:(char*)arg4 ;
-(void)_setLevel:(int)arg1 fromDefaults:(BOOL)arg2 ;
-(void)setDelegate:(id<BSFileLoggerDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<BSFileLoggerDelegate>)delegate;
-(NSString *)name;
-(BOOL)isEnabled;
-(int)level;
-(void)_setEnabled:(BOOL)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)_disableLogCategory:(id)arg1 ;
-(NSString *)logPath;
-(void)_setLevel:(int)arg1 ;
-(NSString *)logPreferenceName;
-(NSString *)logPreferenceDomain;
-(id)loggerForCatagory:(id)arg1 ;
-(id)logPrefixForCategory:(id)arg1 destination:(unsigned long long)arg2 ;
-(void)_enableLogCategory:(id)arg1 ;
-(void)reloadFromDefaults;
-(int)maxLogCount;
-(int)maxLogSize;
-(unsigned long long)logDestinations;
-(void)willBeginLoggingToPath:(id)arg1 ;
-(BOOL)shouldEnableOnInternalBuilds;
-(id)recentLogs;
-(BOOL)saveRecentLogsToTemporaryPath:(id*)arg1 ;
@end

