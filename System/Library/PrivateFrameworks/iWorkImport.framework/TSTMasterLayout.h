/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:59:54 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSTTableHiddenRowColumnProviding.h>
#import <iWorkImport/TSTTableInternalGeometryProviding.h>
#import <iWorkImport/TSTTableMergeRangeProviding.h>

@protocol OS_dispatch_group, TSTLayoutDynamicColumnMoveProtocol, TSTLayoutDynamicContentProtocol, TSTLayoutDynamicRowMoveProtocol, TSTLayoutDynamicCellFillProtocol;
@class TSKChangeNotifier, TSTTableInfo, TSTWPColumnCache, TSTDupContentCache, TSTWidthHeightCache, TSTHiddenRowsColumnsCache, NSMutableArray, NSObject, TSUWidthLimitedQueue, TSTStrokeDefaultVendor, NSPointerArray, TSTConcurrentMutableIndexSet, TSTCellRegion, TSTStrokeWidthCache, TSTRWRetainedPointerKeyDictionary, NSLock, TSDFill, NSMutableSet, TSUColor, TSDInfoGeometry, TSDLayoutGeometry, TSTCellSelection, TSTLayoutDynamicResizeInfo, TSTMergeRangeSortedSet, TSTTableModel, TSTLayout, NSIndexSet, NSString;

@interface TSTMasterLayout : NSObject <TSTTableHiddenRowColumnProviding, TSTTableInternalGeometryProviding, TSTTableMergeRangeProviding> {

	TSKChangeNotifier* mChangeNotifier;
	int mReferenceCount;
	TSTTableInfo* mTableInfo;
	TSTWPColumnCache* mCellIDToWPColumnCache;
	TSTDupContentCache* mDupContentCache;
	TSTWPColumnCache* mTempWPColumnCache;
	TSTWidthHeightCache* mWidthHeightCache;
	TSTHiddenRowsColumnsCache* mHiddenRowsColumnsCache;
	NSMutableArray* mChangeDescriptors;
	NSObject*<OS_dispatch_group> mLayoutInFlight;
	TSUWidthLimitedQueue* mLayoutQueue;
	unsigned mMaxConcurrentTasks;
	unsigned mNumCellsPerTask;
	BOOL mHeaderColumnsFrozen;
	BOOL mHeaderRowsFrozen;
	BOOL mHeaderColumnsRepeat;
	BOOL mHeaderRowsRepeat;
	BOOL mTableNameEnabled;
	CGRect mTableNameBounds;
	double mCachedTableNameHeight;
	unsigned short mCachedNumberOfHeaderColumns;
	unsigned long long mCachedMaxNumberOfColumns;
	unsigned short mCachedNumberOfHeaderRows;
	unsigned short mCachedNumberOfFooterRows;
	unsigned long long mCachedMaxNumberOfRows;
	TSTStrokeDefaultVendor* mStrokesDefaultVendor;
	NSPointerArray* mTopRowStrokes;
	NSPointerArray* mBottomRowStrokes;
	NSPointerArray* mLeftColumnStrokes;
	NSPointerArray* mRightColumnStrokes;
	TSTConcurrentMutableIndexSet* mSpillStrokeColumns;
	TSTCellRegion* mCellRegionForClearedMergeStrokes;
	opaque_pthread_rwlock_t mStrokesRWLock;
	TSTStrokeWidthCache* mColumnToStrokeWidthCache;
	TSTStrokeWidthCache* mRowToStrokeHeightCache;
	TSTRWRetainedPointerKeyDictionary* mParaStyleToHeightCache;
	NSLock* mLock;
	BOOL mBandedFillIsValid;
	BOOL mUseBandedFill;
	TSDFill* mBandedFillObject;
	int mTableEnvironment;
	int mTableRowsBehavior;
	BOOL mTableDefaultFontHeightsAreValid;
	double mTableDefaultFontHeightForArea[5];
	BOOL mInDynamicLayoutMode;
	NSMutableSet* mDynamicLayouts;
	double mDynamicAddOrRemoveColumnElementSize;
	double mDynamicAddOrRemoveRowElementSize;
	BOOL mDynamicBandedFill;
	BOOL mDynamicBandedFillSetting;
	int mDynamicColumnAdjustment;
	id<TSTLayoutDynamicColumnMoveProtocol> mDynamicColumnMoveDelegate;
	double mDynamicColumnTabSize;
	id<TSTLayoutDynamicContentProtocol> mDynamicContentDelegate;
	TSUColor* mDynamicFontColor;
	TSUColumnRowRect mDynamicFontColorCellRange;
	TSUColumnRowRect mDynamicHidingRowsCols;
	long long mDynamicHidingRowsColsDirection;
	TSUColumnRowRect mDynamicHidingContent;
	TSUColumnRowRect mDynamicHidingText;
	TSDInfoGeometry* mDynamicInfoGeometry;
	BOOL mDynamicRepResize;
	BOOL mDynamicRepressFrozenHeaderRows;
	BOOL mDynamicRepressFrozenHeaderColumns;
	BOOL mDynamicResizingColumns;
	TSUColumnRowRect mDynamicResizingColumnRange;
	double mDynamicResizingColumnAdjustment;
	BOOL mDynamicResizingRows;
	TSUColumnRowRect mDynamicResizingRowRange;
	double mDynamicResizingRowAdjustment;
	TSUColumnRowRect mDynamicRevealingRowsCols;
	long long mDynamicRevealingRowsColsDirection;
	int mDynamicRowAdjustment;
	id<TSTLayoutDynamicRowMoveProtocol> mDynamicRowMoveDelegate;
	double mDynamicRowTabSize;
	TSDLayoutGeometry* mDynamicSavedLayoutGeometry;
	TSTCellSelection* mDynamicSelection;
	double mDynamicWidthResize;
	double mDynamicHeightResize;
	double mDynamicTableNameResize;
	TSTLayoutDynamicResizeInfo* mDynamicResizeInfo;
	SCD_Struct_TS315 mDynamicSuppressingConditionalStylesCellID;
	id<TSTLayoutDynamicCellFillProtocol> mDynamicCellFillDelegate;
	BOOL mEmptyFilteredTable;
	TSTMergeRangeSortedSet* mMergeRanges;
	BOOL mProcessHiddenRowsForExport;
	CGSize mMaximumPartitionSize;

}

@property (assign,nonatomic) TSTTableInfo * tableInfo; 
@property (nonatomic,readonly) TSTTableModel * tableModel; 
@property (nonatomic,readonly) TSTStrokeDefaultVendor * strokesDefaultVendor; 
@property (nonatomic,readonly) TSTWPColumnCache * cellIDToWPColumnCache; 
@property (nonatomic,readonly) TSTDupContentCache * dupContentCache; 
@property (nonatomic,readonly) TSTWPColumnCache * tempWPColumnCache; 
@property (nonatomic,readonly) TSTWidthHeightCache * widthHeightCache; 
@property (nonatomic,readonly) TSTHiddenRowsColumnsCache * hiddenRowsColumnsCache; 
@property (assign,nonatomic) unsigned maxConcurrentTasks; 
@property (assign,nonatomic) unsigned numCellsPerTask; 
@property (nonatomic,readonly) BOOL useBandedFill; 
@property (nonatomic,readonly) TSDFill * bandedFillObject; 
@property (assign,nonatomic) int tableEnvironment; 
@property (nonatomic,readonly) int tableRowsBehavior; 
@property (nonatomic,readonly) BOOL inDynamicLayoutMode; 
@property (nonatomic,readonly) NSMutableSet * dynamicLayouts; 
@property (nonatomic,readonly) TSTLayout * dynamicLayout; 
@property (nonatomic,readonly) double dynamicAddOrRemoveColumnElementSize; 
@property (nonatomic,readonly) double dynamicAddOrRemoveRowElementSize; 
@property (nonatomic,readonly) BOOL dynamicBandedFill; 
@property (nonatomic,readonly) BOOL dynamicBandedFillSetting; 
@property (nonatomic,readonly) int dynamicColumnAdjustment; 
@property (nonatomic,readonly) id<TSTLayoutDynamicColumnMoveProtocol> dynamicColumnMoveDelegate; 
@property (nonatomic,readonly) double dynamicColumnTabSize; 
@property (nonatomic,readonly) id<TSTLayoutDynamicContentProtocol> dynamicContentDelegate; 
@property (nonatomic,readonly) TSUColor * dynamicFontColor; 
@property (nonatomic,readonly) TSUColumnRowRect dynamicFontColorCellRange; 
@property (assign,nonatomic) BOOL dynamicRepResize; 
@property (nonatomic,readonly) TSDInfoGeometry * dynamicInfoGeometry; 
@property (assign,nonatomic) double dynamicWidthResize; 
@property (assign,nonatomic) double dynamicHeightResize; 
@property (nonatomic,readonly) BOOL dynamicResizingColumns; 
@property (nonatomic,readonly) TSUColumnRowRect dynamicResizingColumnRange; 
@property (nonatomic,readonly) double dynamicResizingColumnAdjustment; 
@property (nonatomic,readonly) BOOL dynamicResizingRows; 
@property (nonatomic,readonly) TSUColumnRowRect dynamicResizingRowRange; 
@property (nonatomic,readonly) double dynamicResizingRowAdjustment; 
@property (nonatomic,readonly) int dynamicRowAdjustment; 
@property (nonatomic,readonly) id<TSTLayoutDynamicRowMoveProtocol> dynamicRowMoveDelegate; 
@property (nonatomic,readonly) double dynamicRowTabSize; 
@property (nonatomic,copy) TSDLayoutGeometry * dynamicSavedLayoutGeometry; 
@property (nonatomic,readonly) TSTCellSelection * dynamicSelection; 
@property (nonatomic,readonly) double dynamicTableNameResize; 
@property (nonatomic,readonly) SCD_Struct_TS315 dynamicSuppressingConditionalStylesCellID; 
@property (nonatomic,readonly) id<TSTLayoutDynamicCellFillProtocol> dynamicCellFillDelegate; 
@property (nonatomic,readonly) BOOL emptyFilteredTable; 
@property (nonatomic,readonly) NSMutableArray * changeDescriptors; 
@property (nonatomic,readonly) BOOL isGrouped; 
@property (nonatomic,retain) TSTMergeRangeSortedSet * mergeRanges; 
@property (nonatomic,retain) TSKChangeNotifier * changeNotifier; 
@property (assign,nonatomic) BOOL processHiddenRowsForExport; 
@property (assign,nonatomic) CGSize maximumPartitionSize; 
@property (nonatomic,readonly) NSIndexSet * visibleRowIndices; 
@property (nonatomic,readonly) NSIndexSet * visibleColumnIndices; 
@property (nonatomic,readonly) NSIndexSet * hiddenRowIndices; 
@property (nonatomic,readonly) NSIndexSet * hiddenColumnIndices; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned short numberOfRows; 
@property (nonatomic,readonly) unsigned short numberOfColumns; 
@property (nonatomic,readonly) unsigned short numberOfHeaderRows; 
@property (nonatomic,readonly) unsigned short numberOfFooterRows; 
@property (nonatomic,readonly) unsigned short numberOfHeaderColumns; 
+(CGSize)tableNameTextSize:(id)arg1 ;
+(double)effectiveTableNameHeightForModel:(id)arg1 ;
+(id)tableNameTextEngine:(id)arg1 ;
-(unsigned short)numberOfFooterRows;
-(TSUColumnRowRect)expandCellRangeToCoverMergedCells:(TSUColumnRowRect)arg1 ;
-(TSTTableModel *)tableModel;
-(TSKChangeNotifier *)changeNotifier;
-(double)tableNameHeight;
-(unsigned long long)tableAreaForCellID:(SCD_Struct_TS315)arg1 ;
-(unsigned short)numberOfHeaderRows;
-(unsigned short)numberOfHeaderColumns;
-(unsigned char)visibleColumnBeforeColumn:(unsigned char)arg1 ;
-(unsigned char)visibleColumnAfterColumn:(unsigned char)arg1 ;
-(unsigned short)visibleRowBeforeRow:(unsigned short)arg1 ;
-(unsigned short)visibleRowAfterRow:(unsigned short)arg1 ;
-(BOOL)isRowHidden:(unsigned short)arg1 ;
-(id)expandCellRegionToCoverMergedCells:(id)arg1 ;
-(unsigned short)visibleRowBeforeAndIncludingRow:(unsigned short)arg1 ;
-(unsigned short)visibleRowAfterAndIncludingRow:(unsigned short)arg1 ;
-(unsigned char)visibleColumnBeforeAndIncludingColumn:(unsigned char)arg1 ;
-(unsigned char)visibleColumnAfterAndIncludingColumn:(unsigned char)arg1 ;
-(BOOL)anyRowsHiddenInCellRange:(TSUColumnRowRect)arg1 ;
-(BOOL)anyColumnsHiddenInCellRange:(TSUColumnRowRect)arg1 ;
-(id)allMergeRanges;
-(id)mergeRangesForCellRange:(TSUColumnRowRect)arg1 ;
-(id)mergeRangesForCellRegion:(id)arg1 ;
-(BOOL)useBandedFill;
-(TSDFill *)bandedFillObject;
-(void)setTableInfo:(TSTTableInfo *)arg1 ;
-(void)setChangeNotifier:(TSKChangeNotifier *)arg1 ;
-(TSTDupContentCache *)dupContentCache;
-(TSTWPColumnCache *)cellIDToWPColumnCache;
-(TSTTableInfo *)tableInfo;
-(void)invalidateTableNameHeight;
-(id)newLayoutHint;
-(BOOL)isDynamicallyChangingInfoGeometry;
-(TSDInfoGeometry *)dynamicInfoGeometry;
-(void)validateLayoutHint:(id)arg1 ;
-(void)addChangeDescriptor:(id)arg1 ;
-(BOOL)isDynamicallyColumnTabResizing;
-(double)dynamicColumnTabSize;
-(BOOL)isDynamicallyRowTabResizing;
-(double)dynamicRowTabSize;
-(BOOL)isEntireCellRangeHidden:(TSUColumnRowRect)arg1 ;
-(BOOL)isDynamicallyRepressingFrozenHeaderRows;
-(BOOL)isDynamicallyRepressingFrozenHeaderColumns;
-(BOOL)inDynamicLayoutMode;
-(BOOL)dynamicRepResize;
-(BOOL)isDynamicallyChangingContent;
-(id<TSTLayoutDynamicContentProtocol>)dynamicContentDelegate;
-(BOOL)cell:(id*)arg1 forCellID:(SCD_Struct_TS315)arg2 ;
-(SCD_Struct_TS315)modelCellIDForLayoutCellID:(SCD_Struct_TS315)arg1 ;
-(BOOL)isDynamicallyChangingRowOrColumnCount;
-(id)validateCellForDrawing:(SCD_Struct_TS315)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(BOOL)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned long long)arg8 pageCount:(unsigned long long)arg9 ;
-(BOOL)isDynamicallyHidingContentOfCellID:(SCD_Struct_TS315)arg1 ;
-(BOOL)isDynamicallyHidingRowsColsCellID:(SCD_Struct_TS315)arg1 ;
-(BOOL)isDynamicallyHidingTextOfCellID:(SCD_Struct_TS315)arg1 ;
-(void)clearDynamicStrokesForCellRange:(TSUColumnRowRect)arg1 ;
-(UIEdgeInsets)paddingForCellID:(SCD_Struct_TS315)arg1 ;
-(double)strokeHeightOfGridRow:(unsigned)arg1 beginColumn:(unsigned)arg2 endColumn:(unsigned)arg3 ;
-(double)strokeWidthOfGridColumn:(unsigned)arg1 beginRow:(unsigned)arg2 endRow:(unsigned)arg3 ;
-(void)enumerateMergedStrokesForGridColumn:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(void)enumerateMergedStrokesForGridRow:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(void)enumerateMergedStrokesAndCapsForGridColumn:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(void)enumerateMergedStrokesAndCapsForGridRow:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(double)strokeWidthOfGridColumn:(unsigned)arg1 atRowIndex:(unsigned)arg2 ;
-(double)strokeHeightOfGridRow:(unsigned)arg1 atColumnIndex:(unsigned)arg2 ;
-(BOOL)isDynamicallyHidingRowsCols;
-(BOOL)isDynamicallyHidingRowsCols:(long long)arg1 rowColIndex:(unsigned short)arg2 ;
-(TSTMergeRangeSortedSet *)mergeRanges;
-(void)addChangeDescriptorWithType:(int)arg1 andCellRange:(TSUColumnRowRect)arg2 andStrokeRange:(TSUColumnRowRect)arg3 ;
-(void)validateStrokesArrays;
-(void)p_validateStrokesForRegion:(id)arg1 ;
-(void)invalidateStrokeDefaults;
-(TSTWidthHeightCache *)widthHeightCache;
-(double)calculatedTableNameHeight;
-(double)calculatedTableNameHeightIncludingDynamicResize:(BOOL)arg1 ;
-(BOOL)isDynamicallyResizingTableName;
-(double)dynamicTableNameResize;
-(BOOL)emptyFilteredTable;
-(TSTHiddenRowsColumnsCache *)hiddenRowsColumnsCache;
-(NSIndexSet *)visibleColumnIndices;
-(NSIndexSet *)visibleRowIndices;
-(BOOL)isDynamicallyMovingColumns;
-(id<TSTLayoutDynamicColumnMoveProtocol>)dynamicColumnMoveDelegate;
-(BOOL)isDynamicallyMovingRows;
-(id<TSTLayoutDynamicRowMoveProtocol>)dynamicRowMoveDelegate;
-(id)modelCellRegionForLayoutCellRegion:(id)arg1 ;
-(SCD_Struct_TS315)layoutCellIDForModelCellID:(SCD_Struct_TS315)arg1 ;
-(unsigned char)modelColumnForLayoutColumn:(unsigned char)arg1 ;
-(BOOL)isDynamicallyResizing:(long long)arg1 rowColIndex:(unsigned short)arg2 ;
-(int)tableRowsBehavior;
-(unsigned short)modelRowForLayoutRow:(unsigned short)arg1 ;
-(UIEdgeInsets)defaultPaddingForCellID:(SCD_Struct_TS315)arg1 ;
-(id)newTextEngineForCell:(id)arg1 atCellID:(SCD_Struct_TS315)arg2 ;
-(double)fontHeightOfParagraphStyle:(id)arg1 ;
-(void)addChangeDescriptorWithType:(int)arg1 andCellRange:(TSUColumnRowRect)arg2 ;
-(void)invalidateBandedFill;
-(id)p_strokesForGridColumn:(unsigned)arg1 isLeft:(BOOL)arg2 takeStrokeWriteLock:(BOOL)arg3 ;
-(BOOL)adjustGridColumnForVisibility:(unsigned*)arg1 isLeft:(BOOL)arg2 ;
-(id)p_strokesForGridRow:(unsigned)arg1 isTop:(BOOL)arg2 takeStrokeWriteLock:(BOOL)arg3 ;
-(BOOL)adjustGridRowForVisibility:(unsigned*)arg1 isTop:(BOOL)arg2 ;
-(void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridRow:(unsigned)arg3 isTop:(BOOL)arg4 beginColumn:(unsigned)arg5 endColumn:(unsigned)arg6 ;
-(void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridColumn:(unsigned)arg3 isLeft:(BOOL)arg4 beginRow:(unsigned)arg5 endRow:(unsigned)arg6 ;
-(id)mergedStrokesForGridRow:(unsigned)arg1 ;
-(id)mergedStrokesForGridColumn:(unsigned)arg1 ;
-(void)setClearedStrokeForGridColumn:(unsigned)arg1 beginRow:(unsigned)arg2 endRow:(unsigned)arg3 ;
-(void)setClearedStrokeForGridRow:(unsigned)arg1 beginColumn:(unsigned)arg2 endColumn:(unsigned)arg3 ;
-(void)invalidateStrokeSpills;
-(BOOL)isDynamicallyChangingRowCount;
-(NSIndexSet *)hiddenColumnIndices;
-(NSIndexSet *)hiddenRowIndices;
-(void)p_invalidateClearedStrokesForCellRegion:(id)arg1 ;
-(void)p_clearStrokesForMergesInCellRegion:(id)arg1 ;
-(BOOL)isDynamicallySettingBandedFill;
-(BOOL)dynamicBandedFill;
-(BOOL)dynamicBandedFillSetting;
-(void)measureTextForLayoutState:(id)arg1 ;
-(unsigned short)layoutRowForModelRow:(unsigned short)arg1 ;
-(unsigned char)layoutColumnForModelColumn:(unsigned char)arg1 ;
-(BOOL)isDynamicallyRevealingRowsCols:(long long)arg1 rowColIndex:(unsigned short)arg2 ;
-(BOOL)processHiddenRowsForExport;
-(BOOL)isRowUserHidden:(unsigned short)arg1 ;
-(BOOL)anyRowsUserHiddenInCellRange:(TSUColumnRowRect)arg1 ;
-(unsigned short)nonUserHiddenRowAfterAndIncludingRow:(unsigned short)arg1 ;
-(NSMutableSet *)dynamicLayouts;
-(BOOL)isDynamicallyChangingColumnCount;
-(NSMutableArray *)changeDescriptors;
-(void)validateBandedFill;
-(void)validateTableRowsBehavior;
-(void)validateDynamicResizeInfo;
-(void)validateChangeDescriptorQueue;
-(void)invalidateDefaultFontHeights;
-(void)validateRowVisibility:(id)arg1 ;
-(void)validateMasterLayoutForChangeDescriptors:(id)arg1 ;
-(void)validateDefaultFontHeights;
-(void)validateStrokesForChangeDescriptors:(id)arg1 ;
-(void)validateFittingInfoForChangeDescriptors:(id)arg1 rowsNeedingFittingInfo:(id)arg2 ;
-(void)waitForLayoutToComplete;
-(void)updateWHCForMergeRanges;
-(UIEdgeInsets)edgeInsetsFromPadding:(id)arg1 ;
-(void)queueCellForValidation:(TSUColumnRowRect)arg1 cell:(id)arg2 modelMergeRange:(TSUColumnRowRect)arg3 wrap:(BOOL)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 prop:(BOOL)arg7 layoutCacheFlags:(int)arg8 layoutTask:(id)arg9 ;
-(void)p_validateFittingInfoForEmptyMergeRange:(TSUColumnRowRect)arg1 ;
-(SCD_Struct_TS315)p_validateFittingInfoForEmptyCellsBetween:(SCD_Struct_TS315)arg1 andCellID:(SCD_Struct_TS315)arg2 inRange:(TSUColumnRowRect)arg3 widthHeightCollection:(id)arg4 ;
-(void)validateFittingInfoForCell:(id)arg1 cellID:(SCD_Struct_TS315)arg2 mergeRange:(TSUColumnRowRect)arg3 setFitting:(BOOL)arg4 layoutTask:(id)arg5 widthHeightCollection:(id)arg6 ;
-(void)processLayoutTask:(id)arg1 ;
-(void)validateFittingInfoWithCellRangeWorker:(TSUColumnRowRect)arg1 ;
-(void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(SCD_Struct_TS315)arg1 andEndCellID:(SCD_Struct_TS315)arg2 widthHeightCollection:(id)arg3 ;
-(id)mergeRangesProppingRowHeightsInRegion:(id)arg1 ;
-(id)p_validationFittingCellRegionForColumnsDeleted:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForColumnsInserted:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForColumnsVisibility:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForRowsDeleted:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForRowsInserted:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForRangeMergeUnmerge:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingForChangeDescriptorType:(int)arg1 regionFromChangeDescriptor:(id)arg2 currentRegionToValidate:(id)arg3 ;
-(void)validateFittingInfoWithCellRange:(TSUColumnRowRect)arg1 ;
-(unsigned)numCellsPerTask;
-(id)accountingParagraphStylePropertyMapForCell:(id)arg1 atCellID:(SCD_Struct_TS315)arg2 ;
-(BOOL)isDynamicallyChangingFontColorOfCellID:(SCD_Struct_TS315)arg1 ;
-(TSUColor *)dynamicFontColor;
-(void)setProcessHiddenRowsForExport:(BOOL)arg1 ;
-(id)tableStrokeProvider;
-(id)customStrokeProvider;
-(BOOL)hintIsValid:(id)arg1 ;
-(void)resetModelHeightWidthCache;
-(void)clearModelHeightWidthCacheForCellRange:(TSUColumnRowRect)arg1 ;
-(id)tableNameTextEngine;
-(CGSize)tableNameTextSize;
-(void)setStrokeSpillForRightGridColumn:(unsigned)arg1 leftGridColumn:(unsigned)arg2 inRow:(unsigned)arg3 ;
-(void)setDynamicCellBorder:(id)arg1 forCellID:(SCD_Struct_TS315)arg2 ;
-(void)strokesForCellID:(SCD_Struct_TS315)arg1 top:(id*)arg2 left:(id*)arg3 bottom:(id*)arg4 right:(id*)arg5 ;
-(BOOL)shouldRowUseBandedFill:(unsigned short)arg1 ;
-(id)layoutCellRegionForModelCellRegion:(id)arg1 ;
-(BOOL)isDynamicallyResizing:(long long)arg1 ;
-(BOOL)isDynamicallyResizingCellID:(SCD_Struct_TS315)arg1 ;
-(TSUColumnRowRect)expandCellRangeToVisibleNeighbors:(TSUColumnRowRect)arg1 ;
-(unsigned short)firstEmptyBodyRow;
-(BOOL)containsAnyContentInRange:(TSUColumnRowRect)arg1 ;
-(TSTLayout *)dynamicLayout;
-(BOOL)isDynamicallyRevealingRowsCols;
-(void)updateDynamicTableNameSize:(double)arg1 ;
-(BOOL)isDynamicallyChangingSelection;
-(id<TSTLayoutDynamicCellFillProtocol>)dynamicCellFillDelegate;
-(BOOL)isDynamicallyChangingCellFill;
-(void)captureDynamicResizeInfo;
-(void)updateDynamicResizeInfo:(id)arg1 ;
-(void)invalidateDynamicResizeInfo;
-(void)validateFittingWidthsForRegion:(id)arg1 ;
-(void)setMaxConcurrentTasks:(unsigned)arg1 ;
-(TSTStrokeDefaultVendor *)strokesDefaultVendor;
-(TSTWPColumnCache *)tempWPColumnCache;
-(int)tableEnvironment;
-(void)setTableEnvironment:(int)arg1 ;
-(unsigned)maxConcurrentTasks;
-(void)setNumCellsPerTask:(unsigned)arg1 ;
-(double)dynamicAddOrRemoveColumnElementSize;
-(double)dynamicAddOrRemoveRowElementSize;
-(int)dynamicColumnAdjustment;
-(TSUColumnRowRect)dynamicFontColorCellRange;
-(void)setDynamicRepResize:(BOOL)arg1 ;
-(double)dynamicHeightResize;
-(void)setDynamicHeightResize:(double)arg1 ;
-(double)dynamicWidthResize;
-(void)setDynamicWidthResize:(double)arg1 ;
-(BOOL)dynamicResizingColumns;
-(double)dynamicResizingColumnAdjustment;
-(TSUColumnRowRect)dynamicResizingColumnRange;
-(BOOL)dynamicResizingRows;
-(double)dynamicResizingRowAdjustment;
-(TSUColumnRowRect)dynamicResizingRowRange;
-(int)dynamicRowAdjustment;
-(TSDLayoutGeometry *)dynamicSavedLayoutGeometry;
-(void)setDynamicSavedLayoutGeometry:(TSDLayoutGeometry *)arg1 ;
-(TSTCellSelection *)dynamicSelection;
-(SCD_Struct_TS315)dynamicSuppressingConditionalStylesCellID;
-(void)setMergeRanges:(TSTMergeRangeSortedSet *)arg1 ;
-(CGSize)maximumPartitionSize;
-(void)setMaximumPartitionSize:(CGSize)arg1 ;
-(BOOL)isGrouped;
-(id)initWithInfo:(id)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(unsigned short)numberOfColumns;
-(unsigned short)numberOfRows;
-(void)validate;
-(BOOL)isColumnHidden:(unsigned char)arg1 ;
@end

