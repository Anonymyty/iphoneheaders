/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:59:53 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSCEFormulaOwning.h>

@class TSTTableModel, TSCECalculationEngine, TSTFormulaStore, TSTMergeRangeCache, NSString;

@interface TSTMergeOwner : NSObject <TSCEFormulaOwning> {

	TSTTableModel* _tableModel;
	TSCECalculationEngine* _calculationEngine;
	CFUUIDRef _ownerID;
	TSTFormulaStore* _mergeRangeStorage;
	TSTMergeRangeCache* _mergeRangeCache;
	unordered_map<TSUColumnRowCoordinate, TSUColumnRowCoordinate, std::__1::hash<TSUColumnRowCoordinate>, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowCoordinate> > >* _mergeOriginMap;

}

@property (nonatomic,readonly) TSTMergeRangeCache * mergeRangeCache;              //@synthesize mergeRangeCache=_mergeRangeCache - In the implementation block
@property (nonatomic,readonly) TSTFormulaStore * formulaStore;                    //@synthesize mergeRangeStorage=_mergeRangeStorage - In the implementation block
@property (nonatomic,readonly) TSTTableModel * tableModel;                        //@synthesize tableModel=_tableModel - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)releaseForCalculationEngine:(id)arg1 ;
-(void)retainForCalculationEngine:(id)arg1 ;
-(SCD_Struct_TS342)recalculateForCalculationEngine:(id)arg1 formulaID:(SCD_Struct_TS320)arg2 isInCycle:(BOOL)arg3 hasCalculatedPrecedents:(BOOL)arg4 ;
-(void)writeResultsForCalculationEngine:(id)arg1 ;
-(void)invalidateForCalculationEngine:(id)arg1 ;
-(TSUColumnRowRect)expandCellRangeToCoverMergedCells:(TSUColumnRowRect)arg1 ;
-(void)saveToArchive:(MergeOwnerArchive*)arg1 archiver:(id)arg2 ;
-(int)registerWithCalculationEngine:(id)arg1 ;
-(void)unregisterFromCalculationEngine;
-(void)rewriteForCalculationEngine:(id)arg1 formulaID:(SCD_Struct_TS320)arg2 rewriteSpec:(id)arg3 ;
-(void)beginRewriteForCalculationEngine:(id)arg1 spec:(id)arg2 ;
-(TSTTableModel *)tableModel;
-(id)initWithTableModel:(id)arg1 ;
-(vector<TSUColumnRowRect, std::__1::allocator<TSUColumnRowRect> >*)mergeRangesIntersectingCellRegion:(id)arg1 ;
-(id)initWithArchive:(const MergeOwnerArchive*)arg1 unarchiver:(id)arg2 forTableModel:(id)arg3 ;
-(id)mergeActionForRegion:(id)arg1 ;
-(void)rewriteMergesForInsertedRange:(NSRange)arg1 uids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 isRows:(BOOL)arg3 ;
-(void)rewriteMergesForRemovedRange:(NSRange)arg1 uids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 isRows:(BOOL)arg3 ;
-(BOOL)insertMergeRange:(TSUColumnRowRect)arg1 ;
-(void)removeMergeRange:(TSUColumnRowRect)arg1 ;
-(TSUColumnRowRect)mergedRangeForCellID:(SCD_Struct_TS315)arg1 ;
-(BOOL)partiallyIntersectsCellRange:(TSUColumnRowRect)arg1 ;
-(id)mergedGridIndicesForDimension:(long long)arg1 ;
-(vector<TSUColumnRowRect, std::__1::allocator<TSUColumnRowRect> >*)mergeRangesIntersectingRange:(TSUColumnRowRect)arg1 ;
-(id)expandCellRegionToCoverMergedCells:(id)arg1 ;
-(void)setOwnerID:(CFUUIDRef)arg1 ;
-(void)remapTableUIDsInFormulasWithMap:(const TSUUuidMap*)arg1 calcEngine:(id)arg2 ;
-(void)enumerateMergeFormulasUsingBlock:(/*^block*/id)arg1 ;
-(unsigned long long)markForRollback;
-(void)rollbackToMark:(unsigned long long)arg1 ;
-(id)mergeIndexesForRange:(TSUColumnRowRect)arg1 ;
-(id)mergeIndexesForCellRegion:(id)arg1 ;
-(vector<TSUColumnRowRect, std::__1::allocator<TSUColumnRowRect> >*)mergeRanges;
-(BOOL)partiallyIntersectsCellRegion:(id)arg1 ;
-(BOOL)hasRangeSpanningRowsForCellRange:(TSUColumnRowRect)arg1 ;
-(TSUColumnRowRect)rangeFromMergeFormula:(const TSCEFormula*)arg1 atCoord:(const SCD_Struct_TS315*)arg2 ;
-(id)initWithTableModel:(id)arg1 ownerID:(CFUUIDRef)arg2 ;
-(void)loadMergeCache;
-(void)p_updateOriginMapWithSourceCellID:(SCD_Struct_TS315)arg1 destCellID:(SCD_Struct_TS315)arg2 ;
-(void)resetMergeCache;
-(void)p_moveCellFromCellID:(SCD_Struct_TS315)arg1 toCellID:(SCD_Struct_TS315)arg2 ;
-(TSCEFormula*)p_createFormulaForRange:(TSUColumnRowRect)arg1 atIndex:(unsigned long long)arg2 ;
-(id)mergeActionForRegion:(id)arg1 nonOriginPartialsOnly:(BOOL)arg2 ;
-(TSTFormulaStore *)formulaStore;
-(BOOL)isValidMergeRange:(TSUColumnRowRect)arg1 ;
-(void)createMergeRangeStorage;
-(void)reloadMergeCacheForIndexes:(id)arg1 ;
-(void)p_dirtyCellsForMerge:(const TSUColumnRowRect*)arg1 ;
-(id)p_shrinkReturningInverseForAction:(id)arg1 ;
-(id)p_growReturningInverseForAction:(id)arg1 ;
-(TSTMergeRangeCache *)mergeRangeCache;
-(id)p_removeRangesReturningInverse:(const vector<TSTCellUIDRange, std::__1::allocator<TSTCellUIDRange> >*)arg1 ;
-(id)p_shrinkMergesAtIndexes:(id)arg1 intersectedByRegion:(id)arg2 ;
-(id)shrinkReturningInverseForRegion:(id)arg1 ;
-(TSUColumnRowRect)p_growRangeFrom:(TSUColumnRowRect)arg1 toDesired:(TSUColumnRowRect)arg2 ;
-(void)upgradeFromMergeRegionMap;
-(void)resetMergeOriginMap;
-(unsigned long long)maxMergeFormulaIndex;
-(id)performActionReturningInverse:(id)arg1 ;
-(id)removeReturningInverseForRegion:(id)arg1 ;
-(void)enumerateMergesUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateMergesIntersectingRange:(TSUColumnRowRect)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)enumerateMergesIntersectingCellRegion:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)insertAll:(id)arg1 ;
-(BOOL)hasMergeRangesIntersectingCellRegion:(id)arg1 ;
-(id)regionForMergeRangesIntersectingRegion:(id)arg1 ;
-(SCD_Struct_TS315)mergeOriginForCellID:(SCD_Struct_TS315)arg1 ;
-(TSUColumnRowRect)rewroteFormula:(TSCEFormula*)arg1 atCoordinate:(SCD_Struct_TS315*)arg2 withRewriteSpec:(id)arg3 isUndo:(BOOL)arg4 ;
-(BOOL)find:(TSUColumnRowRect)arg1 ;
-(void)dealloc;
-(unsigned long long)count;
-(NSString *)description;
-(CFUUIDRef)ownerID;
@end

