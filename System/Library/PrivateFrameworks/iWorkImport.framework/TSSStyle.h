/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:59:51 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <iWorkImport/TSSPropertyValueValidator.h>
#import <iWorkImport/TSSStyleObject.h>
#import <iWorkImport/TSSPropertySource.h>
#import <iWorkImport/TSSStyleClient.h>
#import <iWorkImport/TSKModel.h>
#import <iWorkImport/TSKTransformableObject.h>

@class TSSPropertyMap, NSString, TSSStylesheet, TSURetainedPointerSet;

@interface TSSStyle : TSPObject <NSCopying, TSSPropertyValueValidator, TSSStyleObject, TSSPropertySource, TSSStyleClient, TSKModel, TSKTransformableObject> {

	TSSPropertyMap* mOverridePropertyMap;
	NSString* mName;
	NSString* mStyleIdentifier;
	TSSStyle* mParent;
	BOOL mIsVariation;
	TSSStylesheet* mStylesheet;

}

@property (nonatomic,copy) NSString * name; 
@property (nonatomic,readonly) NSString * styleIdentifier; 
@property (nonatomic,readonly) TSSStyle * parent; 
@property (nonatomic,readonly) TSSStyle * rootAncestor; 
@property (nonatomic,readonly) TSSStyle * baseStyleForVariation; 
@property (nonatomic,readonly) TSSStyle * firstIdentifiedAncestor; 
@property (nonatomic,readonly) TSSStyle * firstNamedAncestor; 
@property (nonatomic,readonly) TSSStyle * rootIdentifiedAncestor; 
@property (nonatomic,readonly) BOOL isVariation; 
@property (nonatomic,readonly) BOOL isNamed; 
@property (nonatomic,readonly) BOOL isIdentified; 
@property (nonatomic,readonly) TSSStylesheet * stylesheet; 
@property (nonatomic,readonly) TSSPropertyMap * overridePropertyMap; 
@property (nonatomic,readonly) NSString * contentTag; 
@property (nonatomic,readonly) TSURetainedPointerSet * children; 
@property (nonatomic,readonly) TSURetainedPointerSet * descendants; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(CTFontRef)pCreateFontWithName:(id)arg1 fontSize:(double)arg2 ;
+(id)pReplacementForMissingFontName:(id)arg1 outBold:(int*)arg2 outItalic:(int*)arg3 outQuiet:(BOOL*)arg4 ;
+(id)validateFontName:(id)arg1 size:(double)arg2 bold:(BOOL)arg3 italic:(BOOL)arg4 checkedFontMap:(id)arg5 newFontName:(id*)arg6 newBold:(BOOL*)arg7 newItalic:(BOOL*)arg8 ;
+(id)validateFontInPropertyMap:(id)arg1 parentStyle:(id)arg2 checkedFontMap:(id)arg3 ;
+(BOOL)needsObjectUUID;
+(id)defaultStyleWithContext:(id)arg1 ;
+(id)defaultValueForProperty:(int)arg1 ;
+(int)defaultIntValueForProperty:(int)arg1 ;
+(float)defaultFloatValueForProperty:(int)arg1 ;
+(id)boxedDefaultValueForProperty:(int)arg1 ;
+(id)defaultPropertyMap;
+(BOOL)validateObjectValue:(id*)arg1 withClass:(Class)arg2 forProperty:(int)arg3 ;
+(BOOL)validateFloatValue:(float*)arg1 forProperty:(int)arg2 ;
+(id)propertiesAllowingNSNull;
+(double)defaultDoubleValueForProperty:(int)arg1 ;
+(BOOL)validateIntValue:(int*)arg1 forProperty:(int)arg2 ;
+(BOOL)validateIntValue:(int*)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4 ;
+(BOOL)validateIntValueAsBool:(int*)arg1 forProperty:(int)arg2 ;
+(BOOL)validateDoubleValue:(double*)arg1 forProperty:(int)arg2 ;
+(double)fontSizeForFontSize:(double)arg1 scalingFactor:(double)arg2 ;
+(id)description;
+(id)properties;
-(BOOL)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1 ;
-(void)setBoolValue:(BOOL)arg1 forProperty:(int)arg2 ;
-(BOOL)boolValueForProperty:(int)arg1 defaultValue:(BOOL)arg2 ;
-(id)validateFontWithCheckedFontMap:(id)arg1 ;
-(void)loadCharacterStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const CharacterStylePropertiesArchive*)arg2 unarchiver:(id)arg3 ;
-(void)loadParagraphStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const ParagraphStylePropertiesArchive*)arg2 unarchiver:(id)arg3 ;
-(void)saveCharacterStylePropertiesToArchive:(CharacterStylePropertiesArchive*)arg1 archiver:(id)arg2 ;
-(void)saveParagraphStylePropertiesToArchive:(ParagraphStylePropertiesArchive*)arg1 archiver:(id)arg2 ;
-(id)componentRootObject;
-(BOOL)allowsImplicitComponentOwnership;
-(void)saveToArchive:(StyleArchive*)arg1 archiver:(id)arg2 ;
-(void)loadFromArchive:(const StyleArchive*)arg1 unarchiver:(id)arg2 ;
-(void)constrainShadowForSwatchGeneration;
-(void)constrainStrokeForSwatchGeneration;
-(void)fadeReflectionForSwatchGeneration;
-(id)constrainShapeStyleForContext:(id)arg1 ;
-(id)copyWithContext:(id)arg1 ;
-(id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(BOOL)arg4 ;
-(TSSStyle *)rootIdentifiedAncestor;
-(NSString *)styleIdentifier;
-(TSSStyle *)rootAncestor;
-(BOOL)isNamed;
-(NSString *)contentTag;
-(BOOL)isIdentified;
-(id)referencedStyles;
-(void)replaceReferencedStylesUsingBlock:(/*^block*/id)arg1 ;
-(TSSPropertyMap *)overridePropertyMap;
-(BOOL)overridesProperty:(int)arg1 ;
-(void)removeValueForProperty:(int)arg1 ;
-(int)intValueForProperty:(int)arg1 ;
-(TSSStyle *)baseStyleForVariation;
-(BOOL)definesProperty:(int)arg1 ;
-(void)setFloatValue:(float)arg1 forProperty:(int)arg2 ;
-(void)setIntValue:(int)arg1 forProperty:(int)arg2 ;
-(BOOL)containsProperty:(int)arg1 ;
-(float)floatValueForProperty:(int)arg1 ;
-(unsigned long long)overrideCount;
-(id)fullPropertyMap;
-(id)copyWithZone:(NSZone*)arg1 context:(id)arg2 ;
-(id)boxedValueForProperty:(int)arg1 ;
-(BOOL)hasEqualPropertyValues:(id)arg1 ;
-(id)copyFlattenedWithContext:(id)arg1 ;
-(id)boxedObjectForProperty:(int)arg1 ;
-(void)setBoxedValue:(id)arg1 forProperty:(int)arg2 ;
-(void)setValuesForProperties:(id)arg1 ;
-(int)overrideIntValueForProperty:(int)arg1 ;
-(BOOL)isVariation;
-(BOOL)validateObjectValue:(id*)arg1 withClass:(Class)arg2 forProperty:(int)arg3 ;
-(BOOL)validateFloatValue:(float*)arg1 forProperty:(int)arg2 ;
-(id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(CGAffineTransform)arg3 ;
-(double)CGFloatValueForProperty:(int)arg1 ;
-(TSSStyle *)firstIdentifiedAncestor;
-(double)doubleValueForProperty:(int)arg1 ;
-(void)setDoubleValue:(double)arg1 forProperty:(int)arg2 ;
-(void)setCGFloatValue:(double)arg1 forProperty:(int)arg2 ;
-(BOOL)isEqualToStyle:(id)arg1 ignoreObjectContext:(BOOL)arg2 ;
-(void)setOverridePropertyMap:(TSSPropertyMap *)arg1 ;
-(id)copyPropertyMap;
-(id)overrideValueForProperty:(int)arg1 ;
-(float)overrideFloatValueForProperty:(int)arg1 ;
-(double)overrideDoubleValueForProperty:(int)arg1 ;
-(id)propertyMapIgnoringStyle:(id)arg1 ;
-(BOOL)hasEqualValues:(id)arg1 forProperties:(id)arg2 ;
-(BOOL)p_hasEqualValuesTo:(id)arg1 forProperty:(int)arg2 ;
-(BOOL)isDescendentOf:(id)arg1 ;
-(BOOL)isAncestorOf:(id)arg1 ;
-(BOOL)validateIntValue:(int*)arg1 forProperty:(int)arg2 ;
-(BOOL)validateIntValue:(int*)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4 ;
-(BOOL)validateIntValueAsBool:(int*)arg1 forProperty:(int)arg2 ;
-(BOOL)validateDoubleValue:(double*)arg1 forProperty:(int)arg2 ;
-(BOOL)transformsFontSizes;
-(void)setStyleIdentifier:(NSString *)arg1 ;
-(id)copyWithContext:(id)arg1 includeParentProperties:(BOOL)arg2 ;
-(BOOL)overridesAnyProperty;
-(id)overriddenProperties;
-(id)boxedOverrideValueForProperty:(int)arg1 ;
-(double)overrideCGFloatValueForProperty:(int)arg1 ;
-(id)overridePropertyMapWithPropertyMap:(id)arg1 overridePropertyMap:(id)arg2 collapseSourceOverrides:(BOOL)arg3 ;
-(id)newOverridePropertyMapWithPropertyMap:(id)arg1 ;
-(BOOL)hasEqualValuesToPropertyMap:(id)arg1 forProperties:(id)arg2 ;
-(BOOL)overridePropertyMapIsEqualTo:(id)arg1 ;
-(TSSStyle *)firstNamedAncestor;
-(BOOL)isChildOf:(id)arg1 ;
-(BOOL)isParentOf:(id)arg1 ;
-(BOOL)isRelatedTo:(id)arg1 ;
-(id)propertyMapThatNeedsToBeTransformedWithTransformedObjects:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(id)objectForProperty:(int)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)initWithContext:(id)arg1 ;
-(TSURetainedPointerSet *)descendants;
-(id)valueForProperty:(int)arg1 ;
-(void)removeAllValues;
-(void)setValue:(id)arg1 forProperty:(int)arg2 ;
-(id)valuesForProperties:(id)arg1 ;
-(TSSStyle *)parent;
-(TSURetainedPointerSet *)children;
-(void)setParent:(TSSStyle *)arg1 ;
-(TSSStylesheet *)stylesheet;
-(void)setStylesheet:(TSSStylesheet *)arg1 ;
-(id)propertyMap;
@end

