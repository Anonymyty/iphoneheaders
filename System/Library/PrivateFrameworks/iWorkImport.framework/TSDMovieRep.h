/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:59:49 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDMediaRep.h>

@protocol TSKMediaPlayerController;
@class NSObject, CALayer, TSDFrameRep, AVAsset, TSDButtonKnob, TSDMovieInfo;

@interface TSDMovieRep : TSDMediaRep {

	NSObject*<TSKMediaPlayerController> mPlayerController;
	BOOL mCurrentlyObservingPlayerLayer;
	BOOL mPlayerLayerShouldBeDisplayed;
	BOOL mDirectlyManagesLayerContent;
	CALayer* mPlayerLayer;
	CALayer* mLayerToStroke;
	CALayer* mMovieReflectionLayer;
	CALayer* mMovieReflectionMaskLayer;
	CALayer* mReflectionPlayerLayer;
	CALayer* mReflectionPlayerStrokeMaskLayer;
	CALayer* mPlayerStrokeLayer;
	CALayer* mReflectionPlayerStrokeLayer;
	TSDFrameRep* mReflectionFrameRep;
	CALayer* mReflectionFrameMaskLayer;
	AVAsset* mAssetForPlayability;
	BOOL mDidCheckPlayability;
	BOOL mIsPlayable;
	TSDButtonKnob* mPlayButtonKnob;
	BOOL mPlayButtonKnobVisible;
	BOOL mDidCancelUpdatingPlayButtonVisibility;
	BOOL mInReadMode;
	CGImageRef mAlternatePosterImage;
	unsigned long long mIsChangingDynamicVisibleTimeCount;
	float mDynamicVolume;
	BOOL mIsChangingDynamicVolume;
	BOOL mNeedsTeardownPlayerController;
	BOOL mDelayTearingDownPlayerController;

}

@property (nonatomic,readonly) TSDMovieInfo * movieInfo; 
@property (assign,nonatomic) CGImageRef alternatePosterImage; 
+(double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2 mixingTypeContext:(id)arg3 ;
-(id)initWithLayout:(id)arg1 canvas:(id)arg2 ;
-(void)drawInLayerContext:(CGContextRef)arg1 ;
-(void)drawInContextWithoutEffects:(CGContextRef)arg1 withContent:(BOOL)arg2 withStroke:(BOOL)arg3 withOpacity:(BOOL)arg4 forAlphaOnly:(BOOL)arg5 drawChildren:(BOOL)arg6 ;
-(BOOL)isDataCurrentlyDownloading;
-(BOOL)shouldShowCheckerboard;
-(id)downloadProgressPlaceholderImage;
-(void)p_drawReflectionGradientIntoMovieReflectionLayer:(CGContextRef)arg1 reflectionSize:(CGSize)arg2 ;
-(CGImageRef)alternatePosterImage;
-(void)p_drawPosterImageInContext:(CGContextRef)arg1 ;
-(void)p_drawInContext:(CGContextRef)arg1 withContent:(BOOL)arg2 withStroke:(BOOL)arg3 withOpacity:(double)arg4 withMask:(BOOL)arg5 forShadowOrHitTest:(BOOL)arg6 ;
-(id)movieLayout;
-(void)p_updateMovieReflectionMaskLayer;
-(CGImageRef)newFrameMaskForViewScale:(double)arg1 frameRect:(CGRect*)arg2 ;
-(void)setAlternatePosterImage:(CGImageRef)arg1 ;
-(void)dealloc;
-(id)actionForLayer:(id)arg1 forKey:(id)arg2 ;
-(TSDMovieInfo *)movieInfo;
@end

