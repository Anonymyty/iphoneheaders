/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:59:39 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <iWorkImport/iWorkImport-Structs.h>
@interface TSCEUUidReferenceMap : NSObject {

	unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> >, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> > > > >* _cellRefsByUuid;
	unordered_map<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<std::__1::pair<const TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > > > >* _uuidsByCellRef;

}
+(id)_stringForInternalCellRef:(const TSCEInternalCellReference*)arg1 ;
-(void)encodeToArchive:(UuidReferenceMapArchive*)arg1 ;
-(void)removeCellRef:(const TSCEInternalCellReference*)arg1 ;
-(void)addCellRef:(const TSCEInternalCellReference*)arg1 forUuid:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(void)getCellRefs:(unordered_set<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference> >*)arg1 dependencyTracker:(TSCEDependencyTracker*)arg2 referringToUuids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg3 ;
-(id)initFromArchive:(const UuidReferenceMapArchive*)arg1 ;
-(void)removeCellRef:(const TSCEInternalCellReference*)arg1 forUuid:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(void)p_getCellRefs:(unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference> >*)arg1 referringToUuids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 ;
-(void)addCellRef:(const SCD_Struct_TS319*)arg1 dependencyTracker:(TSCEDependencyTracker*)arg2 forUuid:(const UUIDData<TSP::UUIDData>*)arg3 ;
-(void)removeCellRef:(const SCD_Struct_TS319*)arg1 dependencyTracker:(TSCEDependencyTracker*)arg2 forUuid:(const UUIDData<TSP::UUIDData>*)arg3 ;
-(void)getCellRefs:(unordered_set<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference> >*)arg1 dependencyTracker:(TSCEDependencyTracker*)arg2 referringToUuid:(const UUIDData<TSP::UUIDData>*)arg3 ;
-(id)init;
-(id)description;
@end

