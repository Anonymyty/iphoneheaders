/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:53:00 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/RadioUI.framework/RadioUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <RadioUI/RadioUI-Structs.h>
#import <libobjc.A.dylib/MPAVRoutingControllerDelegate.h>

@protocol OS_dispatch_source;
@class MPAVRoutingController, MPAVRoute, RadioStation, NSObject, NSDate, RUPlaybackTimeoutInfoController, MPUserNotification, RURadioAVPlayer, RadioRecentStationsController, MPUReportingPlaybackObserver, NSString;

@interface RURadioPlaybackCoordinator : NSObject <MPAVRoutingControllerDelegate> {

	MPAVRoutingController* _routingController;
	MPAVRoute* _pickedRoute;
	RadioStation* _currentStation;
	BOOL _deviceIsDocked;
	BOOL _deviceIsLocked;
	BOOL _didPresentNotificationForCurrentItem;
	int _lockStateNotifyToken;
	BOOL _lockStateNotifyTokenIsValid;
	void* _mediaRemoteCommandObserver;
	NSObject*<OS_dispatch_source> _pauseTimeoutTimerSource;
	RadioStation* _playbackNotificationStation;
	BOOL _playbackIsPaused;
	NSDate* _playbackTimeoutBeginDate;
	double _playbackTimeoutDuration;
	RUPlaybackTimeoutInfoController* _playbackTimeoutInfoController;
	MPUserNotification* _playbackTimeoutNotification;
	BOOL _playbackTimeoutNotificationDidExpire;
	NSObject*<OS_dispatch_source> _playbackTimeoutNotificationExpirationTimerSource;
	NSObject*<OS_dispatch_source> _presentPlaybackTimeoutTimerSource;
	BOOL _wasUsingBackgroundNetwork;
	RURadioAVPlayer* _player;
	RadioRecentStationsController* _recentStationsController;
	MPUReportingPlaybackObserver* _reportingPlaybackObserver;

}

@property (nonatomic,readonly) RURadioAVPlayer * player;                                            //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) RadioRecentStationsController * recentStationsController;              //@synthesize recentStationsController=_recentStationsController - In the implementation block
@property (nonatomic,retain) MPUReportingPlaybackObserver * reportingPlaybackObserver;              //@synthesize reportingPlaybackObserver=_reportingPlaybackObserver - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)init;
-(void)routingControllerAvailableRoutesDidChange:(id)arg1 ;
-(void)_radioModelDidChangeNotification:(id)arg1 ;
-(void)_applicationWillEnterForegroundNotification:(id)arg1 ;
-(RURadioAVPlayer *)player;
-(MPUReportingPlaybackObserver *)reportingPlaybackObserver;
-(void)setReportingPlaybackObserver:(MPUReportingPlaybackObserver *)arg1 ;
-(void)_itemLikedStateDidChangeNotification:(id)arg1 ;
-(void)_resetPlaybackTimeoutInformation;
-(void)_dismissExpiredPlaybackTimeoutNotificationForced:(BOOL)arg1 ;
-(BOOL)_isPauseTimeoutActive;
-(void)_updatePlaybackTimerForDeviceStateChange;
-(void)_effectiveVolumeDidChangeNotification:(id)arg1 ;
-(void)_playbackContentsDidChangeNotification:(id)arg1 ;
-(void)_itemIsInWishListDidChangeNotification:(id)arg1 ;
-(void)_itemDurationDidBecomeAvailableNotification:(id)arg1 ;
-(void)_cancelPlaybackTimeoutNotification;
-(void)_cancelPauseTimeoutTimer;
-(void)_cancelPresentPlaybackTimeoutTimer;
-(BOOL)_isRadioRelevantItem:(id)arg1 ;
-(void)_presentPlaybackTimeoutNotificationForCurrentItemIfNeeded;
-(void)_updateCurrentStationFromPlayer;
-(void)_schedulePlaybackTimeoutNotificationExpirationTimerIfNeeded;
-(void)_cancelPlaybackTimeoutNotificationExpirationTimer;
-(id)_currentStationFromPlayer;
-(void)_receivedUserNotificationResponseForUserNotification:(CFUserNotificationRef)arg1 withResponseFlags:(unsigned long long)arg2 ;
-(void)_setCurrentStation:(id)arg1 ;
-(void)_fullMuteDidChangeNotification:(id)arg1 ;
-(id)initWithPlayer:(id)arg1 ;
-(RadioRecentStationsController *)recentStationsController;
-(void)_playbackStateDidChangeNotification:(id)arg1 ;
-(void)setupPlaybackQueueWithPlaybackContext:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setRecentStationsController:(RadioRecentStationsController *)arg1 ;
-(void)_itemWillChangeNotification:(id)arg1 ;
@end

