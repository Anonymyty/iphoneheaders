/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:16:02 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <identityservicesd/identityservicesd-Structs.h>
@class NSRecursiveLock, IMTimer, NSMutableDictionary;

@interface IDSPublicKeyStorage : NSObject {

	NSRecursiveLock* _lock;
	/*^block*/id _saveEnqueueBlock;
	IMTimer* _saveTimer;
	NSMutableDictionary* _publicKeyStorage;
	NSMutableDictionary* _personalKeyStorage;
	NSMutableDictionary* _uniqueIDToPushTokenMap;
	BOOL _loaded;

}
+(id)sharedInstance;
-(BOOL)_isUnderFirstDataProtectionLock;
-(void)logState;
-(id)publicKeyForToken:(id)arg1 forURI:(id)arg2 fromURI:(id)arg3 forService:(id)arg4 ;
-(SecMPPublicIdentityRef)copyPublicIdentityForToken:(id)arg1 forURI:(id)arg2 fromURI:(id)arg3 forService:(id)arg4 priority:(long long)arg5 ;
-(SecMPPublicIdentityRef)copyPersonalPublicIdentityForUniqueID:(id)arg1 priority:(long long)arg2 ;
-(void)storePersonalPublicKey:(id)arg1 forToken:(id)arg2 uniqueID:(id)arg3 ;
-(void)_setSaveTimer;
-(void)_loadIfNeeded;
-(void)__updateUniqueIDToTokenMap;
-(id)_existingEntryFromURI:(id)arg1 forURI:(id)arg2 forService:(id)arg3 ;
-(id)_personalPublicKeyForToken:(id)arg1 ;
-(id)_personalPublicKeyForUniqueID:(id)arg1 ;
-(void)removePublicKeyForToken:(id)arg1 forURI:(id)arg2 fromURI:(id)arg3 forService:(id)arg4 ;
-(id)_entryFromURI:(id)arg1 forURI:(id)arg2 forService:(id)arg3 ;
-(void)_purgeOrphanedKeysToThreshold;
-(void)_purgeEntryIfNecessaryWithFromURI:(id)arg1 forURI:(id)arg2 forService:(id)arg3 forToken:(id)arg4 ;
-(BOOL)hasPublicKeyForToken:(id)arg1 forURI:(id)arg2 fromURI:(id)arg3 forService:(id)arg4 ;
-(void)emptyPersonalPublicKeyCache;
-(void)storePublicKey:(id)arg1 forToken:(id)arg2 forURI:(id)arg3 fromURI:(id)arg4 forService:(id)arg5 ;
-(id)init;
-(void)clearCache;
-(void)_save;
@end

