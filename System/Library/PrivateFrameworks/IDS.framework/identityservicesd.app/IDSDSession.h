/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:16:01 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <identityservicesd/identityservicesd-Structs.h>
#import <identityservicesd/_IDSSessionConnectionDelegate.h>
#import <identityservicesd/IDSSocketPairConnectionDelegate.h>
#import <identityservicesd/IDSBaseSocketPairConnectionDelegate.h>

@protocol OS_dispatch_queue;
@class NSString, NSSet, NSObject, IDSBaseSocketPairConnection, _IDSSessionConnection, NSData, APSConnection, NSDate, IMTimer, NSError, NSNumber;

@interface IDSDSession : NSObject <_IDSSessionConnectionDelegate, IDSSocketPairConnectionDelegate, IDSBaseSocketPairConnectionDelegate> {

	NSString* _uniqueID;
	NSString* _participantID;
	NSString* _accountID;
	NSSet* _destinations;
	NSSet* _inviteDestinations;
	NSObject*<OS_dispatch_queue> _connectionQueue;
	IDSBaseSocketPairConnection* _baseSocketPairConnection;
	_IDSSessionConnection* _connection;
	NSData* _localBlob;
	NSData* _remoteBlob;
	APSConnection* _apsConnection;
	NSString* _serviceName;
	NSString* _clientID;
	NSDate* _startConnectingDate;
	NSDate* _startDate;
	NSDate* _endDate;
	IMTimer* _inviteTimer;
	IMTimer* _connectionTimer;
	IMTimer* _endSessionTimer;
	NSError* _error;
	long long _transportType;
	double _inviteTimeout;
	double _connectionTimeout;
	double _endSessionTimeout;
	unsigned _state;
	unsigned _reason;
	unsigned char _keyMaterial[60];
	SCD_Struct_ID13* _encryptionState;
	unsigned _SSRCSend;
	unsigned _SSRCRecv;
	unsigned short _seqSendStart;
	unsigned short _seqSend;
	unsigned short _seqRecvStart;
	unsigned _peerProtocolVersion;
	BOOL _isLegacy;
	BOOL _isInitiator;
	BOOL _encryptionInitialized;
	NSNumber* _remoteUseCloudPairedControlChannel;

}

@property (nonatomic,retain) NSString * clientID;                                        //@synthesize clientID=_clientID - In the implementation block
@property (nonatomic,readonly) NSString * uniqueID;                                      //@synthesize uniqueID=_uniqueID - In the implementation block
@property (nonatomic,retain) NSData * remoteBlob;                                        //@synthesize remoteBlob=_remoteBlob - In the implementation block
@property (nonatomic,readonly) NSString * accountID;                                     //@synthesize accountID=_accountID - In the implementation block
@property (nonatomic,readonly) unsigned state;                                           //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) BOOL isLegacy;                                            //@synthesize isLegacy=_isLegacy - In the implementation block
@property (nonatomic,readonly) char* keyMaterial; 
@property (assign,setter=SRCRecv,nonatomic) unsigned SSRCRecv;                           //@synthesize SSRCRecv=_SSRCRecv - In the implementation block
@property (assign,nonatomic) unsigned short seqRecvStart;                                //@synthesize seqRecvStart=_seqRecvStart - In the implementation block
@property (nonatomic,retain) NSNumber * remoteUseCloudPairedControlChannel;              //@synthesize remoteUseCloudPairedControlChannel=_remoteUseCloudPairedControlChannel - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithAccount:(id)arg1 destinations:(id)arg2 transportType:(long long)arg3 uniqueID:(id)arg4 peerProtocolVersion:(id)arg5 isInitiator:(BOOL)arg6 ;
-(long long)_loggingFlags;
-(void)_cleanupSessionConnection;
-(void)_sendMessage:(id)arg1 toDestinations:(id)arg2 withCommand:(id)arg3 ;
-(void)_sendSinglePathMessage:(id)arg1 toDestinations:(id)arg2 withCommand:(id)arg3 ;
-(void)_endSessionWithReason:(unsigned)arg1 ;
-(void)_sendInvitationWithOptions:(id)arg1 data:(id)arg2 declineOnError:(BOOL)arg3 ;
-(void)_clearAllTimers;
-(void)sendCancelInvitationToDestinations:(id)arg1 withData:(id)arg2 ;
-(NSData *)remoteBlob;
-(void)_handleAVConferenceError:(id)arg1 ;
-(void)_sendMessage:(id)arg1 withCommand:(id)arg2 ;
-(void)openSocketToDevice:(id)arg1 ;
-(void)setRemoteUseCloudPairedControlChannel:(NSNumber *)arg1 ;
-(void)setRemoteBlob:(NSData *)arg1 ;
-(BOOL)_isValidDestination:(id)arg1 ;
-(void)_inviteTimedOut;
-(void)_connectionTimedOut;
-(void)_endSessionTimedOut;
-(void)_clearEndSessionTimeoutTimer;
-(id)_acceptedDeviceUniqueID;
-(id)_acceptedDeviceToken;
-(id)__socketOptionsForDevice:(id)arg1 uniqueID:(id)arg2 pushToken:(id)arg3 ;
-(void)_notifyClientsSessionStopped;
-(void)_cleanupSocketPairConnection;
-(void)closeSocketToDevice:(id)arg1 ;
-(void)_setEndSessionTimeoutTimer;
-(void)_submitAWDMetricsForIDSSessionWithEndReason:(unsigned)arg1 ;
-(id)_sessionDuration;
-(void)connection:(id)arg1 didStart:(BOOL)arg2 error:(id)arg3 ;
-(void)connectionDidStop:(id)arg1 error:(id)arg2 ;
-(void)connection:(id)arg1 receivedData:(id)arg2 ;
-(id)initWithAccount:(id)arg1 destinations:(id)arg2 transportType:(long long)arg3 uniqueID:(id)arg4 isInitiator:(BOOL)arg5 ;
-(char*)keyMaterial;
-(void)sendInvitationWithOptions:(id)arg1 declineOnError:(BOOL)arg2 ;
-(void)receivedAcceptMessage:(id)arg1 fromID:(id)arg2 ;
-(void)receivedDeclineMessage:(id)arg1 fromID:(id)arg2 ;
-(void)receivedCancelMessage:(id)arg1 fromID:(id)arg2 ;
-(void)receivedSessionMessage:(id)arg1 fromID:(id)arg2 ;
-(void)receivedEndMessage:(id)arg1 fromID:(id)arg2 ;
-(void)runConnectivityCheckWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)startListeningOnClientSocket:(int)arg1 isRawSocket:(BOOL)arg2 ;
-(void)cleanupSession;
-(NSNumber *)remoteUseCloudPairedControlChannel;
-(unsigned)SSRCRecv;
-(void)setSSRCRecv:(unsigned)arg1 ;
-(unsigned short)seqRecvStart;
-(void)setSeqRecvStart:(unsigned short)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(unsigned)state;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(BOOL)isLegacy;
-(void)endSession;
-(void)_endSession;
-(void)sendInvitationWithData:(id)arg1 declineOnError:(BOOL)arg2 ;
-(void)cancelInvitationWithData:(id)arg1 ;
-(void)acceptInvitationWithData:(id)arg1 ;
-(void)declineInvitationWithData:(id)arg1 ;
-(void)endSessionWithData:(id)arg1 ;
-(void)sendSessionMessage:(id)arg1 ;
-(void)setInviteTimeout:(long long)arg1 ;
-(void)setClientID:(NSString *)arg1 ;
-(NSString *)clientID;
-(void)acceptInvitation;
-(void)declineInvitation;
-(void)cancelInvitation;
-(void)_clearConnectionTimeoutTimer;
-(void)_clearInvitationTimeoutTimer;
-(id)_connectDuration;
-(void)_setInvitationTimeoutTimer;
-(void)_setConnectionTimeoutTimer;
-(void)setAudioEnabled:(BOOL)arg1 ;
-(void)setMuted:(BOOL)arg1 ;
-(NSString *)uniqueID;
-(NSString *)accountID;
@end

