/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:48:16 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MediaRemote/MediaRemote-Structs.h>
#import <MediaRemote/MRCryptoPairingSession.h>

@protocol OS_dispatch_queue;
@class MRPasscodeCredentials, NSObject, MRPairedDevice, NSData, NSMutableData, NSArray;

@interface MRCoreUtilsPairingSession : MRCryptoPairingSession {

	unsigned long long _state;
	MRPasscodeCredentials* _credentials;
	PairingSessionPrivateRef _pairingSession;
	SCD_Struct_MR18* _pairingDelegate;
	NSObject*<OS_dispatch_queue> _queue;
	MRPairedDevice* _device;
	NSData* _inputKey;
	NSMutableData* _inputNonce;
	NSData* _outputKey;
	NSMutableData* _outputNonce;

}

@property (getter=isPaired,nonatomic,readonly) BOOL paired; 
@property (nonatomic,readonly) NSArray * pairedDevices; 
@property (nonatomic,readonly) MRPairedDevice * device;                  //@synthesize device=_device - In the implementation block
@property (nonatomic,retain) NSData * inputKey;                          //@synthesize inputKey=_inputKey - In the implementation block
@property (nonatomic,retain) NSMutableData * inputNonce;                 //@synthesize inputNonce=_inputNonce - In the implementation block
@property (nonatomic,retain) NSData * outputKey;                         //@synthesize outputKey=_outputKey - In the implementation block
@property (nonatomic,retain) NSMutableData * outputNonce;                //@synthesize outputNonce=_outputNonce - In the implementation block
+(unsigned long long)maxTriesBeforeLockout;
-(void)dealloc;
-(BOOL)isValid;
-(void)close;
-(void)open;
-(id)initWithRole:(unsigned long long)arg1 device:(id)arg2 ;
-(BOOL)handlePairingExchangeData:(id)arg1 withError:(id*)arg2 ;
-(void)handlePairingFailureWithStatus:(int)arg1 ;
-(id)unpair;
-(id)encryptData:(id)arg1 withError:(id*)arg2 ;
-(id)decryptData:(id)arg1 withError:(id*)arg2 ;
-(BOOL)deleteIdentityWithError:(id*)arg1 ;
-(id)_onQueueInitializePairingSessionWithState:(unsigned long long)arg1 ;
-(void)_handlePairingFailureWithError:(id)arg1 ;
-(id)_onQueuePerformPairingExchangeWithInputData:(id)arg1 error:(id*)arg2 ;
-(id)_removePeer:(PairingSessionPrivateRef)arg1 ;
-(void)_delegateDidEnterPasscode:(id)arg1 ;
-(id)_addPeer:(PairingSessionPrivateRef)arg1 ;
-(void)_onQueueDeriveEncryptionKeys;
-(id)_generateSetupCodeWithMaximumLength:(unsigned long long)arg1 ;
-(int)_displaySetupCode:(id)arg1 ;
-(void)_hideSetupCode;
-(int)_promptForSetupCodeWithDelay:(double)arg1 ;
-(void)setInputKey:(NSData *)arg1 ;
-(void)setInputNonce:(NSMutableData *)arg1 ;
-(void)setOutputKey:(NSData *)arg1 ;
-(void)setOutputNonce:(NSMutableData *)arg1 ;
-(void)_handleSetupExchangeComplete;
-(NSData *)outputKey;
-(NSMutableData *)outputNonce;
-(NSData *)inputKey;
-(NSMutableData *)inputNonce;
-(MRPairedDevice *)device;
-(NSArray *)pairedDevices;
-(BOOL)isPaired;
@end

