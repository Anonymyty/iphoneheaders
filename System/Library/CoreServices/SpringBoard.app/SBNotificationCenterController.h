/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:04:22 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <SpringBoard/SBBulletinWindowClient.h>
#import <SpringBoard/SBNotificationCenterViewControllerDelegate.h>
#import <SpringBoard/SBWidgetViewControllerDelegate.h>
#import <libobjc.A.dylib/_UISettingsKeyObserver.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <SpringBoard/SBExtensionHandling.h>
#import <SpringBoard/SBReachabilityObserver.h>
#import <UIKit/UIViewControllerTransitioningDelegate.h>
#import <UIKit/UIViewControllerAnimatedTransitioning.h>
#import <UIKit/UIViewControllerInteractiveTransitioning.h>
#import <SpringBoard/SBSystemGestureRecognizerDelegate.h>
#import <SpringBoard/SBCoordinatedPresenting.h>

@protocol UIViewControllerContextTransitioning;
@class SBNotificationCenterViewController, UIView, SBChevronView, UILongPressGestureRecognizer, SBLockScreenActionContext, SBNotificationCenterSettings, NSTimer, FBUIApplicationSceneDeactivationAssertion, FBDisplayLayoutElement, NCLaunchStats, SBScreenEdgePanGestureRecognizer, UIScreenEdgePanGestureRecognizer, SBNotificationCenterBounceAnimator, NSMutableSet, _SBNotificationCenterTransitionContext, SBWindow, NSString, NSSet;

@interface SBNotificationCenterController : NSObject <SBBulletinWindowClient, SBNotificationCenterViewControllerDelegate, SBWidgetViewControllerDelegate, _UISettingsKeyObserver, UIGestureRecognizerDelegate, SBExtensionHandling, SBReachabilityObserver, UIViewControllerTransitioningDelegate, UIViewControllerAnimatedTransitioning, UIViewControllerInteractiveTransitioning, SBSystemGestureRecognizerDelegate, SBCoordinatedPresenting> {

	SBNotificationCenterViewController* _viewController;
	UIView* _coveredContentSnapshot;
	SBChevronView* _borrowedGrabberView;
	/*^block*/id _borrowedGrabberWillPresentBlock;
	/*^block*/id _borrowedGrabberHideBlock;
	/*^block*/id _borrowedGrabberCompletionBlock;
	UILongPressGestureRecognizer* _grabberPressGesture;
	id _keyboardNotificationObserverToken;
	SBLockScreenActionContext* _lockScreenActionContext;
	long long _transitionState;
	long long _presentedState;
	SBNotificationCenterSettings* _settings;
	BOOL _grabberEnabled;
	BOOL _didCoalesceWidgetsConnections;
	NSTimer* _widgetConnectionsTimer;
	FBUIApplicationSceneDeactivationAssertion* _resignActiveAssertion;
	FBDisplayLayoutElement* _displayLayoutElement;
	NCLaunchStats* _launchStats;
	SBScreenEdgePanGestureRecognizer* _showSystemGestureRecognizer;
	UIScreenEdgePanGestureRecognizer* _dismissGestureRecognizer;
	SBNotificationCenterBounceAnimator* _currentBounceAnimator;
	NSMutableSet* _bulletinWindowClients;
	id<UIViewControllerContextTransitioning> _activeTransitionContext;
	_SBNotificationCenterTransitionContext* _activeNCTransitionContext;

}

@property (nonatomic,readonly) SBNotificationCenterViewController * viewController;                                                    //@synthesize viewController=_viewController - In the implementation block
@property (nonatomic,readonly) SBNotificationCenterSettings * settings;                                                                //@synthesize settings=_settings - In the implementation block
@property (nonatomic,__weak,readonly) SBWindow * window; 
@property (getter=isVisible,nonatomic,readonly) BOOL visible; 
@property (getter=isTransitioning,nonatomic,readonly) BOOL transitioning; 
@property (getter=isAvailableWhileLocked,nonatomic,readonly) BOOL availableWhileLocked; 
@property (getter=isNotificationsViewAvailableWhileLocked,nonatomic,readonly) BOOL notificationsViewAvailableWhileLocked; 
@property (getter=isTodayViewAvailableWhileLocked,nonatomic,readonly) BOOL todayViewAvailableWhileLocked; 
@property (getter=isGrabberVisible,nonatomic,readonly) BOOL grabberVisible; 
@property (assign,getter=isGrabberEnabled,nonatomic) BOOL grabberEnabled;                                                              //@synthesize grabberEnabled=_grabberEnabled - In the implementation block
@property (assign,nonatomic) BOOL blursBackground; 
@property (nonatomic,readonly) SBLockScreenActionContext * lockScreenActionContext;                                                    //@synthesize lockScreenActionContext=_lockScreenActionContext - In the implementation block
@property (nonatomic,readonly) long long layoutMode; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) long long coordinatedPresentingControllerIdentifier; 
@property (nonatomic,readonly) double hintDisplacement; 
@property (nonatomic,readonly) unsigned long long hintEdge; 
@property (assign,nonatomic) id<SBPresentingDelegate> presentingDelegate; 
@property (nonatomic,readonly) NSSet * gestures; 
@property (nonatomic,readonly) NSSet * conflictingGestures; 
@property (nonatomic,readonly) NSSet * tapExcludedViews; 
+(id)newDynamicAnimationForShow:(BOOL)arg1 targetValue:(double)arg2 withInitialValue:(double)arg3 velocity:(double)arg4 extraPull:(BOOL)arg5 ;
+(id)_sharedInstanceCreateIfNecessary:(BOOL)arg1 ;
+(double)transitionAnimationDuration;
+(id)sharedInstance;
+(id)sharedInstanceIfExists;
-(void)handleReachabilityModeActivated;
-(void)handleReachabilityModeDeactivated;
-(void)prepareLayoutForPresentationFromBanner;
-(void)updateTransitionWithTouchLocation:(CGPoint)arg1 velocity:(CGPoint)arg2 ;
-(void)endTransitionWithVelocity:(CGPoint)arg1 wasCancelled:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)beginPresentationWithTouchLocation:(CGPoint)arg1 presentationBegunHandler:(/*^block*/id)arg2 ;
-(BOOL)isGrabberVisible;
-(id)viewForSystemGestureRecognizer:(id)arg1 ;
-(void)launchExtensionWithBundleID:(id)arg1 options:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)presentAnimated:(BOOL)arg1 setupPrelude:(/*^block*/id)arg2 setupPostlude:(/*^block*/id)arg3 animationPrelude:(/*^block*/id)arg4 animationPostlude:(/*^block*/id)arg5 completion:(/*^block*/id)arg6 ;
-(void)runScrollTest:(id)arg1 iterations:(long long)arg2 delta:(long long)arg3 useAAGView:(BOOL)arg4 ;
-(void)enableAllWidgets:(/*^block*/id)arg1 ;
-(void)runWidgetLaunchTestWithWidgetWithIdentifier:(id)arg1 prelude:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(void)presentAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)finishedScrollTest;
-(void)remoteViewControllerDidConnectForWidget:(id)arg1 ;
-(void)widget:(id)arg1 requestsLaunchOfURL:(id)arg2 ;
-(BOOL)shouldRequestWidgetRemoteViewControllers;
-(id)_lockScreenViewController;
-(BOOL)handleAction:(id)arg1 forBulletin:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(SBLockScreenActionContext *)lockScreenActionContext;
-(BOOL)isPresentingControllerTransitioning;
-(void)abortAnimatedTransition;
-(long long)coordinatedPresentingControllerIdentifier;
-(double)hintDisplacement;
-(unsigned long long)hintEdge;
-(void)_updateCoveredContentSnapshot;
-(BOOL)_shouldShowGrabberOnFirstSwipe;
-(void)_hideGrabberForSystemGesture;
-(BOOL)isAvailableWhileLocked;
-(void)hideGrabberAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_updateShouldShowGrabberOnFirstSwipe;
-(void)registerPresentedViewController:(id)arg1 ;
-(void)_handleWidgetLaunchRecommendation:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)biometricEventMonitorDidAuthenticate:(id)arg1 ;
-(void)_handleShowNotificationCenterGesture:(id)arg1 ;
-(BOOL)isNotificationsViewAvailableWhileLocked;
-(BOOL)isTodayViewAvailableWhileLocked;
-(BOOL)_isNotificationCenterViewWithFeatureKeyAvailableWhileLocked:(id)arg1 isLockedDownByRestrictions:(BOOL*)arg2 ;
-(BOOL)_isNotificationCenterViewAvailableWhileLockedWithProfileBlock:(/*^block*/id)arg1 counterpartBlock:(/*^block*/id)arg2 ;
-(void)_registerNotificationCenterBulletinWindowClient:(id)arg1 ;
-(void)_unregisterNotificationCenterBulletinWindowClient:(id)arg1 ;
-(void)_showNotificationCenterGestureBeganWithGestureRecognizer:(id)arg1 ;
-(void)_showNotificationCenterGestureChangedWithGestureRecognizer:(id)arg1 duration:(double)arg2 ;
-(void)_showNotificationCenterGestureEndedWithGestureRecognizer:(id)arg1 ;
-(void)_showNotificationCenterGestureCancelled;
-(void)_showNotificationCenterGestureFailed;
-(void)setGrabberEnabled:(BOOL)arg1 ;
-(BOOL)canShowHideGrabberView;
-(void)_beginDismissalWithTouchLocation:(CGPoint)arg1 ;
-(void)_invalidateCoveredContentSnapshot;
-(void)_insertCoveredContentSnapshotIfNecessary:(id)arg1 ;
-(void)_setViewUserInteractionEnabled:(BOOL)arg1 ;
-(void)handleGrabberPress:(id)arg1 ;
-(void)_handleDismissGesture:(id)arg1 ;
-(BOOL)isGrabberEnabled;
-(void)_setupForViewPresentation;
-(void)_removeCoveredContentSnapshot;
-(void)_setGrabberEnabled:(BOOL)arg1 ;
-(void)_setupForPresentationWithTouchLocation:(CGPoint)arg1 ;
-(void)_setupForDismissal;
-(void)_cleanupAfterTransition:(BOOL)arg1 ;
-(void)_endTransitionWithVelocity:(CGPoint)arg1 additionalValueApplier:(/*^block*/id)arg2 animationPostlude:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_present:(BOOL)arg1 stepper:(/*^block*/id)arg2 ;
-(void)_beginPresentationWithTouchLocation:(CGPoint)arg1 setupPrelude:(/*^block*/id)arg2 setupPostlude:(/*^block*/id)arg3 presentationBegunHandler:(/*^block*/id)arg4 animationPrelude:(/*^block*/id)arg5 ;
-(void)dismissAnimated:(BOOL)arg1 withStepper:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 fromCurrentState:(BOOL)arg4 ;
-(void)_presentAnimated:(BOOL)arg1 setupPrelude:(/*^block*/id)arg2 setupPostlude:(/*^block*/id)arg3 animationPrelude:(/*^block*/id)arg4 animationPostlude:(/*^block*/id)arg5 ;
-(void)_present:(BOOL)arg1 withStandardAnimation:(BOOL)arg2 stepper:(/*^block*/id)arg3 fromCurrentState:(BOOL)arg4 ;
-(void)unregisterSharedGrabberView;
-(void)_updateForChangeInLockedState;
-(BOOL)_requiresUIUnlockForActionContext:(id)arg1 ;
-(void)_handleActionContextRequiringUIUnlock:(id)arg1 ;
-(BOOL)_requiresAuthenticationForActionContext:(id)arg1 ;
-(void)_handleActionContextRequiringAuthentication:(id)arg1 ;
-(void)endTransitionWithVelocity:(CGPoint)arg1 additionalValueApplier:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)_handleActionOrRequestWithDefaultAction:(/*^block*/id)arg1 lockedAction:(/*^block*/id)arg2 ;
-(void)_didCoalesceWidgetsConnections:(id)arg1 ;
-(void)_makeVisibleWidgetWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_loadViewForWidget:(id)arg1 prelude:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(id)widgetViewControllerHostDelegate:(id)arg1 ;
-(void)unregisterPresentedViewController:(id)arg1 ;
-(BOOL)_shouldSelectViewControllerAtTouchLocation;
-(void)registerSharedGrabberView:(id)arg1 withWillPresentBlock:(/*^block*/id)arg2 hideBlock:(/*^block*/id)arg3 andCompletion:(/*^block*/id)arg4 ;
-(void)invalidateLockScreenActionContext;
-(void)dealloc;
-(SBWindow *)window;
-(id)init;
-(double)transitionDuration:(id)arg1 ;
-(void)animateTransition:(id)arg1 ;
-(void)animationEnded:(BOOL)arg1 ;
-(void)startInteractiveTransition:(id)arg1 ;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2 ;
-(SBNotificationCenterSettings *)settings;
-(BOOL)isTransitioning;
-(SBNotificationCenterViewController *)viewController;
-(id)presentationControllerForPresentedViewController:(id)arg1 presentingViewController:(id)arg2 sourceViewController:(id)arg3 ;
-(id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3 ;
-(id)interactionControllerForPresentation:(id)arg1 ;
-(id)animationControllerForDismissedController:(id)arg1 ;
-(id)interactionControllerForDismissal:(id)arg1 ;
-(BOOL)isVisible;
-(void)settings:(id)arg1 changedValueForKey:(id)arg2 ;
-(void)dismissAnimated:(BOOL)arg1 ;
-(BOOL)blursBackground;
-(void)setBlursBackground:(BOOL)arg1 ;
-(BOOL)handleMenuButtonTap;
-(void)presentAnimated:(BOOL)arg1 ;
-(void)dismissAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(long long)layoutMode;
-(void)_cancelTransition;
@end

