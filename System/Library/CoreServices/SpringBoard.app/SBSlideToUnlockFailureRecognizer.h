/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:04:23 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <UIKit/UIGestureRecognizer.h>
#import <libobjc.A.dylib/_UISettingsKeyObserver.h>

@class UIView, SBSlideToUnlockTriangleView, NSString;

@interface SBSlideToUnlockFailureRecognizer : UIGestureRecognizer <_UISettingsKeyObserver> {

	CGPoint _startingLocation;
	unsigned long long _maxAllowableVerticalOffset;
	double _maxAllowedTopAngle;
	double _minAllowedTopAngle;
	double _effectiveTopAngle;
	double _minAllowedBottomAngle;
	double _maxAllowedBottomAngle;
	double _effectiveBottomAngle;
	BOOL _tracking;
	BOOL _allowMultiTouch;
	BOOL _viewDebugArea;
	UIView* _relativeView;
	UIView* _debugHorizontalView;
	SBSlideToUnlockTriangleView* _debugInclineUpView;
	SBSlideToUnlockTriangleView* _debugInclineDownView;

}

@property (nonatomic,retain) UIView * relativeView;                                      //@synthesize relativeView=_relativeView - In the implementation block
@property (assign,nonatomic) BOOL viewDebugArea;                                         //@synthesize viewDebugArea=_viewDebugArea - In the implementation block
@property (assign,nonatomic) BOOL allowMultiTouch;                                       //@synthesize allowMultiTouch=_allowMultiTouch - In the implementation block
@property (assign,nonatomic) unsigned long long maxAllowableVerticalOffset;              //@synthesize maxAllowableVerticalOffset=_maxAllowableVerticalOffset - In the implementation block
@property (assign,nonatomic) double minAllowedTopAngle;                                  //@synthesize minAllowedTopAngle=_minAllowedTopAngle - In the implementation block
@property (assign,nonatomic) double maxAllowedTopAngle;                                  //@synthesize maxAllowedTopAngle=_maxAllowedTopAngle - In the implementation block
@property (assign,nonatomic) double minAllowedBottomAngle;                               //@synthesize minAllowedBottomAngle=_minAllowedBottomAngle - In the implementation block
@property (assign,nonatomic) double maxAllowedBottomAngle;                               //@synthesize maxAllowedBottomAngle=_maxAllowedBottomAngle - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setRelativeView:(UIView *)arg1 ;
-(void)setViewDebugArea:(BOOL)arg1 ;
-(void)setMaxAllowableVerticalOffset:(unsigned long long)arg1 ;
-(BOOL)viewDebugArea;
-(unsigned long long)maxAllowableVerticalOffset;
-(double)_effectiveTopAngle;
-(double)_effectiveBottomAngle;
-(void)_loadFromSettings:(id)arg1 ;
-(void)_setDebugViewsVisible:(BOOL)arg1 ;
-(long long)_activeTouchCountForEvent:(id)arg1 ;
-(BOOL)allowMultiTouch;
-(CGPoint)_averagePointFromTouches:(id)arg1 ;
-(double)_computeEffectiveAngleFromMin:(double)arg1 max:(double)arg2 ;
-(BOOL)_isLocationOutOfBounds:(CGPoint)arg1 ;
-(void)setMaxAllowedTopAngle:(double)arg1 ;
-(void)setMinAllowedTopAngle:(double)arg1 ;
-(void)setMaxAllowedBottomAngle:(double)arg1 ;
-(void)setMinAllowedBottomAngle:(double)arg1 ;
-(UIView *)relativeView;
-(BOOL)_isOutOfBoundsVertically:(CGPoint)arg1 ;
-(BOOL)_isOutOfBounds:(CGPoint)arg1 forAngle:(double)arg2 ;
-(void)setAllowMultiTouch:(BOOL)arg1 ;
-(double)maxAllowedTopAngle;
-(double)minAllowedTopAngle;
-(double)maxAllowedBottomAngle;
-(double)minAllowedBottomAngle;
-(void)dealloc;
-(id)initWithTarget:(id)arg1 action:(SEL)arg2 ;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)reset;
-(BOOL)canBePreventedByGestureRecognizer:(id)arg1 ;
-(void)settings:(id)arg1 changedValueForKey:(id)arg2 ;
@end

