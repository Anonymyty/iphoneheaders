/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:04:22 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpringBoard/SBSoftwareUpdateAlertModelDelegate.h>
#import <SpringBoard/SUAutoInstallOperationDelegate.h>
#import <libobjc.A.dylib/_UISettingsKeyObserver.h>
#import <SpringBoard/SUManagerClientDelegate.h>
#import <SpringBoard/SUNetworkObserver.h>

@class PCPersistentTimer, SUManagerClient, SUDownload, SUAutoInstallOperation, SBSoftwareUpdateAlertModel, SBSoftwareUpdateInstallOptions, SBUserSessionController, NSString;

@interface SBSoftwareUpdateController : NSObject <SBSoftwareUpdateAlertModelDelegate, SUAutoInstallOperationDelegate, _UISettingsKeyObserver, SUManagerClientDelegate, SUNetworkObserver> {

	PCPersistentTimer* _installTimer;
	SUManagerClient* _client;
	SUDownload* _updateToInstall;
	int _currentNetworkType;
	SUAutoInstallOperation* _scheduledTryTonightAutoInstallOperation;
	SBSoftwareUpdateAlertModel* _alertModel;
	int _iCloudRestoreToken;
	BOOL _scheduleInstallAlertWhenAble;
	BOOL _settingsResetPrefsBadgedFlag;
	BOOL _needsBatteryDeviceStatusRealert;
	SBSoftwareUpdateInstallOptions* _pendingInstallOptions;
	SBUserSessionController* _userSessionController;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(void)_prepareMigrationForSettingsReset;
-(void)_completeMigrationForSettingsReset;
-(void)_setUpdateToInstall:(id)arg1 ;
-(void)alertModel:(id)arg1 alertFlowDidChangeFrom:(unsigned long long)arg2 to:(unsigned long long)arg3 ;
-(void)repopInstallAlertWithDefaultDurationFromNowForReason:(id)arg1 ;
-(void)_iCloudStatusChanged;
-(BOOL)_createKeybagForPasscode:(id)arg1 forInstallTonight:(BOOL)arg2 ;
-(void)installTonightWithOperation:(id)arg1 ;
-(void)_createInstallTonightOperationWithResult:(/*^block*/id)arg1 ;
-(void)installNowFromSource:(unsigned long long)arg1 options:(id)arg2 ;
-(void)_migrateForNewOSVersionIfNecessary;
-(void)_initializeState;
-(BOOL)_shouldShowOrScheduleInstallAlert;
-(void)_scheduleInstallAlertReminderWithDate:(id)arg1 repopStrategy:(unsigned long long)arg2 forReason:(id)arg3 ;
-(void)_setTryTonightAutoInstallOperation:(id)arg1 cancelIfNecessary:(BOOL)arg2 ;
-(void)_showOrScheduleNextInstallAlert;
-(void)_unregisterForInstallationConstraintChangeNotifications;
-(void)_installUpdate:(unsigned long long)arg1 withInstallOperation:(id)arg2 source:(unsigned long long)arg3 options:(id)arg4 ;
-(void)installTonightWithOperation:(id)arg1 options:(id)arg2 ;
-(void)_realertWithStrategy:(unsigned long long)arg1 andReason:(id)arg2 ;
-(BOOL)_isSettingsBadgedForSoftwareUpdate;
-(void)_savePreferencesBadgeFlag:(BOOL)arg1 ;
-(id)_stringForCurrentVersionPreference;
-(void)_saveLastKnownVersionPreference:(id)arg1 ;
-(id)_stringForInstallNotAllowableReason:(long long)arg1 ;
-(void)_dismissInstallAlertsWithReason:(id)arg1 includingInstallTonight:(BOOL)arg2 withRealertStrategy:(unsigned long long)arg3 ;
-(void)_resetStateForReason:(id)arg1 ;
-(void)_autoDownloadUnknownToUserFailedForDescriptor:(id)arg1 error:(id)arg2 ;
-(void)_postDownloadStateChangeNotification:(BOOL)arg1 ;
-(BOOL)_showNextInstallAlertWithReasons:(long long)arg1 orScheduleIfNecessary:(BOOL)arg2 ;
-(void)_toggleSettingsBadge:(BOOL)arg1 ;
-(void)_isUpdateInstallable:(/*^block*/id)arg1 ;
-(void)_handleInstallError:(id)arg1 ;
-(void)_setPendingInstallOptions:(id)arg1 ;
-(void)_autoInstallOperationWasCancelled:(id)arg1 withRepopStrategy:(unsigned long long)arg2 ;
-(void)_autoInstallOperationDidExpire:(id)arg1 withRepopStrategy:(unsigned long long)arg2 ;
-(BOOL)_showNextInstallAlertWithReasons:(long long)arg1 orScheduleIfNecessary:(BOOL)arg2 withInstallOptions:(id)arg3 ;
-(void)_dismissInstallFailureAlertsWithoutRepop;
-(void)_doInstallNowWithOptions:(id)arg1 ;
-(void)_doInstallTonight:(id)arg1 consent:(BOOL)arg2 ;
-(void)_presentAuthenticationUIForInstallation:(/*^block*/id)arg1 withInstallType:(unsigned long long)arg2 withInstallOperation:(id)arg3 ;
-(id)_getNextLastPredictedUnlockDateFromDuet:(id)arg1 ;
-(id)_computeNextLastPredictedUnlockDateMinus4HoursFromStartDate:(id)arg1 ;
-(void)_registerForInstallationConstraintChangedNotifications;
-(void)_passcodeLockStateChanged:(id)arg1 ;
-(void)_callCountChanged:(id)arg1 ;
-(void)_syncWillStart:(id)arg1 ;
-(void)_syncDidEnd:(id)arg1 ;
-(void)_iTunesRestoreStateChanged:(id)arg1 ;
-(void)_homescreenActivationChanged;
-(void)_showInstallAlertWithInstallOptions:(id)arg1 ;
-(id)_waitableReasonsForShowingInstallAlert;
-(BOOL)_doesStateContainNonInstallableReasons:(long long)arg1 reasonsToCheck:(id)arg2 outMatchingReasonsString:(id*)arg3 ;
-(id)_allNonInstallableReasons;
-(void)_showOrScheduleNextInstallAlertFromTimer:(id)arg1 ;
-(void)_showSUAvailableAlertForDescriptor:(id)arg1 ;
-(void)_clearLegacyBadgeIfNecessary:(id)arg1 ;
-(void)installNowFromSource:(unsigned long long)arg1 ;
-(void)repopInstallAlertWithWeekDurationFromNowForReason:(id)arg1 ;
-(void)_handleBatteryDeviceStatusChanged:(id)arg1 ;
-(BOOL)_isSettingsActive;
-(void)dealloc;
-(id)init;
-(void)settings:(id)arg1 changedValueForKey:(id)arg2 ;
-(void)client:(id)arg1 automaticDownloadDidFailToStartForNewUpdateAvailable:(id)arg2 withError:(id)arg3 ;
-(void)client:(id)arg1 downloadWasInvalidatedForNewUpdateAvailable:(id)arg2 ;
-(void)client:(id)arg1 downloadDidStart:(id)arg2 ;
-(void)client:(id)arg1 downloadProgressDidChange:(id)arg2 ;
-(void)client:(id)arg1 downloadDidFail:(id)arg2 withError:(id)arg3 ;
-(void)client:(id)arg1 downloadDidFinish:(id)arg2 ;
-(void)client:(id)arg1 installDidStart:(id)arg2 ;
-(void)client:(id)arg1 installDidFail:(id)arg2 withError:(id)arg3 ;
-(void)client:(id)arg1 installDidFinish:(id)arg2 ;
-(void)networkChangedFromNetworkType:(int)arg1 toNetworkType:(int)arg2 ;
-(void)autoInstallOperationDidConsent:(id)arg1 ;
-(void)autoInstallOperationWasCancelled:(id)arg1 ;
-(void)autoInstallOperationDidExpire:(id)arg1 ;
-(void)autoInstallOperationIsReadyToInstall:(id)arg1 withResponse:(/*^block*/id)arg2 ;
-(void)isDownloading:(/*^block*/id)arg1 ;
@end

