/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:27:23 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/Frameworks/Accounts.framework/Accounts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Accounts/Accounts-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@class ACAccountStore, NSString, ACAccountType, ACAccountCredential, NSMutableDictionary, NSURL, NSDate, NSArray, NSMutableSet, NSNumber, NSDictionary, NSSet;

@interface ACAccount : NSObject <NSSecureCoding, NSCopying> {

	ACAccountStore* _store;
	NSString* _identifier;
	NSString* _accountDescription;
	NSString* _owningBundleID;
	NSString* _username;
	NSString* _authenticationType;
	NSString* _credentialType;
	NSString* _clientToken;
	BOOL _haveCheckedForClientToken;
	ACAccountType* _accountType;
	ACAccountCredential* _credential;
	NSMutableDictionary* _properties;
	NSMutableDictionary* _dataclassProperties;
	BOOL _accountAccessAvailable;
	BOOL _authenticated;
	BOOL _active;
	BOOL _supportsAuthentication;
	BOOL _visible;
	NSURL* _objectID;
	NSDate* _date;
	NSDate* _lastCredentialRenewalRejectionDate;
	ACAccount* _parentAccount;
	BOOL _haveCheckedForParentAccount;
	NSString* _parentAccountIdentifier;
	BOOL _haveCheckedForChildAccounts;
	NSArray* _childAccounts;
	NSMutableSet* _enabledDataclasses;
	NSMutableSet* _provisionedDataclasses;
	NSMutableSet* _dirtyProperties;
	NSMutableSet* _dirtyAccountProperties;
	NSMutableSet* _dirtyDataclassProperties;
	id _credentialsDidChangeObserver;
	/*^block*/id _accountPropertiesTransformer;
	BOOL _creatingFromManagedObject;

}

@property (nonatomic,readonly) ACAccount * ck_cloudKitAccount; 
@property (retain) NSString * calHostname; 
@property (readonly) BOOL calIsAutoRefreshed; 
@property (readonly) BOOL calIsCalDAVAccount; 
@property (readonly) BOOL calIsEnabled; 
@property (assign) BOOL calIsEnabledForCalendar; 
@property (assign) BOOL calIsEnabledForReminders; 
@property (readonly) BOOL calIsExchangeAccount; 
@property (readonly) BOOL calIsMissingParentAccount; 
@property (copy) NSString * calMainPrincipalUID; 
@property (copy) NSNumber * calPort; 
@property (copy,readonly) NSDictionary * calPrincipals; 
@property (assign) BOOL calPushDisabled; 
@property (assign) long long calRefreshInterval; 
@property (copy) NSURL * calServerURL; 
@property (assign) BOOL calUseSSL; 
@property (retain) NSString * calCollectionSetName; 
@property (assign) BOOL calLocalDataMigrationHasTakenPlace; 
@property (assign) BOOL calSkipCredentialVerification; 
@property (assign) BOOL calUseKerberos; 
@property (copy) NSString * calWebServicesRecordGUID; 
@property (readonly) NSURL * calExchangeWebServicesURL; 
@property (readonly) NSURL * calExternalExchangeWebServicesURL; 
@property (copy) NSURL * calExternalURL; 
@property (copy) NSString * calIdentityEmailAddress; 
@property (readonly) BOOL calIsDirty; 
@property (copy) NSString * calRootFolderID; 
@property (assign) BOOL calUseExternalURL; 
@property (setter=_aa_setRawPassword:,nonatomic,copy) NSString * _aa_rawPassword; 
@property (nonatomic,readonly) NSString * aa_altDSID; 
@property (nonatomic,readonly) NSString * aa_personID; 
@property (setter=aa_setFirstName:,nonatomic,copy) NSString * aa_firstName; 
@property (setter=aa_setLastName:,nonatomic,copy) NSString * aa_lastName; 
@property (nonatomic,readonly) NSString * aa_primaryEmail; 
@property (nonatomic,readonly) NSString * aa_appleId; 
@property (nonatomic,readonly) NSArray * aa_appleIDAliases; 
@property (nonatomic,readonly) BOOL aa_needsRegistration; 
@property (nonatomic,readonly) BOOL aa_needsEmailConfiguration; 
@property (nonatomic,readonly) BOOL aa_serviceUnavailable; 
@property (nonatomic,readonly) NSDictionary * aa_serviceUnavailableInfo; 
@property (nonatomic,readonly) NSString * aa_protocolVersion; 
@property (nonatomic,readonly) NSString * aa_displayName; 
@property (nonatomic,readonly) NSString * aa_syncStoreIdentifier; 
@property (nonatomic,readonly) NSString * aa_accountTypeString; 
@property (nonatomic,readonly) BOOL aa_isUsingiCloud; 
@property (nonatomic,readonly) BOOL aa_isManagedAppleID; 
@property (nonatomic,readonly) ACAccount * aa_fmfAccount; 
@property (nonatomic,readonly) ACAccount * aa_fmipAccount; 
@property (nonatomic,readonly) NSString * aa_fmipToken; 
@property (nonatomic,readonly) NSString * aa_mapsToken; 
@property (nonatomic,readonly) NSString * aa_hsaToken; 
@property (nonatomic,readonly) NSString * aa_accountFooterText; 
@property (nonatomic,readonly) NSDictionary * aa_accountFooterButton; 
@property (nonatomic,readonly) NSDictionary * aa_accountFirstDisplayAlert; 
@property (nonatomic,readonly) ACAccount * aa_cloudKitAccount; 
@property (nonatomic,readonly) ACAccount * aa_childMailAccount; 
@property (assign,setter=aa_setPrimaryAccount:,nonatomic) BOOL aa_isPrimaryAccount; 
@property (assign,setter=aa_setPrimaryEmailVerified:,nonatomic) BOOL aa_isPrimaryEmailVerified; 
@property (assign,setter=aa_setSyncedAccount:,nonatomic) BOOL aa_isSyncedAccount; 
@property (assign,setter=aa_setNeedsToVerifyTerms:,nonatomic) BOOL aa_needsToVerifyTerms; 
@property (assign,setter=aa_setUsesCloudDocs:,nonatomic) BOOL aa_isUsingCloudDocs; 
@property (assign,setter=aa_setCloudDocsMigrationComplete:,nonatomic) BOOL aa_isCloudDocsMigrationComplete; 
@property (setter=aa_setPassword:,nonatomic,copy) NSString * aa_password; 
@property (setter=aa_setAuthToken:,nonatomic,copy) NSString * aa_authToken; 
@property (assign,setter=aa_setUndergoingRepair:,nonatomic) BOOL aa_isUndergoingRepair; 
@property (nonatomic,readonly) int aa_repairerPID; 
@property (nonatomic,retain) NSString * mcAccountIdentifier; 
@property (nonatomic,retain) NSString * mcProfileUUID; 
@property (nonatomic,retain) NSString * mcPayloadUUID; 
@property (nonatomic,__weak,readonly) NSString * identifier; 
@property (nonatomic,retain) ACAccountType * accountType; 
@property (nonatomic,copy) NSString * accountDescription; 
@property (nonatomic,copy) NSString * username; 
@property (nonatomic,readonly) NSString * userFullName; 
@property (nonatomic,retain) ACAccountCredential * credential; 
@property (nonatomic,readonly) NSURL * objectID; 
@property (nonatomic,readonly) ACAccountStore * accountStore; 
@property (nonatomic,retain) ACAccount * parentAccount; 
@property (nonatomic,readonly) NSString * parentAccountIdentifier; 
@property (nonatomic,readonly) NSArray * childAccounts; 
@property (nonatomic,retain) NSMutableSet * enabledDataclasses; 
@property (nonatomic,retain) NSMutableSet * provisionedDataclasses; 
@property (nonatomic,__weak,readonly) NSDictionary * dataclassProperties; 
@property (assign,getter=isAuthenticated,nonatomic) BOOL authenticated; 
@property (nonatomic,__weak,readonly) NSDictionary * accountProperties; 
@property (nonatomic,__weak,readonly) ACAccount * displayAccount; 
@property (assign,getter=isActive,nonatomic) BOOL active; 
@property (assign,nonatomic) BOOL supportsAuthentication; 
@property (getter=isDirty,nonatomic,readonly) BOOL dirty; 
@property (nonatomic,readonly) NSSet * dirtyProperties;                                                                  //@synthesize dirtyProperties=_dirtyProperties - In the implementation block
@property (nonatomic,readonly) NSSet * dirtyAccountProperties;                                                           //@synthesize dirtyAccountProperties=_dirtyAccountProperties - In the implementation block
@property (nonatomic,readonly) NSSet * dirtyDataclassProperties;                                                         //@synthesize dirtyDataclassProperties=_dirtyDataclassProperties - In the implementation block
@property (nonatomic,readonly) NSString * authenticationType; 
@property (nonatomic,readonly) NSString * credentialType; 
@property (nonatomic,readonly) BOOL supportsPush; 
@property (nonatomic,retain) NSDate * creationDate; 
@property (assign,getter=isVisible,nonatomic) BOOL visible; 
@property (nonatomic,retain) NSDate * lastCredentialRenewalRejectionDate; 
@property (nonatomic,readonly) NSString * shortDebugName; 
@property (nonatomic,readonly) NSString * clientToken; 
@property (copy) id accountPropertiesTransformer;                                                                        //@synthesize accountPropertiesTransformer=_accountPropertiesTransformer - In the implementation block
+(id)aa_dataclassesBoundToPrimaryAppleAccount;
+(id)aa_dataclassesBoundToSingleAppleAccount;
+(id)_createNewAccountUID;
+(BOOL)supportsSecureCoding;
-(id)_usernameFromProperties:(id)arg1 ;
-(BOOL)isMobileMeAccount;
-(id)syncIdentityString;
-(void)applySyncProperties:(id)arg1 ;
-(void)setPasswordFromSync:(id)arg1 ;
-(BOOL)ic_hasICloudEmailAddress;
-(BOOL)ic_isManagedAppleID;
-(id)fmipAccountInfoWithTokens:(BOOL)arg1 ;
-(id)fmipAccountInfoForProactiveChanges;
-(id)fmwAccountInfoForProactiveChanges;
-(id)fmwAccountInfoWithTokens:(BOOL)arg1 ;
-(id)br_dsid;
-(BOOL)br_isEnabledForCloudDocs;
-(BOOL)br_isCloudDocsMigrated;
-(void)br_setCloudDocsMigrated:(BOOL)arg1 ;
-(BOOL)br_isCloudDocsMigrationComplete;
-(void)br_setCloudDocsMigrationComplete:(BOOL)arg1 ;
-(BOOL)br_isiCloudAccount;
-(BOOL)br_isPrimaryAccount;
-(BOOL)br_isEnabledForUbiquity;
-(id)br_firstName;
-(id)br_lastName;
-(BOOL)br_isManagedAppleID;
-(BOOL)br_isPrimaryiCloudAccount;
-(id)fmfAccountInfoWithTokens:(BOOL)arg1 ;
-(id)fmfAccountInfoForProactiveChanges;
-(BOOL)mf_usesSSL;
-(id)mf_hostname;
-(id)mf_legacyPasswordFromKeychain;
-(void*)mf_legacyKeychainProtocol;
-(void)mf_removeLegacyPasswordInKeychain;
-(Class)mf_accountClass;
-(BOOL)mf_migrateCredentialsIfNecessaryWithAccountCredential:(id)arg1 ;
-(unsigned)mf_legacyPortNumberForKeychain;
-(id)aaui_compositeName;
-(BOOL)aaui_isRestrictedForDataclass:(id)arg1 ;
-(long long)aaui_compositeNameFormat;
-(ACAccount *)ck_cloudKitAccount;
-(id)displayUsername;
-(BOOL)calIsCalDAVAccount;
-(id)valueForAccountPropertyKey:(id)arg1 ;
-(BOOL)calIsExchangeAccount;
-(NSURL *)calServerURL;
-(long long)calRefreshInterval;
-(BOOL)calIsEnabledForCalendar;
-(BOOL)calIsEnabledForReminders;
-(BOOL)_dataclassIsEnabled:(id)arg1 ;
-(NSString *)calHostname;
-(BOOL)calUseSSL;
-(id)_schemeStringForUseSSL:(BOOL)arg1 ;
-(NSNumber *)calPort;
-(BOOL)_useSSLForSchemeString:(id)arg1 ;
-(void)_setValue:(id)arg1 forAccountPropertyKey:(id)arg2 ;
-(id)_updateURL:(id)arg1 withHost:(id)arg2 port:(id)arg3 useSSL:(id)arg4 ;
-(void)setCalServerURL:(NSURL *)arg1 ;
-(void)_setIsEnabled:(BOOL)arg1 forDataclass:(id)arg2 ;
-(void)setCalHostname:(NSString *)arg1 ;
-(void)setCalPort:(NSNumber *)arg1 ;
-(void)setCalUseSSL:(BOOL)arg1 ;
-(id)_createExchangeWebServicesURLFromURL:(id)arg1 ;
-(NSURL *)calExternalURL;
-(NSDictionary *)calPrincipals;
-(void)setCalPrincipals:(NSDictionary *)arg1 ;
-(id)calPrincipalURLForPrincipalWithUID:(id)arg1 serverURL:(id)arg2 ;
-(id)valueForKey:(id)arg1 forPrincipalWithUID:(id)arg2 ;
-(void)addPrincipal:(id)arg1 withUID:(id)arg2 ;
-(id)_diffWithAccount:(id)arg1 firstPropertyOnly:(BOOL)arg2 ;
-(void)createDictionaryForPrincipalWithUID:(id)arg1 ;
-(id)_diffAccountPropertiesWithAccount:(id)arg1 firstPropertyOnly:(BOOL)arg2 ;
-(id)_diffPropertiesWithAccount:(id)arg1 firstPropertyOnly:(BOOL)arg2 ;
-(id)_accountPropertiesKeys;
-(BOOL)calIsAutoRefreshed;
-(BOOL)calIsEnabled;
-(BOOL)calIsMissingParentAccount;
-(NSString *)calMainPrincipalUID;
-(BOOL)calPushDisabled;
-(void)setCalIsEnabledForCalendar:(BOOL)arg1 ;
-(void)setCalIsEnabledForReminders:(BOOL)arg1 ;
-(void)setCalMainPrincipalUID:(NSString *)arg1 ;
-(void)setCalPushDisabled:(BOOL)arg1 ;
-(void)setCalRefreshInterval:(long long)arg1 ;
-(NSString *)calCollectionSetName;
-(BOOL)calLocalDataMigrationHasTakenPlace;
-(BOOL)calSkipCredentialVerification;
-(BOOL)calUseKerberos;
-(NSString *)calWebServicesRecordGUID;
-(void)setCalCollectionSetName:(NSString *)arg1 ;
-(void)setCalLocalDataMigrationHasTakenPlace:(BOOL)arg1 ;
-(void)setCalSkipCredentialVerification:(BOOL)arg1 ;
-(void)setCalUseKerberos:(BOOL)arg1 ;
-(void)setCalWebServicesRecordGUID:(NSString *)arg1 ;
-(NSURL *)calExchangeWebServicesURL;
-(NSURL *)calExternalExchangeWebServicesURL;
-(NSString *)calIdentityEmailAddress;
-(BOOL)calIsDirty;
-(NSString *)calRootFolderID;
-(BOOL)calUseExternalURL;
-(void)setCalExternalURL:(NSURL *)arg1 ;
-(void)setCalIdentityEmailAddress:(NSString *)arg1 ;
-(void)setCalRootFolderID:(NSString *)arg1 ;
-(void)setCalUseExternalURL:(BOOL)arg1 ;
-(id)calPrincipalURLForPrincipalWithUID:(id)arg1 ;
-(id)diffWithAccount:(id)arg1 ;
-(id)firstDifferentPropertyWithAccount:(id)arg1 ;
-(BOOL)removePrincipalWithUID:(id)arg1 ;
-(BOOL)setValue:(id)arg1 forKey:(id)arg2 forPrincipalWithUID:(id)arg3 ;
-(void)removeAccountPropertyForKey:(id)arg1 ;
-(void)_aa_setAltDSID:(id)arg1 ;
-(void)_aa_setAppleID:(id)arg1 ;
-(void)aa_configureCerts;
-(void)aa_removeCerts;
-(void)_aa_clearRawPassword;
-(NSString *)_aa_rawPassword;
-(void)_aa_setRawPassword:(id)arg1 ;
-(NSString *)aa_personID;
-(BOOL)aa_isUsingiCloud;
-(void)aa_updateWithProvisioningResponse:(id)arg1 ;
-(int)mobileMeAccountStatus;
-(void)aa_setAuthToken:(id)arg1 ;
-(ACAccount *)aa_fmipAccount;
-(ACAccount *)aa_fmfAccount;
-(ACAccount *)aa_cloudKitAccount;
-(void)aa_setMapsToken:(id)arg1 ;
-(void)aa_setHSAToken:(id)arg1 ;
-(ACAccount *)aa_childMailAccount;
-(BOOL)aa_needsPCSRepairWithAuthToken:(id)arg1 ;
-(BOOL)aa_isPCSErrorTransient:(CFErrorRef)arg1 ;
-(void)aa_setFirstName:(id)arg1 ;
-(void)aa_setLastName:(id)arg1 ;
-(NSString *)aa_accountTypeString;
-(void)aa_setPrimaryEmailVerified:(BOOL)arg1 ;
-(NSString *)aa_protocolVersion;
-(NSString *)aa_fmipToken;
-(NSString *)aa_mapsToken;
-(NSString *)aa_hsaToken;
-(id)aa_hsaTokenWithError:(id*)arg1 ;
-(NSString *)aa_accountFooterText;
-(NSDictionary *)aa_accountFooterButton;
-(NSDictionary *)aa_accountFirstDisplayAlert;
-(NSDictionary *)aa_serviceUnavailableInfo;
-(void)aa_setSyncedAccount:(BOOL)arg1 ;
-(BOOL)aa_isSyncedAccount;
-(BOOL)aa_needsRegistration;
-(void)aa_setUseCellular:(BOOL)arg1 forDataclass:(id)arg2 ;
-(NSString *)aa_syncStoreIdentifier;
-(BOOL)aa_isUndergoingRepair;
-(void)aa_setUndergoingRepair:(BOOL)arg1 ;
-(int)aa_repairerPID;
-(BOOL)aa_needsPCSRepair;
-(NSString *)aa_appleId;
-(NSString *)aa_password;
-(NSString *)aa_firstName;
-(NSString *)aa_lastName;
-(NSString *)aa_authToken;
-(BOOL)aa_serviceUnavailable;
-(void)aa_setNeedsToVerifyTerms:(BOOL)arg1 ;
-(BOOL)aa_needsToVerifyTerms;
-(NSString *)aa_primaryEmail;
-(NSArray *)aa_appleIDAliases;
-(BOOL)aa_isManagedAppleID;
-(id)aa_authTokenWithError:(id*)arg1 ;
-(NSString *)aa_altDSID;
-(void)aa_setPrimaryAccount:(BOOL)arg1 ;
-(NSString *)aa_displayName;
-(BOOL)aa_isPrimaryEmailVerified;
-(BOOL)aa_needsEmailConfiguration;
-(BOOL)aa_isPrimaryAccount;
-(void)aa_setUsesCloudDocs:(BOOL)arg1 ;
-(void)aa_setCloudDocsMigrationComplete:(BOOL)arg1 ;
-(BOOL)aa_isCloudDocsMigrationComplete;
-(BOOL)aa_useCellularForDataclass:(id)arg1 ;
-(void)aa_setPassword:(id)arg1 ;
-(BOOL)aa_isUsingCloudDocs;
-(void)storeOriginalUsername;
-(id)initWithAppleID:(id)arg1 password:(id)arg2 ;
-(id)_registeredBundles;
-(BOOL)canRemoveAccount;
-(void)setDSID:(id)arg1 ;
-(id)dsid;
-(id)appleID;
-(id)aida_dsid;
-(id)aida_tokenWithExpiryCheckForService:(id)arg1 ;
-(id)aida_tokenWithExpirationCheck;
-(id)aida_deviceProvisioningInfo;
-(id)aida_alternateDSID;
-(id)aida_tokenForService:(id)arg1 ;
-(BOOL)MCIsManaged;
-(NSString *)mcAccountIdentifier;
-(void)setMcAccountIdentifier:(NSString *)arg1 ;
-(NSString *)mcProfileUUID;
-(void)setMcProfileUUID:(NSString *)arg1 ;
-(NSString *)mcPayloadUUID;
-(void)setMcPayloadUUID:(NSString *)arg1 ;
-(id)mcBackingProfile;
-(id)mcBackingPayload;
-(NSString *)userFullName;
-(id)propertyForKey:(id)arg1 ;
-(void)setProperty:(id)arg1 forKey:(id)arg2 ;
-(void)_clearCachedChildAccounts;
-(void)_clearDirtyProperties;
-(id)qualifiedUsername;
-(void)_clearCachedCredentials;
-(void)_installCredentialsChangedObserver;
-(void)_markPropertyDirty:(id)arg1 ;
-(void)credentialsChanged:(id)arg1 ;
-(id)accountPropertiesTransformer;
-(void)_markAccountPropertyDirty:(id)arg1 ;
-(id)enabledAndSyncableDataclasses;
-(BOOL)_useParentForCredentials;
-(void)_markDataclassPropertyDirty:(id)arg1 ;
-(void)_markCredentialDirty;
-(void)setAccountProperties:(NSDictionary *)arg1 ;
-(id)defaultAutodiscoverDomainForChildType:(id)arg1 ;
-(void)setCreatingFromManagedObject:(BOOL)arg1 ;
-(NSString *)shortDebugName;
-(void)setSecIdentity:(SecIdentityRef)arg1 ;
-(void)setSecCertificates:(id)arg1 ;
-(void)setAccountPropertiesTransformer:(id)arg1 ;
-(NSString *)authenticationType;
-(void)setAuthenticationType:(NSString *)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)description;
-(void)reload;
-(id)objectForKeyedSubscript:(id)arg1 ;
-(void)setObject:(id)arg1 forKeyedSubscript:(id)arg2 ;
-(BOOL)isActive;
-(NSString *)identifier;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setIdentifier:(NSString *)arg1 ;
-(void)setVisible:(BOOL)arg1 ;
-(void)setActive:(BOOL)arg1 ;
-(BOOL)isVisible;
-(ACAccountCredential *)credential;
-(id)fullDescription;
-(BOOL)supportsAuthentication;
-(void)setSupportsAuthentication:(BOOL)arg1 ;
-(id)initWithManagedAccount:(id)arg1 ;
-(id)owningBundleID;
-(void)setOwningBundleID:(id)arg1 ;
-(id)initWithManagedAccount:(id)arg1 accountStore:(id)arg2 ;
-(void)_loadAllCachedProperties;
-(void)_setAccountStore:(id)arg1 ;
-(NSSet *)dirtyDataclassProperties;
-(id)_initWithManagedAccount:(id)arg1 accountStore:(id)arg2 withDirtyStateFromAccount:(id)arg3 ;
-(id)diffAccount:(id)arg1 ;
-(NSSet *)dirtyAccountProperties;
-(void)setDataclassProperties:(NSDictionary *)arg1 ;
-(void)setEnabledDataclasses:(NSMutableSet *)arg1 ;
-(void)markAllPropertiesDirty;
-(void)setLastCredentialRenewalRejectionDate:(NSDate *)arg1 ;
-(void)_loadCachedPropertiesWithoutCredentials;
-(id)accountByCleaningThirdPartyTransformations;
-(NSDate *)lastCredentialRenewalRejectionDate;
-(SecIdentityRef)copySecIdentity;
-(id)secCertificates;
-(BOOL)authenticated;
-(void)setProperties:(id)arg1 forDataclass:(id)arg2 ;
-(NSSet *)dirtyProperties;
-(BOOL)isPropertyDirty:(id)arg1 ;
-(void)_setObjectID:(id)arg1 ;
-(id)childAccountsWithAccountTypeIdentifier:(id)arg1 ;
-(BOOL)isEnabledToSyncDataclass:(id)arg1 ;
-(BOOL)addClientToken:(id)arg1 ;
-(void)takeValuesFromModifiedAccount:(id)arg1 ;
-(void)setEnabled:(BOOL)arg1 forDataclass:(id)arg2 ;
-(id)propertiesForDataclass:(id)arg1 ;
-(NSMutableSet *)provisionedDataclasses;
-(BOOL)isProvisionedForDataclass:(id)arg1 ;
-(BOOL)isDirty;
-(void)setProvisionedDataclasses:(NSMutableSet *)arg1 ;
-(void)setAuthenticated:(BOOL)arg1 ;
-(NSString *)parentAccountIdentifier;
-(NSDictionary *)accountProperties;
-(void)setAccountProperty:(id)arg1 forKey:(id)arg2 ;
-(id)credentialWithError:(id*)arg1 ;
-(NSMutableSet *)enabledDataclasses;
-(ACAccountStore *)accountStore;
-(void)setAccountDescription:(NSString *)arg1 ;
-(NSString *)clientToken;
-(BOOL)isAuthenticated;
-(void)setAccountType:(ACAccountType *)arg1 ;
-(ACAccount *)displayAccount;
-(id)accountPropertyForKey:(id)arg1 ;
-(void)setUsername:(NSString *)arg1 ;
-(NSString *)accountDescription;
-(NSString *)username;
-(void)refresh;
-(BOOL)isEnabledForDataclass:(id)arg1 ;
-(NSDate *)creationDate;
-(void)setCreationDate:(NSDate *)arg1 ;
-(NSURL *)objectID;
-(void)setCredentialType:(NSString *)arg1 ;
-(BOOL)supportsPush;
-(ACAccountType *)accountType;
-(NSDictionary *)dataclassProperties;
-(NSString *)credentialType;
-(void)setCredential:(ACAccountCredential *)arg1 ;
-(NSArray *)childAccounts;
-(id)initWithAccountType:(id)arg1 ;
-(void)setParentAccount:(ACAccount *)arg1 ;
-(ACAccount *)parentAccount;
@end

