/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:05:14 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/Frameworks/CoreTelephony.framework/Support/CommCenter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct object {
	dispatch_object_s fObj;
} object;

typedef struct queue {
	object fObj;
} queue;

typedef struct block<bool ()(const __CFString *, const void *)> {
	/*^block*/id fBlock;
} block<bool ()(const __CFString *, const void *)>;

typedef struct block<void ()(const __CFDictionary *, const __CFArray *)> {
	/*^block*/id fBlock;
} block<void ()(const __CFDictionary *, const __CFArray *)>;

typedef struct dispatch_queue_s* dispatch_queue_sRef;

typedef struct _NSZone* NSZoneRef;

typedef struct weak_ptr<DataNetworkMonitor> {
	DataNetworkMonitor __ptr_;
	__shared_weak_count __cntrl_;
} weak_ptr<DataNetworkMonitor>;

typedef struct _long {
	char* __data_;
	unsigned long long __size_;
	unsigned long long __cap_;
} long;

typedef struct {
	unsigned char __size_;
} SCD_Struct_Da8;

typedef struct _raw {
	unsigned long long __words[3];
} raw;

typedef struct _short {
	char __data_[23];
	SCD_Struct_Da8 ;
} short;

typedef struct _rep {
	/*function pointer*/void* ;
	long __l;
	short __s;
	const aw) __r;
} rep;

typedef struct _compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > {
	const ep __first_;
} compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {
	compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > __r_;
} basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >;

typedef struct shared_ptr<ctu::Logger> {
	Logger __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<ctu::Logger>;

typedef struct CFSharedRef<const __CFData> {
	__CFData fRef;
} CFSharedRef<const __CFData>;

typedef struct CFSharedRef<const __CFString> {
	__CFString fRef;
} CFSharedRef<const __CFString>;

typedef struct dict {
	object fObj;
} dict;

typedef struct block<void ()(iCloudAccountEvent, const std::__1::basic_string<char> &)> {
	/*^block*/id fBlock;
} block<void ()(iCloudAccountEvent, const std::__1::basic_string<char> &)>;

typedef struct shared_ptr<ctu::Timer> {
	Timer __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<ctu::Timer>;

typedef struct shared_ptr<std::__1::basic_string<char> > {
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<std::__1::basic_string<char> >;

typedef struct shared_ptr<CellularPlanBootstrapAssertion> {
	CellularPlanBootstrapAssertion __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<CellularPlanBootstrapAssertion>;

typedef struct weak_ptr<push::PushController> {
	PushController __ptr_;
	__shared_weak_count __cntrl_;
} weak_ptr<push::PushController>;

typedef struct __CFArray* CFArrayRef;

