/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:30:59 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIControl.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/NSCoding.h>

@protocol _UISwitchInternalViewProtocol;
@class UILongPressGestureRecognizer, UIPanGestureRecognizer, UIView, UIColor, UIImage, NSString;

@interface UISwitch : UIControl <UIGestureRecognizerDelegate, NSCoding> {

	UILongPressGestureRecognizer* _pressGesture;
	UIPanGestureRecognizer* _panGesture;
	UIView*<_UISwitchInternalViewProtocol> _control;
	BOOL _onStateChangedByLongPressGestureRecognizer;
	BOOL _onStateChangedByPanGestureRecognizer;
	BOOL _on;
	double _enabledAlpha;

}

@property (nonatomic,retain) UIColor * onTintColor; 
@property (nonatomic,retain) UIColor * tintColor; 
@property (nonatomic,retain) UIColor * thumbTintColor; 
@property (nonatomic,retain) UIImage * onImage; 
@property (nonatomic,retain) UIImage * offImage; 
@property (assign,getter=isOn,nonatomic) BOOL on;                                                                                   //@synthesize on=_on - In the implementation block
@property (setter=_setOnColor:,getter=_onColor,nonatomic,retain) UIColor * onColor; 
@property (assign,setter=_setAlwaysShowsOnOffLabel:,getter=_alwaysShowOnOffLabel,nonatomic) BOOL alwaysShowOnOffLabel; 
@property (assign,nonatomic) double enabledAlpha;                                                                                   //@synthesize enabledAlpha=_enabledAlpha - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(Class)_internalViewClass;
-(unsigned long long)defaultAccessibilityTraits;
-(BOOL)isAccessibilityElementByDefault;
-(BOOL)isElementAccessibilityExposedToInterfaceBuilder;
-(id)_scriptingInfo;
-(id)initWithFrame:(CGRect)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)_populateArchivedSubviews:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(void)setAlpha:(double)arg1 ;
-(CGSize)_intrinsicSizeWithinSize:(CGSize)arg1 ;
-(id)init;
-(void)setFrame:(CGRect)arg1 ;
-(BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
-(BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(void)setSemanticContentAttribute:(long long)arg1 ;
-(void)setEnabled:(BOOL)arg1 ;
-(UIEdgeInsets)alignmentRectInsets;
-(void)_encodeFrameWithCoder:(id)arg1 ;
-(UIColor *)tintColor;
-(void)setTintColor:(UIColor *)arg1 ;
-(BOOL)_gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(unsigned long long)_controlEventsForActionTriggered;
-(void)setThumbTintColor:(UIColor *)arg1 ;
-(UIColor *)thumbTintColor;
-(void)_setOnTintColor:(id)arg1 ;
-(void)_onAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void*)arg3 ;
-(UIColor *)onTintColor;
-(void)setOnTintColor:(UIColor *)arg1 ;
-(UIImage *)onImage;
-(void)setOnImage:(UIImage *)arg1 ;
-(UIImage *)offImage;
-(void)setOffImage:(UIImage *)arg1 ;
-(void)setOn:(BOOL)arg1 ;
-(id)_onTintColor;
-(void)setEnabledAlpha:(double)arg1 ;
-(void)_handlePanNL:(id)arg1 ;
-(void)_handleTapNL:(id)arg1 ;
-(void)_handleLongPressNL:(id)arg1 ;
-(BOOL)_handleTranslationInPanGestureRecognizer:(id)arg1 ;
-(void)_animateToOn:(BOOL)arg1 withDuration:(double)arg2 sendAction:(BOOL)arg3 ;
-(BOOL)_useOldSize;
-(void)_commonInitNewLook;
-(void)_commonInitNewLookNeue1;
-(BOOL)_shouldAlterCodedFrame;
-(BOOL)isOn;
-(void)setOn:(BOOL)arg1 animated:(BOOL)arg2 ;
-(void)_setOnColor:(id)arg1 ;
-(id)_onColor;
-(void)_setAlwaysShowsOnOffLabel:(BOOL)arg1 ;
-(BOOL)_alwaysShowOnOffLabel;
-(void)setAlternateColors:(BOOL)arg1 ;
-(void)_setPressed:(BOOL)arg1 on:(BOOL)arg2 animated:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(double)_knobBounceDuration;
-(void)_setKnobBounceDuration:(double)arg1 ;
-(double)_knobBounceDamping;
-(void)_setKnobBounceDamping:(double)arg1 ;
-(double)_knobBounceStiffness;
-(void)_setKnobBounceStiffness:(double)arg1 ;
-(double)_knobBounceMass;
-(void)_setKnobBounceMass:(double)arg1 ;
-(double)enabledAlpha;
@end

