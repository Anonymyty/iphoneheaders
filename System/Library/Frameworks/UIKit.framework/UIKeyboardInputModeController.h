/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:31:09 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol UIKeyboardInputModeControllerDelegate;
@class UIKeyboardInputMode, NSArray, NSString;

@interface UIKeyboardInputModeController : NSObject {

	UIKeyboardInputMode* _currentInputMode;
	NSArray* _inputModesWithoutHardwareSupport;
	NSArray* _allExtensions;
	NSArray* _allowedExtensions;
	BOOL _skipExtensionInputModes;
	BOOL _cacheNeedsRefresh;
	BOOL _allExtensionsNeedRefresh;
	int _notifyPasscodeChangedToken;
	BOOL _shouldRunContinuousDiscovery;
	NSArray* keyboardInputModes;
	NSArray* keyboardInputModeIdentifiers;
	NSArray* enabledInputModes;
	NSArray* normalizedInputModes;
	NSArray* defaultKeyboardInputModes;
	NSArray* defaultRawInputModes;
	NSArray* defaultInputModes;
	NSArray* defaultNormalizedInputModes;
	UIKeyboardInputMode* _lastUsedInputMode;
	NSString* _inputModeContextIdentifier;
	id<UIKeyboardInputModeControllerDelegate> _delegate;
	UIKeyboardInputMode* _nextInputModeToUse;
	UIKeyboardInputMode* _currentUsedInputMode;
	id _extensionMatchingContext;

}

@property (readonly) NSArray * supportedInputModeIdentifiers; 
@property (readonly) NSArray * inputModesWithoutHardwareSupport; 
@property (readonly) NSArray * enabledInputModeIdentifiers; 
@property (readonly) NSArray * normalizedEnabledInputModeIdentifiers; 
@property (readonly) NSArray * enabledInputModeLanguages; 
@property (readonly) NSArray * activeInputModeIdentifiers; 
@property (retain) UIKeyboardInputMode * currentInputMode; 
@property (assign,nonatomic) UIKeyboardInputMode * currentInputModeInPreference; 
@property (nonatomic,retain) UIKeyboardInputMode * lastUsedInputMode;                         //@synthesize lastUsedInputMode=_lastUsedInputMode - In the implementation block
@property (nonatomic,readonly) UIKeyboardInputMode * hardwareInputMode; 
@property (nonatomic,readonly) UIKeyboardInputMode * currentSystemInputMode; 
@property (nonatomic,readonly) UIKeyboardInputMode * currentPublicInputMode; 
@property (nonatomic,readonly) UIKeyboardInputMode * currentLinguisticInputMode; 
@property (nonatomic,readonly) BOOL containsDictationSupportedInputMode; 
@property (nonatomic,copy) NSString * inputModeContextIdentifier;                             //@synthesize inputModeContextIdentifier=_inputModeContextIdentifier - In the implementation block
@property (assign,nonatomic) BOOL shouldRunContinuousDiscovery;                               //@synthesize shouldRunContinuousDiscovery=_shouldRunContinuousDiscovery - In the implementation block
@property (assign,nonatomic) id<UIKeyboardInputModeControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSArray * allowedExtensions;                                   //@synthesize allowedExtensions=_allowedExtensions - In the implementation block
@property (retain) NSArray * keyboardInputModes; 
@property (retain) NSArray * keyboardInputModeIdentifiers; 
@property (retain) NSArray * enabledInputModes; 
@property (retain) NSArray * normalizedInputModes; 
@property (retain) NSArray * defaultKeyboardInputModes; 
@property (nonatomic,copy) NSArray * defaultRawInputModes; 
@property (retain) NSArray * defaultInputModes; 
@property (retain) NSArray * defaultNormalizedInputModes; 
@property (nonatomic,retain) UIKeyboardInputMode * nextInputModeToUse;                        //@synthesize nextInputModeToUse=_nextInputModeToUse - In the implementation block
@property (nonatomic,retain) UIKeyboardInputMode * currentUsedInputMode;                      //@synthesize currentUsedInputMode=_currentUsedInputMode - In the implementation block
@property (nonatomic,retain) id extensionMatchingContext;                                     //@synthesize extensionMatchingContext=_extensionMatchingContext - In the implementation block
+(id)sharedInputModeController;
+(id)inputModeIdentifierForPreferredLanguages:(id)arg1 passingTest:(/*^block*/id)arg2 ;
-(NSArray *)normalizedEnabledInputModeIdentifiers;
-(id)identifiersFromInputModes:(id)arg1 ;
-(BOOL)identifierIsValidSystemInputMode:(id)arg1 ;
-(void)saveDeviceUnlockPasscodeInputModes;
-(NSArray *)enabledInputModeIdentifiers;
-(NSArray *)supportedInputModeIdentifiers;
-(id)enabledInputModeIdentifiers:(BOOL)arg1 ;
-(id)inputModesFromIdentifiers:(id)arg1 ;
-(NSArray *)inputModesWithoutHardwareSupport;
-(NSArray *)enabledInputModeLanguages;
-(void)setDelegate:(id<UIKeyboardInputModeControllerDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<UIKeyboardInputModeControllerDelegate>)delegate;
-(void)setShouldRunContinuousDiscovery:(BOOL)arg1 ;
-(UIKeyboardInputMode *)currentInputMode;
-(UIKeyboardInputMode *)hardwareInputMode;
-(UIKeyboardInputMode *)currentPublicInputMode;
-(UIKeyboardInputMode *)currentSystemInputMode;
-(id)activeInputModes;
-(NSString *)inputModeContextIdentifier;
-(NSArray *)activeInputModeIdentifiers;
-(UIKeyboardInputMode *)currentInputModeInPreference;
-(id)nextInputModeFromList:(id)arg1 withFilter:(unsigned long long)arg2 withTraits:(id)arg3 ;
-(void)setCurrentInputModeInPreference:(UIKeyboardInputMode *)arg1 ;
-(void)updateCurrentAndNextInputModes;
-(id)nextInputModeInPreferenceListForTraits:(id)arg1 ;
-(void)_clearAllExtensionIfNeeded;
-(id)inputModeLastUsedForLanguage:(id)arg1 ;
-(void)performWithoutExtensionInputModes:(/*^block*/id)arg1 ;
-(void)updateLastUsedInputMode:(id)arg1 ;
-(id)nextInputModeInPreferenceListForTraits:(id)arg1 updatePreference:(BOOL)arg2 ;
-(UIKeyboardInputMode *)currentLinguisticInputMode;
-(void)setInputModeContextIdentifier:(NSString *)arg1 ;
-(void)setCurrentInputMode:(UIKeyboardInputMode *)arg1 ;
-(id)nextInputModeToUseForTraits:(id)arg1 ;
-(id)extensionInputModes;
-(void)setKeyboardInputModes:(NSArray *)arg1 ;
-(void)setKeyboardInputModeIdentifiers:(NSArray *)arg1 ;
-(void)setEnabledInputModes:(NSArray *)arg1 ;
-(void)setNormalizedInputModes:(NSArray *)arg1 ;
-(void)setDefaultKeyboardInputModes:(NSArray *)arg1 ;
-(void)setDefaultRawInputModes:(NSArray *)arg1 ;
-(void)setDefaultInputModes:(NSArray *)arg1 ;
-(void)setDefaultNormalizedInputModes:(NSArray *)arg1 ;
-(void)didEnterBackground:(id)arg1 ;
-(void)willEnterForeground:(id)arg1 ;
-(void)keyboardsPreferencesChanged:(id)arg1 ;
-(NSArray *)keyboardInputModes;
-(NSArray *)keyboardInputModeIdentifiers;
-(void)_beginContinuousDiscoveryIfNeeded;
-(void)updateCurrentInputMode:(id)arg1 ;
-(UIKeyboardInputMode *)currentUsedInputMode;
-(UIKeyboardInputMode *)lastUsedInputMode;
-(id)_systemInputModePassingTest:(/*^block*/id)arg1 ;
-(void)_setCurrentInputMode:(id)arg1 force:(BOOL)arg2 ;
-(NSArray *)normalizedInputModes;
-(NSArray *)enabledInputModes;
-(id)suggestedInputModesForCurrentLocale:(BOOL)arg1 fallbackToDefaultInputModes:(BOOL)arg2 ;
-(NSArray *)defaultKeyboardInputModes;
-(id)filteredTVInputModesFromInputModes:(id)arg1 ;
-(NSArray *)defaultRawInputModes;
-(id)appendPasscodeInputModes:(id)arg1 ;
-(void)updateDefaultInputModesIfNecessaryForIdiom;
-(NSArray *)defaultNormalizedInputModes;
-(NSArray *)defaultInputModes;
-(id)extensionMatchingContext;
-(void)setExtensionMatchingContext:(id)arg1 ;
-(BOOL)shouldRunContinuousDiscovery;
-(BOOL)_mayContainExtensionInputModes;
-(id)_MCFilteredExtensionIdentifiers;
-(void)_removeExtensions:(id)arg1 ;
-(BOOL)verifyKeyboardExtensionsWithApp;
-(id)_allExtensionsFromMatchingExtensions:(id)arg1 ;
-(UIKeyboardInputMode *)nextInputModeToUse;
-(void)setNextInputModeToUse:(UIKeyboardInputMode *)arg1 ;
-(void)_setCurrentAndNextInputModePreference;
-(id)nextInputModeToUseForTraits:(id)arg1 updatePreference:(BOOL)arg2 ;
-(void)setLastUsedInputMode:(UIKeyboardInputMode *)arg1 ;
-(id)inputModeIdentifierLastUsedForLanguage:(id)arg1 ;
-(void)setCurrentUsedInputMode:(UIKeyboardInputMode *)arg1 ;
-(void)startDictationConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2 ;
-(id)inputModeWithIdentifier:(id)arg1 ;
-(BOOL)containsDictationSupportedInputMode;
-(BOOL)currentLocaleRequiresExtendedSetup;
-(id)defaultEnabledInputModesForCurrentLocale:(BOOL)arg1 ;
-(id)suggestedInputModesForCurrentLocale;
-(id)suggestedInputModesForPreferredLanguages;
-(BOOL)deviceStateIsLocked;
-(void)switchToCurrentSystemInputMode;
-(void)performWithForcedExtensionInputModes:(/*^block*/id)arg1 ;
-(void)startConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2 ;
-(NSArray *)allowedExtensions;
@end

