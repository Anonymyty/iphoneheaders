/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:29:06 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/Frameworks/MapKit.framework/MapKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MapKit/MapKit-Structs.h>
#import <UIKit/UIView.h>
#import <libobjc.A.dylib/MKOverlayContainerViewDelegate.h>
#import <libobjc.A.dylib/VKPuckAnimatorDelegate.h>
#import <libobjc.A.dylib/MKAnnotationContainerViewDelegate.h>
#import <libobjc.A.dylib/VKMapViewDelegate.h>
#import <libobjc.A.dylib/MKMapGestureControllerDelegate.h>
#import <libobjc.A.dylib/MKAnnotationMarkerContainer.h>
#import <libobjc.A.dylib/MKAnnotationManagerDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/MKVariableDelayTapRecognizerDelegate.h>
#import <libobjc.A.dylib/GEOResourceManifestTileGroupObserver.h>
#import <libobjc.A.dylib/NSCoding.h>

@protocol MKMapViewDelegateMKMapViewDelegatePrivate;
@class MKMapViewInternal, UIView, MKMapAnnotationManager, MKAnnotationContainerView, MKAttributionLabel, UIImageView, NSTimer, MKDebugLocationConsole, _MKEnvironmentLabel, UILongPressGestureRecognizer, UITapGestureRecognizer, UIGestureRecognizer, MKMapGestureController, MKOverlayContainerView, MKBasicMapView, VKMapView, VKLabelMarker, MKScaleView, MKCompassView, MKUserLocation, VKPuckAnimator, VKRouteContext, MKMapCamera, UITextView, UIPanGestureRecognizer, UILayoutGuide, NSLayoutConstraint, NSArray, NSString, CLLocation, MKAnnotationView, GEOResourceManifestConfiguration, GEOMapRegion, UIPopoverController, UIPinchGestureRecognizer, UIRotationGestureRecognizer;

@interface MKMapView : UIView <MKOverlayContainerViewDelegate, VKPuckAnimatorDelegate, MKAnnotationContainerViewDelegate, VKMapViewDelegate, MKMapGestureControllerDelegate, MKAnnotationMarkerContainer, MKAnnotationManagerDelegate, UIGestureRecognizerDelegate, MKVariableDelayTapRecognizerDelegate, GEOResourceManifestTileGroupObserver, NSCoding> {

	MKMapViewInternal* _internal;
	UIView* _contentView;
	MKMapAnnotationManager* _annotationManager;
	MKAnnotationContainerView* _annotationContainer;
	MKAttributionLabel* _attributionLabel;
	/*^block*/id _annotationRectTest;
	/*^block*/id _annotationCoordinateTest;
	UIImageView* _attributionBadgeView;
	NSTimer* _startEffectsTimer;
	id<MKMapViewDelegate><MKMapViewDelegatePrivate> _safeDelegate;
	id<MKMapViewDelegate><MKMapViewDelegatePrivate> _unsafeDelegate;
	unsigned long long _suspendedEffectsCount;
	unsigned long long _userInteractionDisabledCount;
	unsigned long long _mapType;
	NSTimer* _defaultLocationTimer;
	MKDebugLocationConsole* _debugLocationConsole;
	/*^block*/id _debugConsoleAdditionalInfoProvider;
	_MKEnvironmentLabel* _debugCurrentEnvironmentLabel;
	double _heading;
	UILongPressGestureRecognizer* _longPressGestureRecognizer;
	UITapGestureRecognizer* _selectingTapGestureRecognizer;
	UITapGestureRecognizer* _nonselectingTapGestureRecognizer;
	UIGestureRecognizer* _locationConsoleGesture;
	MKMapGestureController* _gestureController;
	MKOverlayContainerView* _overlayContainer;
	long long _userTrackingMode;
	MKBasicMapView* _basicMapView;
	VKMapView* _mapView;
	VKLabelMarker* _pressedLabelMarker;
	MKScaleView* _scaleView;
	MKCompassView* _compassView;
	BOOL _scaleVisible;
	BOOL _compassVisible;
	BOOL _showsScale;
	BOOL _showsCompass;
	BOOL _showsScaleDuringZoom;
	UIView* _scrollContainerView;
	/*^block*/id _regionSetterWhenSized;
	MKUserLocation* _userLocation;
	VKPuckAnimator* _userLocationAnimator;
	VKRouteContext* _routeContext;
	MKMapCamera* _camera;
	id _topLayoutGuide;
	id _bottomLayoutGuide;
	/*^block*/id _showCalloutAfterRegionChangeBlock;
	/*^block*/id _selectAnnotationViewAfterRedrawBlock;
	UITextView* _vectorKitDebugView;
	UIEdgeInsets _edgeInsets;
	UIPanGestureRecognizer* _vectorKitStyleDebugGestureRecognizer;
	double _verticalYawOverride;
	long long _annotationTrackingZoomStyle;
	struct {
		unsigned changingRegion : 1;
		unsigned debugViewHeading : 1;
		unsigned draggingInterrupted : 1;
		unsigned didStartSmoothScrolling : 1;
		unsigned hasRenderedSomething : 1;
		unsigned ignoreHeadingUpdates : 1;
		unsigned ignoreLocationUpdates : 1;
		unsigned isSuspended : 1;
		unsigned forceDisplayEffects : 1;
		unsigned longPressing : 1;
		unsigned persistFixedUserLocation : 1;
		unsigned regionChangeIsAnimated : 1;
		unsigned rotationSupported : 1;
		unsigned scrollEnabled : 1;
		unsigned scrolling : 1;
		unsigned showHeadingIndicator : 1;
		unsigned alwaysShowHeadingIndicator : 1;
		unsigned useVehicleHeading : 1;
		unsigned showsUserLocation : 1;
		unsigned zoomEnabled : 1;
		unsigned zoomIsAnimated : 1;
		unsigned zooming : 1;
		unsigned isChangingViewSize : 1;
		unsigned isChangingEdgeInsets : 1;
		unsigned showsAttribution : 1;
		unsigned showsAttributionBadge : 1;
		unsigned useOld2DAnnotationContainer : 1;
		unsigned rotating : 1;
		unsigned pitching : 1;
		unsigned rotateEnabled : 1;
		unsigned pitchEnabled : 1;
		unsigned showsBuildings : 1;
		unsigned showsPointsOfInterest : 1;
		unsigned showsTraffic : 1;
		unsigned hasPendingCameraChange : 1;
		unsigned currentRegionChangeShouldUpdateAnnotationsMidstream : 1;
		unsigned backdropViewQualityChangingDisabled : 1;
		unsigned canSelectPOIs : 1;
		unsigned canSelectAllLabels : 1;
		unsigned vectorKitConsoleEnabled : 1;
		unsigned edgeInsetsAreExplicit : 1;
		unsigned locationPropagationEnabled : 1;
		unsigned userInteractionPausesLocationUpdates : 1;
		unsigned locationPulseEnabled : 1;
		unsigned shouldSplitRouteLine : 1;
		unsigned shouldAnimatePositionWithRouteMatch : 1;
		unsigned clearUserLocationOnLocationReset : 1;
		unsigned showsCurrentEnvironmentName : 1;
		unsigned processingUserLocationUpdate : 1;
		unsigned changingMapType : 1;
		unsigned userRotatedAwayFromVerticalYaw : 1;
		unsigned goingToDefaultLocation : 1;
		unsigned delayLocationUpdatesUntilInitialRendering : 1;
		unsigned isDraggingAnnotationView : 1;
		unsigned showsPressedLabelMarkerEffect : 1;
		unsigned shouldLoadFallbackTiles : 1;
		unsigned iconPixelAlignmentExplicitlyDisabled : 1;
		unsigned userDidRotateDuringCurrentRegionChange : 1;
		unsigned isTwoFingerLongPressing : 1;
		unsigned delegateShouldReceiveTouch : 1;
		unsigned delegateShouldDelayTapResponse : 1;
		unsigned delegateDidUpdateUserLocation : 1;
		unsigned delegateWillChangeRegion : 1;
		unsigned delegateDidChangeUserTrackingMode : 1;
		unsigned delegateDidChangeUserTrackingModeButton : 1;
	}  _flags;
	BOOL _hasSetLayoutMargins;
	UILayoutGuide* _edgeInsetsGuide;
	NSLayoutConstraint* _edgeInsetsTopConstraint;
	NSLayoutConstraint* _edgeInsetsLeftConstraint;
	NSLayoutConstraint* _edgeInsetsRightConstraint;
	NSLayoutConstraint* _edgeInsetsBottomConstraint;
	BOOL _automaticallySnapsToNorth;
	BOOL _forceLayoutOnBoundsChange;
	long long _originalLoopRate;
	long long _preGesturingLoopRate;
	UIEdgeInsets _attributionInsets;
	long long _interactionMode;
	unsigned long long _currentFlyoverAnimationID;

}

@property (getter=_visibleTileSets,nonatomic,readonly) NSArray * visibleTileSets; 
@property (getter=_detailedDescription,nonatomic,readonly) NSString * detailedDescription; 
@property (nonatomic,readonly) NSArray * overlays; 
@property (getter=_transitLineMarkersInCurrentViewport,nonatomic,readonly) NSArray * transitLineMarkersInCurrentViewport; 
@property (nonatomic,retain) CLLocation * predictedUserLocation; 
@property (assign,nonatomic) BOOL ignoreLocationUpdates; 
@property (nonatomic,retain,readonly) MKAnnotationView * userLocationView; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,getter=isScaleEnabled,nonatomic) BOOL scaleEnabled; 
@property (assign,nonatomic,__weak) id<MKMapViewDelegate> delegate; 
@property (assign,nonatomic) unsigned long long mapType; 
@property (assign,nonatomic) SCD_Struct_MK1 region; 
@property (assign,nonatomic) SCD_Struct_MK0 centerCoordinate; 
@property (assign,nonatomic) SCD_Struct_MK1 visibleMapRect; 
@property (nonatomic,copy) MKMapCamera * camera; 
@property (assign,getter=isZoomEnabled,nonatomic) BOOL zoomEnabled; 
@property (assign,getter=isScrollEnabled,nonatomic) BOOL scrollEnabled; 
@property (assign,getter=isRotateEnabled,nonatomic) BOOL rotateEnabled; 
@property (assign,getter=isPitchEnabled,nonatomic) BOOL pitchEnabled; 
@property (assign,nonatomic) BOOL showsCompass; 
@property (assign,nonatomic) BOOL showsScale; 
@property (assign,nonatomic) BOOL showsPointsOfInterest; 
@property (assign,nonatomic) BOOL showsBuildings; 
@property (assign,nonatomic) BOOL showsTraffic; 
@property (assign,nonatomic) BOOL showsUserLocation; 
@property (nonatomic,readonly) MKUserLocation * userLocation; 
@property (assign,nonatomic) long long userTrackingMode; 
@property (getter=isUserLocationVisible,nonatomic,readonly) BOOL userLocationVisible; 
@property (nonatomic,readonly) NSArray * annotations; 
@property (nonatomic,copy) NSArray * selectedAnnotations; 
@property (nonatomic,readonly) CGRect annotationVisibleRect; 
@property (setter=_setAdditionalManifestConfiguration:,getter=_additionalManifestConfiguration,nonatomic,retain) GEOResourceManifestConfiguration * additionalManifestConfiguration; 
@property (assign,setter=_setCurrentFlyoverAnimationID:,getter=_currentFlyoverAnimationID,nonatomic) unsigned long long currentFlyoverAnimationID;                                                                 //@synthesize currentFlyoverAnimationID=_currentFlyoverAnimationID - In the implementation block
@property (nonatomic,readonly) double _zoomScale; 
@property (nonatomic,readonly) double _zoomLevel; 
@property (getter=_minimumZoomLevel,nonatomic,readonly) double minimumZoomLevel; 
@property (getter=_maximumZoomLevel,nonatomic,readonly) double maximumZoomLevel; 
@property (assign,setter=_setShowsScaleDuringZoom:,getter=_showsScaleDuringZoom,nonatomic) BOOL showsScaleDuringZoom; 
@property (assign,getter=isCompassEnabled,nonatomic) BOOL compassEnabled; 
@property (assign,setter=_setInteractionMode:,getter=_interactionMode,nonatomic) long long interactionMode;                                                                                                        //@synthesize interactionMode=_interactionMode - In the implementation block
@property (getter=isRegionChanging,nonatomic,readonly) BOOL regionChanging; 
@property (getter=_isChangingRegionForGesture,nonatomic,readonly) BOOL changingRegionForGesture; 
@property (assign,nonatomic) BOOL _annotationViewsAreAddedImmediately; 
@property (assign,setter=_setAllowsPopoverWhenNotInWindow:,getter=_allowsPopoverWhenNotInWindow,nonatomic) BOOL allowsPopoverWhenNotInWindow; 
@property (nonatomic,readonly) BOOL hasUserLocation; 
@property (assign,setter=_setForceDisplayEffects:,getter=_forceDisplayEffects,nonatomic) BOOL forceDisplayEffects; 
@property (getter=_mapRegionOfInterest,nonatomic,readonly) GEOMapRegion * mapRegionOfInterest; 
@property (nonatomic,readonly) GEOMapRegion * mapRegion; 
@property (assign,setter=_setShouldDelayLocationUpdatesUntilInitialRendering:,getter=_shouldDelayLocationUpdatesUntilInitialRendering,nonatomic) BOOL shouldDelayLocationUpdatesUntilIntialRendering; 
@property (assign,nonatomic) BOOL showsAttribution; 
@property (assign,nonatomic) BOOL showsAttributionBadge; 
@property (assign,setter=_setAttributionInsets:,getter=_attributionInsets,nonatomic) UIEdgeInsets attributionInsets;                                                                                               //@synthesize attributionInsets=_attributionInsets - In the implementation block
@property (assign,setter=_setShowsTrafficIncidents:,getter=_showsTrafficIncidents,nonatomic) BOOL showsTrafficIncidents; 
@property (assign,setter=_setCanSelectPOIs:,getter=_canSelectPOIs,nonatomic) BOOL canSelectPOIs; 
@property (assign,setter=_setCanSelectAllLabels:,getter=_canSelectAllLabels,nonatomic) BOOL canSelectAllLabels; 
@property (getter=_selectedLabelMarker,nonatomic,readonly) VKLabelMarker * selectedLabelMarker; 
@property (getter=_isShowingFlyover,nonatomic,readonly) BOOL showingFlyover; 
@property (getter=_canShowFlyover,nonatomic,readonly) BOOL canShowFlyover; 
@property (assign,setter=_setAlwaysShowHeadingIndicator:,getter=_alwaysShowHeadingIndicator,nonatomic) BOOL alwaysShowHeadingIndicator; 
@property (setter=_setDebugConsoleAdditionalInfoProvider:,getter=_debugConsoleAdditionalInfoProvider,nonatomic,copy) id debugConsoleAdditionalInfoProvider; 
@property (getter=_debugConsole,nonatomic,readonly) MKDebugLocationConsole * debugConsole; 
@property (assign,setter=_setVectorKitConsoleEnabled:,getter=_isVectorKitConsoleEnabled,nonatomic) BOOL vectorKitConsoleEnabled; 
@property (assign,setter=_setAutomaticallySnapsToNorth:,getter=_automaticallySnapsToNorth,nonatomic) BOOL automaticallySnapsToNorth; 
@property (getter=_isPitched,nonatomic,readonly) BOOL pitched; 
@property (getter=_canEnter3DMode,nonatomic,readonly) BOOL canEnter3DMode; 
@property (getter=_canEnterNightMode,nonatomic,readonly) BOOL canEnterNightMode; 
@property (assign,setter=_setUserTrackingZoomStyle:,getter=_userTrackingZoomStyle,nonatomic) long long userTrackingZoomStyle; 
@property (assign,setter=_setApplicationState:,getter=_applicationState,nonatomic) int applicationState; 
@property (getter=_mapLayer,nonatomic,readonly) VKMapView * mapLayer; 
@property (getter=_annotationViews,nonatomic,readonly) NSArray * annotationViews; 
@property (assign,setter=_setLocalizeLabels:,getter=_localizeLabels,nonatomic) BOOL localizeLabels; 
@property (assign,setter=_setEdgeInsets:,getter=_edgeInsets,nonatomic) UIEdgeInsets edgeInsets; 
@property (assign,setter=_setLabelEdgeInsets:,getter=_labelEdgeInsets,nonatomic) UIEdgeInsets labelEdgeInsets; 
@property (assign,setter=_setUserInteractionPausesLocationUpdates:,getter=_userInteractionPausesLocationUpdates,nonatomic) BOOL userInteractionPausesLocationUpdates; 
@property (assign,setter=_setPanWithMomentum:,getter=_panWithMomentum,nonatomic) BOOL panWithMomentum; 
@property (assign,setter=_setLocationPulseEnabled:,getter=_isLocationPulseEnabled,nonatomic) BOOL locationPulseEnabled; 
@property (assign,setter=_setShouldSplitRouteLine:,getter=_shouldSplitRouteLine,nonatomic) BOOL shouldSplitRouteLine; 
@property (assign,setter=_setShouldAnimatePositionWithRouteMatch:,getter=_shouldAnimatePositionWithRouteMatch,nonatomic) BOOL shouldAnimatePositionWithRouteMatch; 
@property (assign,setter=_setShouldLoadFallbackTiles:,getter=_shouldLoadFallbackTiles,nonatomic) BOOL shouldLoadFallbackTiles; 
@property (getter=_calloutPopoverController,nonatomic,readonly) UIPopoverController * calloutPopoverController; 
@property (getter=_calloutContentRect,nonatomic,readonly) CGRect calloutContentRect; 
@property (getter=_calloutPopoverTargetRect,nonatomic,readonly) CGRect calloutPopoverTargetRect; 
@property (getter=_panningGestureRecognizer,nonatomic,readonly) UIPanGestureRecognizer * panningGestureRecognizer; 
@property (getter=_pinchGestureRecognizer,nonatomic,readonly) UIPinchGestureRecognizer * pinchGestureRecognizer; 
@property (getter=_rotationGestureRecognizer,nonatomic,readonly) UIRotationGestureRecognizer * rotationGestureRecognizer; 
@property (getter=_selectingTapGestureRecognizer,nonatomic,readonly) UITapGestureRecognizer * selectingTapGestureRecognizer; 
@property (getter=_nonselectingTapGestureRecognizer,nonatomic,readonly) UITapGestureRecognizer * nonselectingTapGestureRecognizer; 
@property (getter=_longPressGestureRecognizer,nonatomic,readonly) UILongPressGestureRecognizer * longPressGestureRecognizer; 
@property (getter=_doubleTapGestureRecognizer,nonatomic,readonly) UITapGestureRecognizer * doubleTapGestureRecognizer; 
@property (getter=_twoFingerPanGestureRecognizer,nonatomic,readonly) UIPanGestureRecognizer * twoFingerPanGestureRecognizer; 
@property (getter=_isHandlingNonselectingTap,nonatomic,readonly) BOOL handlingNonselectingTap; 
@property (getter=_pressureGestureRecognizer,nonatomic,readonly) UIGestureRecognizer * pressureGestureRecognizer; 
@property (assign,nonatomic) BOOL rendersInBackground; 
@property (assign,setter=_setShowsNightMode:,getter=_showsNightMode,nonatomic) BOOL showsNightMode; 
@property (assign,setter=_setVectorKitStyleDebugEnabled:,getter=_isVectorKitStyleDebugEnabled,nonatomic) BOOL vectorKitStyleDebugEnabled; 
@property (assign,setter=_setShowsCurrentEnvironmentName:,getter=_showsCurrentEnvironmentName,nonatomic) BOOL showsCurrentEnvironmentName; 
@property (assign,setter=_setShowsPressedLabelMarkerEffect:,getter=_showsPressedLabelMarkerEffect,nonatomic) BOOL showsPressedLabelMarkerEffect; 
@property (assign,setter=_setAnnotationTrackingZoomStyle:,getter=_annotationTrackingZoomStyle,nonatomic) long long annotationTrackingZoomStyle;                                                                    //@synthesize annotationTrackingZoomStyle=_annotationTrackingZoomStyle - In the implementation block
+(SCD_Struct_MK1)_regionThatFitsMapType:(unsigned long long)arg1 viewSize:(CGSize)arg2 viewInsets:(UIEdgeInsets)arg3 edgePadding:(UIEdgeInsets)arg4 region:(SCD_Struct_MK1)arg5 minZoomLevel:(double)arg6 maxZoomLevel:(double)arg7 snapToZoomLevel:(BOOL)arg8 ;
+(SCD_Struct_MK1)_mapRectThatFitsViewBounds:(CGRect)arg1 mapRect:(SCD_Struct_MK1)arg2 viewInsets:(UIEdgeInsets)arg3 edgePadding:(UIEdgeInsets)arg4 minZoomLevel:(double)arg5 maxZoomLevel:(double)arg6 snapToZoomLevel:(BOOL)arg7 ;
+(unsigned long long)minZoomLevelForMapType:(unsigned long long)arg1 viewSize:(CGSize)arg2 ;
+(void)setRendersInBackgroundByDefault:(BOOL)arg1 ;
+(SCD_Struct_MK1)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(CGSize)arg2 region:(SCD_Struct_MK1)arg3 ;
+(SCD_Struct_MK1)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(CGSize)arg2 edgeInsets:(UIEdgeInsets)arg3 region:(SCD_Struct_MK1)arg4 ;
-(SCD_Struct_MK1)mapRectThatFits:(SCD_Struct_MK1)arg1 minMetersPerPoint:(double)arg2 ;
-(UIEdgeInsets)defaultInsetsForPinAnnotations;
-(UIEdgeInsets)splitViewInsetsForPinAnnotations;
-(void)goToSearchResults:(id)arg1 mapRegion:(id)arg2 requireMapMovement:(BOOL)arg3 animation:(long long)arg4 splitViewInsets:(BOOL)arg5 completion:(/*^block*/id)arg6 ;
-(BOOL)_pinPositionAvailableAtPoint:(CGPoint)arg1 ;
-(BOOL)isCoordinateVisible:(SCD_Struct_MK0)arg1 ;
-(id)selectedSearchResult;
-(void)setSelectedSearchResult:(id)arg1 ;
-(SCD_Struct_MK0)pinDroppingCoordinate;
-(SCD_Struct_MK1)mapRectContainingSearchResults:(id)arg1 ;
-(void)goToSearchResults:(id)arg1 mapRegion:(id)arg2 requireMapMovement:(BOOL)arg3 ;
-(SCD_Struct_MK0)_convertPoint:(CGPoint)arg1 toCoordinateFromView:(id)arg2 ;
-(SCD_Struct_MK1)_convertRect:(CGRect)arg1 toMapRectFromView:(id)arg2 ;
-(CGPoint)_convertMapPoint:(SCD_Struct_MK0)arg1 toPointToView:(id)arg2 ;
-(SCD_Struct_MK1)_convertRect:(CGRect)arg1 toRegionFromView:(id)arg2 ;
-(SCD_Struct_MK0)_convertPoint:(CGPoint)arg1 toMapPointFromView:(id)arg2 ;
-(double)_distanceFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 fromView:(id)arg3 withPrecision:(long long)arg4 ;
-(CGPoint)_convertCoordinate:(SCD_Struct_MK0)arg1 toPointToView:(id)arg2 ;
-(CGRect)_convertMapRect:(SCD_Struct_MK1)arg1 toRectToView:(id)arg2 ;
-(CGRect)_convertRegion:(SCD_Struct_MK1)arg1 toRectToView:(id)arg2 ;
-(void)setDelegate:(id<MKMapViewDelegate>)arg1 ;
-(id<MKMapViewDelegate>)delegate;
-(void)_clearRouteContext;
-(void)_setRouteContextForRoute:(id)arg1 ;
-(void)_setRouteContextInspectedLegIndex:(unsigned long long)arg1 inspectedStepIndex:(unsigned long long)arg2 ;
-(id)_transitLineMarkersForSelectionAtPoint:(CGPoint)arg1 ;
-(id)_detailedDescription;
-(id)_visibleTileSets;
-(void)_resetMaximumZoomLevel;
-(void)_setMaximumZoomLevel:(double)arg1 ;
-(void)addOverlay:(id)arg1 level:(long long)arg2 ;
-(void)exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2 ;
-(void)addOverlays:(id)arg1 level:(long long)arg2 ;
-(id)rendererForOverlay:(id)arg1 ;
-(void)removeOverlay:(id)arg1 ;
-(id)overlaysInLevel:(long long)arg1 ;
-(void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2 ;
-(NSArray *)overlays;
-(void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)exchangeOverlay:(id)arg1 withOverlay:(id)arg2 ;
-(void)addOverlay:(id)arg1 ;
-(id)viewForOverlay:(id)arg1 ;
-(void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 level:(long long)arg3 ;
-(void)insertOverlay:(id)arg1 belowOverlay:(id)arg2 ;
-(void)removeOverlays:(id)arg1 ;
-(void)addOverlays:(id)arg1 ;
-(void)overlayContainerAddedDrawables:(id)arg1 ;
-(id)vk_mapLayer;
-(id)overlayContainer;
-(id)createDrawableForOverlay:(id)arg1 ;
-(void)_selectTransitLineMarkerWithFeatureID:(unsigned long long)arg1 ;
-(id)_transitLineMarkersInCurrentViewport;
-(void)_deselectTransitLineMarker;
-(id)_transitLineMarkerForFeatureID:(unsigned long long)arg1 ;
-(void)_selectTransitLineMarker:(id)arg1 ;
-(id)_selectedTransitLineIDs;
-(id)_camera;
-(void)_updateCameraState;
-(void)_setCamera:(id)arg1 duration:(double)arg2 timingCurve:(long long)arg3 ;
-(void)_snapToNorthIfNecessary;
-(void)_updateFromCamera:(id)arg1 duration:(double)arg2 timing:(/*^block*/id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_updateFromCamera:(id)arg1 ;
-(void)_setCamera:(id)arg1 duration:(double)arg2 timing:(/*^block*/id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_setCamera:(id)arg1 springMass:(float)arg2 springStiffness:(float)arg3 springDamping:(float)arg4 springVelocity:(float)arg5 ;
-(double)_durationFoCamera:(id)arg1 ;
-(void)_setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 completionHandler:(/*^block*/id)arg7 ;
-(void)_setCamera:(id)arg1 animated:(BOOL)arg2 ;
-(void)_setCamera:(id)arg1 ;
-(void)enableMapRotationIfNeeded;
-(void)resumeUserHeadingUpdates;
-(void)locationManagerUpdatedHeading:(id)arg1 ;
-(void)_startTrackingHeading;
-(BOOL)_updateRotationSupported;
-(void)locationManagerFailedToUpdateHeading:(id)arg1 withError:(id)arg2 ;
-(void)_stopTrackingHeading;
-(void)_updateHeadingIndicatorAnimated:(BOOL)arg1 ;
-(BOOL)_useVehicleHeading;
-(void)_setUseVehicleHeading:(BOOL)arg1 ;
-(void)_setShowHeadingIndicator:(BOOL)arg1 ;
-(void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3 ;
-(BOOL)_rotationPossible;
-(void)pauseUserHeadingUpdates;
-(BOOL)_showHeadingIndicator;
-(void)_updateCourseForMapViewHeading:(id)arg1 ;
-(void)_updateHeading:(id)arg1 animated:(BOOL)arg2 ;
-(void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2 ;
-(void)_updateLocationConsole;
-(BOOL)_isUserLocationViewCentered:(double)arg1 ;
-(void)startUpdatingUserLocation;
-(void)_setClearUserLocationOnLocationReset:(BOOL)arg1 ;
-(void)_updateUserLocation:(id)arg1 routeMatch:(id)arg2 ;
-(BOOL)isLocationConsoleEnabled;
-(BOOL)_isUserLocationInView:(BOOL)arg1 ;
-(BOOL)_clearUserLocationOnLocationReset;
-(void)puckAnimator:(id)arg1 updatedPosition:(SCD_Struct_MK2)arg2 course:(double)arg3 ;
-(void)puckAnimator:(id)arg1 runAnimation:(id)arg2 ;
-(void)_resumeUserLocationUpdates:(BOOL)arg1 ;
-(void)_pauseUserLocationUpdates;
-(void)setPredictedUserLocation:(CLLocation *)arg1 ;
-(void)puckAnimatorDidStop:(id)arg1 ;
-(void)puckAnimator:(id)arg1 updatedTargetPosition:(SCD_Struct_MK2)arg2 ;
-(void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3 ;
-(void)_setLocationPropagationEnabled:(BOOL)arg1 ;
-(void)setIgnoreLocationUpdates:(BOOL)arg1 ;
-(void)removeUserLocation;
-(BOOL)ignoreLocationUpdates;
-(BOOL)_isLocationPropagationEnabled;
-(void)setLocationConsoleEnabled:(BOOL)arg1 ;
-(void)_updateUserLocationViewWithLocation:(id)arg1 hadUserLocation:(BOOL)arg2 ;
-(void)stopUpdatingUserLocation;
-(BOOL)_userLocationWithinVisibleMapBounds;
-(CLLocation *)predictedUserLocation;
-(BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidReset:(id)arg1 ;
-(void)locationManagerUpdatedLocation:(id)arg1 ;
-(MKAnnotationView *)userLocationView;
-(void)locationManagerDidPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidResumeLocationUpdates:(id)arg1 ;
-(BOOL)_showsTraffic;
-(void)_setShowsTraffic:(BOOL)arg1 ;
-(void)setScaleEnabled:(BOOL)arg1 ;
-(BOOL)isScaleEnabled;
-(BOOL)isSuspended;
-(id)initWithFrame:(CGRect)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)_populateArchivedSubviews:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(void)setHidden:(BOOL)arg1 ;
-(void)didMoveToWindow;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setBounds:(CGRect)arg1 ;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)setScrollEnabled:(BOOL)arg1 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(long long)_interfaceOrientation;
-(void)_clearGestureRecognizers;
-(BOOL)isScrollEnabled;
-(BOOL)_shouldAnimatePropertyWithKey:(id)arg1 ;
-(void)setCenter:(CGPoint)arg1 ;
-(void)layoutMarginsDidChange;
-(void)setLayoutMargins:(UIEdgeInsets)arg1 ;
-(void)willMoveToWindow:(id)arg1 ;
-(void)didMoveToSuperview;
-(void)setZoomEnabled:(BOOL)arg1 ;
-(BOOL)isZoomEnabled;
-(double)_zoomScale;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)_doubleTapGestureRecognizer;
-(void)handleLongPress:(id)arg1 ;
-(void)setRegion:(SCD_Struct_MK1)arg1 ;
-(SCD_Struct_MK1)region;
-(void)drawRect:(CGRect)arg1 forViewPrintFormatter:(id)arg2 ;
-(void)setSuspended:(BOOL)arg1 ;
-(void)_updateInsets;
-(BOOL)hasUserLocation;
-(GEOMapRegion *)mapRegion;
-(void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1 ;
-(void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1 ;
-(void)setCamera:(MKMapCamera *)arg1 ;
-(unsigned long long)mapType;
-(SCD_Struct_MK0)centerCoordinate;
-(void)setMapType:(unsigned long long)arg1 ;
-(void)setUserTrackingMode:(long long)arg1 ;
-(long long)userTrackingMode;
-(void)setCenterCoordinate:(SCD_Struct_MK0)arg1 ;
-(void)_setDebugConsoleAdditionalInfoProvider:(/*^block*/id)arg1 ;
-(void)_exit3DMode;
-(void)_configureGestureRecognizers:(id)arg1 ;
-(void)setShowsAttribution:(BOOL)arg1 ;
-(BOOL)isRotateEnabled;
-(void)_handleTapToDeselect:(id)arg1 ;
-(BOOL)showsAttributionBadge;
-(id)_debugConsole;
-(void)setShowsAttributionBadge:(BOOL)arg1 ;
-(void)_willChangeRegionAnimated:(BOOL)arg1 ;
-(void)_enter3DMode;
-(double)gestureController:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3 ;
-(id)_viewportDictionary;
-(SCD_Struct_MK1)convertRect:(CGRect)arg1 toMapRectFromView:(id)arg2 ;
-(void)_setShowsCurrentEnvironmentName:(BOOL)arg1 ;
-(CGRect)convertMapRect:(SCD_Struct_MK1)arg1 toRectToView:(id)arg2 ;
-(BOOL)showsPointsOfInterest;
-(void)_startFlyoverTourAnimation:(unsigned long long)arg1 duration:(double)arg2 completion:(/*^block*/id)arg3 ;
-(void)_restoreViewportFromDictionary:(id)arg1 ;
-(BOOL)showsAttribution;
-(void)set_defaultLocationTimer:(id)arg1 ;
-(BOOL)_showsCurrentEnvironmentName;
-(void)_setApplicationState:(int)arg1 ;
-(void)gestureControllerDidStopTiltingDecelerating:(id)arg1 ;
-(void)setBackdropViewQualityChangingDisabled:(BOOL)arg1 ;
-(BOOL)gestureController:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(BOOL)_userInteractionPausesLocationUpdates;
-(int)_applicationState;
-(id)_additionalManifestConfiguration;
-(void)_setAdditionalManifestConfiguration:(id)arg1 ;
-(void)_updateShouldDisplayEffects;
-(void)_clearLayoutGuides;
-(BOOL)_isLocationPulseEnabled;
-(void)_setUserTrackingZoomStyle:(long long)arg1 ;
-(void)_selectLabelMarker:(id)arg1 animated:(BOOL)arg2 avoid:(CGRect)arg3 ;
-(void)_setZoomScale:(double)arg1 centerCoordinate:(SCD_Struct_MK0)arg2 duration:(double)arg3 animated:(BOOL)arg4 ;
-(void)_setSafeDelegate:(id)arg1 ;
-(void)_setLocationPulseEnabled:(BOOL)arg1 ;
-(void)_updateHeadingOrientation;
-(CGRect)gestureControllerSignificantViewFrame:(id)arg1 ;
-(BOOL)_canEnterNightMode;
-(void)_layoutAttribution;
-(CGPoint)gestureController:(id)arg1 smartAimingPointForPoint:(CGPoint)arg2 ;
-(BOOL)isPitchEnabled;
-(void)_setUserInteractionPausesLocationUpdates:(BOOL)arg1 ;
-(void)goToDefaultLocation;
-(long long)_userTrackingZoomStyle;
-(void)_setShouldSplitRouteLine:(BOOL)arg1 ;
-(void)gestureControllerDidStopTwoFingerLongPress:(id)arg1 ;
-(void)_handleSelectionAtPoint:(CGPoint)arg1 ;
-(BOOL)_shouldAnimatePositionWithRouteMatch;
-(void)gestureControllerWillStartRotating:(id)arg1 ;
-(void)_removePersistentVectorOverlay:(id)arg1 ;
-(void)_pauseFlyoverAnimation;
-(id)initFromIBWithFrame:(CGRect)arg1 ;
-(SCD_Struct_MK0)_centerMapPoint;
-(void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(BOOL)arg2 ;
-(BOOL)showsTraffic;
-(BOOL)_shouldSplitRouteLine;
-(void)gestureControllerDidStopRotatingDecelerating:(id)arg1 ;
-(void)_displayWorld;
-(BOOL)_shouldLoadFallbackTiles;
-(void)selectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2 avoid:(CGRect)arg3 ;
-(BOOL)showsCompass;
-(void)mapLayer:(id)arg1 flyoverModeWillChange:(int)arg2 ;
-(void)_addPersistentVectorOverlay:(id)arg1 ;
-(void)_setShouldLoadFallbackTiles:(BOOL)arg1 ;
-(void)gestureControllerWillStartTilting:(id)arg1 ;
-(id)_initWithFrame:(CGRect)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(BOOL)arg3 ;
-(void)_addVectorOverlay:(id)arg1 ;
-(void)gestureControllerDidStopTilting:(id)arg1 willDecelerate:(BOOL)arg2 ;
-(void)_removeVectorOverlay:(id)arg1 ;
-(void)_setShouldAnimatePositionWithRouteMatch:(BOOL)arg1 ;
-(BOOL)_canEnter3DMode;
-(BOOL)showsBuildings;
-(void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(BOOL)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 willDecelerate:(BOOL)arg3 ;
-(CGPoint)convertCoordinate:(SCD_Struct_MK0)arg1 toPointToView:(id)arg2 ;
-(void)setShowsPointsOfInterest:(BOOL)arg1 ;
-(void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2 ;
-(id)_startEffectsTimer;
-(void)_startZoomForExternalGesture;
-(void)_endZoomForExternalGesture;
-(void)_zoomWithAmount:(double)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setCamera:(id)arg1 animated:(BOOL)arg2 ;
-(id)beginStoppingEffects;
-(void)gestureControllerWillStartTwoFingerLongPress:(id)arg1 ;
-(BOOL)isShowingNoDataPlaceholders;
-(void)_resumeFlyoverAnimation;
-(void)_setForceDisplayEffects:(BOOL)arg1 ;
-(id)_longPressGestureRecognizer;
-(BOOL)_forceDisplayEffects;
-(BOOL)_alwaysShowHeadingIndicator;
-(void)_updateRotationAttributes;
-(void)moveAnnotationRepresentation:(id)arg1 fromCoordinate:(SCD_Struct_MK0)arg2 animated:(BOOL)arg3 duration:(double)arg4 ;
-(void)showAnnotations:(id)arg1 animated:(BOOL)arg2 ;
-(void)_updateEffects;
-(id)_pressureGestureRecognizer;
-(void)_updateContentBounds;
-(id)_selectingTapGestureRecognizer;
-(id)_mapRegionOfInterest;
-(double)_boundedZoomLevel:(double)arg1 ;
-(id)_rotationGestureRecognizer;
-(void)mapLayerDidChangeVisibleRegion:(id)arg1 ;
-(void)removeAnnotationRepresentation:(id)arg1 ;
-(BOOL)_showsPressedLabelMarkerEffect;
-(void)_setUserTrackingMode:(long long)arg1 animated:(BOOL)arg2 fromTrackingButton:(BOOL)arg3 ;
-(id)_nonselectingTapGestureRecognizer;
-(id)_panningGestureRecognizer;
-(BOOL)_iconsShouldAlignToPixels;
-(id)_calloutPopoverController;
-(void)mapLayerDidDraw:(id)arg1 ;
-(void)_setShowsPressedLabelMarkerEffect:(BOOL)arg1 ;
-(void)_forceFrame;
-(void)_snapToTrueNorthAndCallBack:(BOOL)arg1 ;
-(void)_setLocalizeLabels:(BOOL)arg1 ;
-(SCD_Struct_MK1)regionThatFits:(SCD_Struct_MK1)arg1 ;
-(void)mapLayerDidStartLoadingTiles:(id)arg1 ;
-(BOOL)_localizeLabels;
-(void)_performFlyoverAnimation:(id)arg1 animateToStart:(BOOL)arg2 ;
-(void)mapLayerDidFailLoadingTiles:(id)arg1 withError:(id)arg2 ;
-(id)_labelMarkersInCurrentViewportForType:(int)arg1 ;
-(id)_labelMarkersInCurrentViewport;
-(void)deselectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2 ;
-(BOOL)_isChangingRegionForGesture;
-(void)mapLayerDidFinishLoadingTiles:(id)arg1 ;
-(BOOL)_showsTrafficIncidents;
-(void)_setVisibleMapRect:(SCD_Struct_MK1)arg1 duration:(double)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_setShowsScaleDuringZoom:(BOOL)arg1 ;
-(BOOL)_showsScaleDuringZoom;
-(void)set_startEffectsTimer:(id)arg1 ;
-(void)_setVisibleMapRect:(SCD_Struct_MK1)arg1 animated:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setRegion:(SCD_Struct_MK1)arg1 animated:(BOOL)arg2 ;
-(BOOL)_canShowFlyover;
-(void)_setShowsTrafficIncidents:(BOOL)arg1 ;
-(BOOL)showsUserLocation;
-(id)_selectedLabelMarker;
-(void)_setVectorKitConsoleEnabled:(BOOL)arg1 ;
-(void)_updateVectorKitConsoleFrameWithEdgeInsets;
-(void)_setMapType:(unsigned long long)arg1 onInit:(BOOL)arg2 animated:(BOOL)arg3 ;
-(void)addAnnotationRepresentation:(id)arg1 allowAnimation:(BOOL)arg2 ;
-(BOOL)drawsBlackOnWhiteScale;
-(id)mapAttributionWithStringAttributes:(id)arg1 ;
-(BOOL)_shouldDisplayScaleForCurrentRegion;
-(void)_setEdgeInsets:(UIEdgeInsets)arg1 explicit:(BOOL)arg2 ;
-(SCD_Struct_MK1)_mapRectWithFraction:(double)arg1 ofVisible:(SCD_Struct_MK1)arg2 ;
-(void)_stopEffects;
-(CGRect)attributionFrame;
-(void)handleCompassTap:(id)arg1 ;
-(BOOL)_isVectorKitConsoleEnabled;
-(double)_defaultAnimationDurationForMapRect:(SCD_Struct_MK1)arg1 edgePadding:(UIEdgeInsets)arg2 ;
-(BOOL)rendersInBackground;
-(void)_setAttributionInsets:(UIEdgeInsets)arg1 ;
-(void)_updateAttribution;
-(BOOL)effectsEnabled;
-(void)_deselectLabelMarkerAnimated:(BOOL)arg1 ;
-(void)snapToNorth:(id)arg1 ;
-(void)_updateScrollContainerView:(BOOL)arg1 ;
-(void)setVisibleMapRect:(SCD_Struct_MK1)arg1 ;
-(void)toggleLocationConsole:(id)arg1 ;
-(void)_setZoomScale:(double)arg1 centerMapPoint:(SCD_Struct_MK0)arg2 duration:(double)arg3 animated:(BOOL)arg4 ;
-(void)setUserTrackingMode:(long long)arg1 animated:(BOOL)arg2 ;
-(BOOL)compassVisible;
-(BOOL)annotationContainerShouldAlignToPixels:(id)arg1 ;
-(SCD_Struct_MK5)_zoomRegionForMapRect:(SCD_Struct_MK1)arg1 edgePadding:(UIEdgeInsets)arg2 maxZoomLevel:(long long)arg3 minZoomLevel:(long long)arg4 ;
-(BOOL)calloutViewContainsPoint:(CGPoint)arg1 ;
-(CGRect)annotationVisibleRect;
-(void)_fixUserLocationFromPresentationValue;
-(void)setRendersInBackground:(BOOL)arg1 ;
-(BOOL)_isPitched;
-(/*^block*/id)annotationCoordinateTest;
-(void)gestureControllerWillStartUserInteraction:(id)arg1 ;
-(void)mapLayer:(id)arg1 canZoomOutDidChange:(BOOL)arg2 ;
-(CGPoint)_centerPoint;
-(void)mapLayer:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2 ;
-(void)geoDefaultsDidChange:(id)arg1 ;
-(void)mapLayer:(id)arg1 canZoomInDidChange:(BOOL)arg2 ;
-(UIEdgeInsets)_labelEdgeInsets;
-(void)_setAutomaticallySnapsToNorth:(BOOL)arg1 ;
-(BOOL)annotationContainerIsRotated:(id)arg1 ;
-(void)applicationDidFinishSuspensionSnapshot:(id)arg1 ;
-(void)annotationContainer:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3 ;
-(BOOL)isRegionChanging;
-(void)_clearFixedUserLocation;
-(void)mapLayer:(id)arg1 didBecomePitched:(BOOL)arg2 ;
-(void)setShowsScale:(BOOL)arg1 ;
-(id)mapLayer:(id)arg1 painterForOverlay:(id)arg2 ;
-(void)_setLabelEdgeInsets:(UIEdgeInsets)arg1 ;
-(void)_stopFlyoverAnimation;
-(BOOL)_shouldCalculateAnimationDuration;
-(void)_didEndZoom;
-(void)_setVectorKitStyleDebugEnabled:(BOOL)arg1 ;
-(void)_sizeDidChangeWithCenterCoordinate:(SCD_Struct_MK0)arg1 ;
-(void)_updateShowHeadingIndicator;
-(id)_mapLayer;
-(void)mapLayer:(id)arg1 flyoverModeDidChange:(int)arg2 ;
-(void)calloutDidAppearForAnnotationView:(id)arg1 inContainer:(id)arg2 ;
-(void)setFlyoverMode:(int)arg1 ;
-(void)mapLayer:(id)arg1 didStopFlyoverTourCompleted:(BOOL)arg2 ;
-(BOOL)_isVectorKitStyleDebugEnabled;
-(void)mapLayer:(id)arg1 flyoverTourLabelDidChange:(id)arg2 ;
-(void)deselectAnnotation:(id)arg1 animated:(BOOL)arg2 ;
-(void)_addSetRegionBlockWhenSized:(/*^block*/id)arg1 ;
-(void)mapLayerWillStartFlyoverTour:(id)arg1 ;
-(double)_zoomScaleForMapRegion:(id)arg1 ;
-(void)setShowsCompass:(BOOL)arg1 ;
-(void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(CGPoint)arg2 annotationCoordinate:(SCD_Struct_MK0)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_handleStyleDebugGesture:(id)arg1 ;
-(id)scaleView;
-(double)_maximumZoomLevel;
-(CGRect)_currentEnvironmentNameFrame;
-(BOOL)_isCalloutExpanded;
-(id)annotationsInMapRect:(SCD_Struct_MK1)arg1 ;
-(void)mapLayer:(id)arg1 showingFlyoverDidChange:(BOOL)arg2 ;
-(void)_setShowsNightMode:(BOOL)arg1 ;
-(id)_findLayoutGuideVC;
-(void)updateLayoutGuides;
-(BOOL)_canShowAnimationForSearchResultWithMapRegion:(id)arg1 ;
-(void)_selectUserLocationTypeWithDeltaZoomLevel:(double)arg1 ;
-(void)_willStartZoom:(BOOL)arg1 ;
-(void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2 ;
-(void)mapLayer:(id)arg1 canShowFlyoverDidChange:(BOOL)arg2 ;
-(BOOL)_showsNightMode;
-(BOOL)isCompassEnabled;
-(void)mapLayerDidBecomePartiallyDrawn:(id)arg1 ;
-(void)_setMapType:(unsigned long long)arg1 animated:(BOOL)arg2 ;
-(BOOL)shouldHideOffscreenSelectedAnnotation;
-(void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2 ;
-(void)_showAnimationAtCoordinate:(SCD_Struct_MK0)arg1 withMapRegion:(id)arg2 ;
-(void)mapLayerDidFinishInitialTrackingAnimation:(id)arg1 ;
-(void)_updateIconsShouldAlignToPixels;
-(double)_minimumZoomLevel;
-(BOOL)_canSelectAllLabels;
-(void)mapLayer:(id)arg1 didChangeRegionAnimated:(BOOL)arg2 ;
-(void)_suspendUserInteraction;
-(id)_mapRegionWithCenterCoordinate:(SCD_Struct_MK0)arg1 zoomScale:(double)arg2 ;
-(BOOL)_isShowingFlyover;
-(void)mapLayer:(id)arg1 willChangeRegionAnimated:(BOOL)arg2 ;
-(void)annotationManager:(id)arg1 willDeselectAnnotationRepresentation:(id)arg2 ;
-(int)_viewIndexForSubview:(id)arg1 ;
-(void)_showOrHideScaleIfNecessary:(BOOL)arg1 ;
-(void)selectAnnotation:(id)arg1 animated:(BOOL)arg2 ;
-(double)_zoomLevelForRegion:(SCD_Struct_MK1)arg1 includeAccessoryPadding:(BOOL)arg2 ;
-(void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2 ;
-(void)_updateCompassVisibility;
-(void)_setEdgeInsets:(UIEdgeInsets)arg1 ;
-(long long)_roundedZoomLevel;
-(void)_updateScale;
-(id)_defaultLocationTimer;
-(double)_zoomLevel;
-(id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2 ;
-(void)_performFlyoverAnimation:(id)arg1 ;
-(BOOL)_isHandlingNonselectingTap;
-(void)setVehicleState:(SCD_Struct_MK6)arg1 ;
-(void)_updateScalePosition;
-(void)mapLayerDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(BOOL)arg2 ;
-(id)_twoFingerPanGestureRecognizer;
-(id)mapLayer:(id)arg1 presentationForAnnotation:(id)arg2 ;
-(void)_dropDraggingAnnotationView:(BOOL)arg1 ;
-(void)_setAlwaysShowHeadingIndicator:(BOOL)arg1 ;
-(void)_setCanSelectPOIs:(BOOL)arg1 ;
-(void)setCenterCoordinate:(SCD_Struct_MK0)arg1 animated:(BOOL)arg2 ;
-(BOOL)_canSelectPOIs;
-(void)_zoomInWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_setAnnotationTrackingZoomStyle:(long long)arg1 ;
-(void)setCamera:(id)arg1 springMass:(float)arg2 springStiffness:(float)arg3 springDamping:(float)arg4 springVelocity:(float)arg5 ;
-(void)_setCanSelectAllLabels:(BOOL)arg1 ;
-(double)annotationContainerZoomScale:(id)arg1 ;
-(void)_zoomWithAmount:(double)arg1 ;
-(CGRect)visibleRectInView:(id)arg1 ;
-(void)_setMapDisplayStyle:(SCD_Struct_MK3)arg1 ;
-(void)_updateFallbackTileLoading;
-(void)_zoomIn;
-(void)pauseUserLocationUpdates;
-(double)_panDurationFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
-(void)_updateEnvironmentLabelText;
-(id)_annotationViews;
-(id)compassVisibilityAnimation;
-(void)_prepareFlyoverAnimation:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(BOOL)arg3 ;
-(void)_startEffects;
-(void)_zoomOut;
-(SCD_Struct_MK0)convertPoint:(CGPoint)arg1 toCoordinateFromView:(id)arg2 ;
-(BOOL)canRotateForHeading;
-(BOOL)_isUsingDevResourceStyleSheet;
-(void)gestureControllerWillStartZooming:(id)arg1 animated:(BOOL)arg2 ;
-(BOOL)_isHandlingUserEvent;
-(CGRect)annotationContainerVisibleRect:(id)arg1 ;
-(void)gestureControllerDidStopPanningDecelerating:(id)arg1 ;
-(BOOL)hasRenderedSomething;
-(void)_addAnnotations:(id)arg1 allowAnimation:(BOOL)arg2 ;
-(BOOL)isUserLocationVisible;
-(double)_goToCenterCoordinate:(SCD_Struct_MK0)arg1 zoomLevel:(double)arg2 animated:(BOOL)arg3 ;
-(void)resumeUserLocationUpdates;
-(void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(BOOL)arg2 ;
-(BOOL)_shouldDelayLocationUpdatesUntilInitialRendering;
-(id)compassView;
-(void)_willChangeStatusBarFrame:(id)arg1 ;
-(BOOL)_supportsVKMapType:(long long)arg1 ;
-(void)_selectLabelMarker:(id)arg1 animated:(BOOL)arg2 ;
-(void)_selectAnnotation:(id)arg1 animated:(BOOL)arg2 avoid:(CGRect)arg3 ;
-(void)gestureControllerWillStartPanning:(id)arg1 ;
-(void)setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 ;
-(void)annotationContainerDidFinishMapsTransitionExpanding:(id)arg1 ;
-(void)_setShouldDelayLocationUpdatesUntilInitialRendering:(BOOL)arg1 ;
-(/*^block*/id)annotationRectTest;
-(void)gestureControllerDidStopUserInteraction:(id)arg1 ;
-(BOOL)showsScale;
-(void)_updateScrollingAndGestures;
-(void)_updateCompassPosition;
-(void)_zoomOutWithCompletionHandler:(/*^block*/id)arg1 ;
-(UIEdgeInsets)_attributionInsets;
-(double)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(SCD_Struct_MK0)arg2 maxDistance:(double*)arg3 ;
-(double)_zoomLevelForMapRect:(SCD_Struct_MK1)arg1 includeAccessoryPadding:(BOOL)arg2 ;
-(SCD_Struct_MK1)visibleMapRect;
-(void)_setTracePlaybackSpeedMultiplier:(double)arg1 ;
-(void)_setInteractionMode:(long long)arg1 ;
-(void)_setPanWithMomentum:(BOOL)arg1 ;
-(void)mapLayer:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2 ;
-(long long)_interactionMode;
-(BOOL)_annotationViewsAreAddedImmediately;
-(void)setShowsTraffic:(BOOL)arg1 ;
-(BOOL)_roomForCompass;
-(BOOL)_mustWaitUntilSized;
-(void)_replaceAnnotation:(id)arg1 withAnnotation:(id)arg2 ;
-(BOOL)_panWithMomentum;
-(unsigned long long)_currentFlyoverAnimationID;
-(void)annotationContainerWillAnimateBubble:(id)arg1 ;
-(void)_didChangeRegionMidstream:(BOOL)arg1 ;
-(void)_addViewsForAnnotations:(id)arg1 ;
-(void)deviceOrientationDidChange:(id)arg1 ;
-(void)_setCurrentFlyoverAnimationID:(unsigned long long)arg1 ;
-(id)_annotationAtPoint:(CGPoint)arg1 avoidCurrent:(BOOL)arg2 ;
-(void)contentSizeCategoryDidChange:(id)arg1 ;
-(void)_sizeWillChange;
-(CGRect)convertRegion:(SCD_Struct_MK1)arg1 toRectToView:(id)arg2 ;
-(void)_startPanningAtPoint:(CGPoint)arg1 ;
-(BOOL)_automaticallySnapsToNorth;
-(void)_addAnnotation:(id)arg1 allowAnimation:(BOOL)arg2 ;
-(UIEdgeInsets)_edgeInsets;
-(id)_commonInitFromIB:(BOOL)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(BOOL)arg3 ;
-(void)annotationContainerWillDropPins:(id)arg1 ;
-(void)annotationContainerDidAnimateBubble:(id)arg1 ;
-(void)_addDebugGesture;
-(void)_stopPanningAtPoint:(CGPoint)arg1 ;
-(CGRect)_calloutContentRect;
-(void)_insertSubview:(id)arg1 ;
-(void)_updatePanWithTranslation:(CGPoint)arg1 ;
-(void)_setCompassVisible:(BOOL)arg1 animated:(BOOL)arg2 ;
-(void)setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 completionHandler:(/*^block*/id)arg7 ;
-(void)mapLayer:(id)arg1 didUpdateVerticalYawTo:(double)arg2 ;
-(BOOL)_allowsPopoverWhenNotInWindow;
-(BOOL)_canZoomOut;
-(CGRect)_calloutPopoverTargetRect;
-(void)_resumeUserInteraction;
-(BOOL)_canZoomIn;
-(void)set_annotationViewsAreAddedImmediately:(BOOL)arg1 ;
-(void)_annotationViewDragStateChanged:(id)arg1 ;
-(void)mapLayer:(id)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4 ;
-(CGRect)visibleCenteringRectInView:(id)arg1 ;
-(/*^block*/id)_debugConsoleAdditionalInfoProvider;
-(void)setShowsBuildings:(BOOL)arg1 ;
-(id)_labelMarkerAtPoint:(CGPoint)arg1 ;
-(long long)_annotationTrackingZoomStyle;
-(void)_setAllowsPopoverWhenNotInWindow:(BOOL)arg1 ;
-(void)setCompassEnabled:(BOOL)arg1 ;
-(void)annotationContainerDidDropPins:(id)arg1 ;
-(void)_handleTapToSelect:(id)arg1 ;
-(SCD_Struct_MK3)_mapDisplayStyle;
-(void)setVisibleMapRect:(SCD_Struct_MK1)arg1 edgePadding:(UIEdgeInsets)arg2 animated:(BOOL)arg3 ;
-(id)_pinchGestureRecognizer;
-(id)viewForAnnotation:(id)arg1 ;
-(NSArray *)annotations;
-(NSArray *)selectedAnnotations;
-(void)setRotateEnabled:(BOOL)arg1 ;
-(void)setPitchEnabled:(BOOL)arg1 ;
-(void)setShowsUserLocation:(BOOL)arg1 ;
-(void)setSelectedAnnotations:(NSArray *)arg1 ;
-(MKUserLocation *)userLocation;
-(id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1 ;
-(SCD_Struct_MK1)mapRectThatFits:(SCD_Struct_MK1)arg1 ;
-(SCD_Struct_MK1)mapRectThatFits:(SCD_Struct_MK1)arg1 edgePadding:(UIEdgeInsets)arg2 ;
-(void)setVisibleMapRect:(SCD_Struct_MK1)arg1 animated:(BOOL)arg2 ;
-(MKMapCamera *)camera;
-(void)removeAnnotations:(id)arg1 ;
-(void)addAnnotations:(id)arg1 ;
-(void)addAnnotation:(id)arg1 ;
-(void)removeAnnotation:(id)arg1 ;
-(SCD_Struct_MK1)convertRect:(CGRect)arg1 toRegionFromView:(id)arg2 ;
@end

