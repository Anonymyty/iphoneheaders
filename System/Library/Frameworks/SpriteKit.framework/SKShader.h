/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:30:38 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/Frameworks/SpriteKit.framework/SpriteKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpriteKit/SpriteKit-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSCoding.h>

@class NSMutableArray, NSArray, NSMutableDictionary, NSString;

@interface SKShader : NSObject <NSCopying, NSCoding> {

	NSMutableArray* _uniforms;
	NSArray* _attributes;
	NSMutableDictionary* _uniformData;
	NSString* _source;
	NSString* _fileName;
	NSString* _compileLog;
	BOOL _programDirty;
	shared_ptr<jet_program>* _backingProgram;
	map<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool> > > >* _attributeBuffers;
	BOOL _performFullCapture;

}

@property (copy) NSString * source; 
@property (copy) NSArray * uniforms; 
@property (readonly) NSArray * _textureUniforms; 
@property (readonly) map<std::__1::basic_string<char>* _attributeBuffers; 
@property (readonly) shared_ptr<jet_program>* _backingProgram; 
@property (readonly) shared_ptr<jet_command_buffer>* _commands; 
@property (assign) BOOL performFullCapture;                                            //@synthesize performFullCapture=_performFullCapture - In the implementation block
+(id)shader;
+(id)shaderWithFileNamed:(id)arg1 ;
+(id)shaderWithSource:(id)arg1 uniforms:(id)arg2 ;
+(id)shaderWithSource:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(BOOL)isValid;
-(void)setSource:(NSString *)arg1 ;
-(NSString *)source;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)attributes;
-(void)setAttributes:(id)arg1 ;
-(id)initWithSource:(id)arg1 ;
-(map<std::__1::basic_string<char>*)_attributeBuffers;
-(BOOL)performFullCapture;
-(void)setPerformFullCapture:(BOOL)arg1 ;
-(id)initWithSource:(id)arg1 uniforms:(id)arg2 ;
-(void)setUniforms:(NSArray *)arg1 ;
-(id)_getMetalVertexOutDefinition;
-(void)generateVertexAttributeDeclares:(id*)arg1 statements:(id*)arg2 ;
-(void)generateFragmentAttributeDeclares:(id*)arg1 ;
-(id)fragmentPrelude;
-(id)fragmentPreludeMetal;
-(id)_generateMetalSource;
-(shared_ptr<jet_program>*)_backingProgram;
-(id)fullMetalVertexSource;
-(id)fullMetalFragmentSource;
-(id)fullVertexSource;
-(id)fullFragmentSource;
-(shared_ptr<jet_command_buffer>*)_commandsForBatchOffset:(int)arg1 count:(int)arg2 ;
-(id)_getMetalFragmentFunctionName;
-(NSArray *)uniforms;
-(void)addUniform:(id)arg1 ;
-(id)uniformNamed:(id)arg1 ;
-(void)removeUniformNamed:(id)arg1 ;
-(NSArray *)_textureUniforms;
-(BOOL)_backingProgramIsDirty;
-(shared_ptr<jet_command_buffer>*)_commands;
-(id)_getShaderCompilationLog;
@end

