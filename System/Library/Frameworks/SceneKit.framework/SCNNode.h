/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:30:15 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/Frameworks/SceneKit.framework/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SceneKit/SceneKit-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/SCNAnimatable.h>
#import <libobjc.A.dylib/SCNActionable.h>
#import <libobjc.A.dylib/SCNBoundingVolume.h>

@class NSArray, NSMutableArray, SCNNodeComponent, SCNOrderedDictionary, NSString, NSMutableDictionary, SCNLight, SCNCamera, SCNGeometry, SCNSkinner, SCNMorpher, SCNPhysicsBody, SCNPhysicsField;

@interface SCNNode : NSObject <NSCopying, NSSecureCoding, SCNAnimatable, SCNActionable, SCNBoundingVolume> {

	_C3DNode* _node;
	SCNNode* _parent;
	NSMutableArray* _childNodes;
	SCNNode* _presentationInstance;
	unsigned _isPresentationInstance : 1;
	unsigned _lightLoaded : 1;
	unsigned _geometryLoaded : 1;
	unsigned _cameraLoaded : 1;
	unsigned _skinnerLoaded : 1;
	unsigned _morpherLoaded : 1;
	unsigned _paused : 1;
	unsigned _pausedByInheritance : 1;
	unsigned _affineUpToDate : 1;
	unsigned _transformUpToDate : 1;
	unsigned _hasPivot : 1;
	unsigned _usesEuler : 1;
	unsigned _hidden : 1;
	unsigned _castsShadow : 1;
	unsigned _ignoreAnimationWhenCopying_tmp : 1;
	unsigned _hasComponentBitmask : 10;
	SCNMatrix4 _transform;
	SCNVector3 _position;
	SCNVector4 _rotation;
	SCNVector3 _scale;
	float _opacity;
	unsigned long long _categoryBitMask;
	SCNNodeComponent* _components;
	SCNOrderedDictionary* _animations;
	SCNOrderedDictionary* _actions;
	SCNVector3* _fixedBoundingBoxExtrema;
	long long _renderingOrder;
	NSString* _name;
	NSMutableDictionary* _valueForKey;
	id _rendererDelegate;

}

@property (nonatomic,copy) NSString * name; 
@property (nonatomic,retain) SCNLight * light; 
@property (nonatomic,retain) SCNCamera * camera; 
@property (nonatomic,retain) SCNGeometry * geometry; 
@property (nonatomic,retain) SCNSkinner * skinner; 
@property (nonatomic,retain) SCNMorpher * morpher; 
@property (assign,nonatomic) SCNMatrix4 transform; 
@property (assign,nonatomic) SCNVector3 position; 
@property (assign,nonatomic) SCNVector4 rotation; 
@property (assign,nonatomic) SCNVector4 orientation; 
@property (assign,nonatomic) SCNVector3 eulerAngles; 
@property (assign,nonatomic) SCNVector3 scale; 
@property (assign,nonatomic) SCNMatrix4 pivot; 
@property (nonatomic,readonly) SCNMatrix4 worldTransform; 
@property (assign,getter=isHidden,nonatomic) BOOL hidden; 
@property (assign,nonatomic) double opacity; 
@property (assign,nonatomic) long long renderingOrder; 
@property (assign,nonatomic) BOOL castsShadow; 
@property (nonatomic,readonly) SCNNode * parentNode; 
@property (nonatomic,readonly) NSArray * childNodes; 
@property (nonatomic,retain) SCNPhysicsBody * physicsBody; 
@property (nonatomic,retain) SCNPhysicsField * physicsField; 
@property (copy) NSArray * constraints; 
@property (nonatomic,copy) NSArray * filters; 
@property (nonatomic,readonly) SCNNode * presentationNode; 
@property (assign,getter=isPaused,nonatomic) BOOL paused; 
@property (assign,nonatomic) id<SCNNodeRendererDelegate> rendererDelegate; 
@property (assign,nonatomic) unsigned long long categoryBitMask; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) NSArray * animationKeys; 
@property (nonatomic,readonly) BOOL hasActions; 
@property (nonatomic,readonly) NSArray * actionKeys; 
+(id)nodeWithMDLObject:(id)arg1 ;
+(id)nodeWithMDLAsset:(id)arg1 ;
+(BOOL)resolveInstanceMethod:(SEL)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)node;
+(id)nodeWithNodeRef:(_C3DNode*)arg1 ;
+(id)nodeWithGeometry:(id)arg1 ;
+(id)keyPathsForValuesAffectingPosition;
+(id)keyPathsForValuesAffectingTransform;
+(id)keyPathsForValuesAffectingRotation;
+(id)keyPathsForValuesAffectingEulerAngles;
+(id)keyPathsForValuesAffectingOrientation;
+(id)keyPathsForValuesAffectingScale;
-(id)debugQuickLookObject;
-(id)debugQuickLookData;
-(id)_associatedMDLObject;
-(void)_bakeNodes:(id)arg1 folderPath:(id)arg2 inVertex:(BOOL)arg3 bakeAO:(BOOL)arg4 quality:(float)arg5 attenuation:(float)arg6 geomSetter:(/*^block*/id)arg7 terminateSetter:(/*^block*/id)arg8 ;
-(void)dump;
-(void)_registerAsObserver;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(BOOL)isHidden;
-(void)setHidden:(BOOL)arg1 ;
-(id)init;
-(NSString *)description;
-(id)copy;
-(void)_setParent:(id)arg1 ;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(id)identifier;
-(id)actions;
-(void)setOrientation:(SCNVector4)arg1 ;
-(SCNVector4)orientation;
-(void)setScale:(SCNVector3)arg1 ;
-(void)_setScale:(SCNVector3)arg1 ;
-(SCNVector3)scale;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setTransform:(SCNMatrix4)arg1 ;
-(id)actionForKey:(id)arg1 ;
-(void)setPosition:(SCNVector3)arg1 ;
-(NSArray *)animationKeys;
-(id)animationForKey:(id)arg1 ;
-(SCNMatrix4)transform;
-(void)removeAnimationForKey:(id)arg1 ;
-(id)valueForKeyPath:(id)arg1 ;
-(void)addAnimation:(id)arg1 forKey:(id)arg2 ;
-(void)setFilters:(NSArray *)arg1 ;
-(void)setValue:(id)arg1 forKeyPath:(id)arg2 ;
-(NSArray *)constraints;
-(void)setIdentifier:(id)arg1 ;
-(void)renderInContext:(void*)arg1 ;
-(SCNVector3)position;
-(double)opacity;
-(void)setOpacity:(double)arg1 ;
-(NSArray *)filters;
-(void)removeAllAnimations;
-(NSArray *)childNodes;
-(void)removeAllActions;
-(id)valueForUndefinedKey:(id)arg1 ;
-(void)setRotation:(SCNVector4)arg1 ;
-(SCNVector4)rotation;
-(SCNNode *)parentNode;
-(void)setPaused:(BOOL)arg1 ;
-(SCNGeometry *)geometry;
-(void)setGeometry:(SCNGeometry *)arg1 ;
-(SCNVector4)quaternion;
-(void)addAnimation:(id)arg1 ;
-(unsigned long long)categoryBitMask;
-(void)setCategoryBitMask:(unsigned long long)arg1 ;
-(void)setCamera:(SCNCamera *)arg1 ;
-(BOOL)hidden;
-(id)attributeForKey:(id)arg1 ;
-(void)setValue:(id)arg1 forUndefinedKey:(id)arg2 ;
-(void)_setPosition:(SCNVector3)arg1 ;
-(void)setPhysicsBody:(SCNPhysicsBody *)arg1 ;
-(SCNPhysicsBody *)physicsBody;
-(id)clone;
-(SCNCamera *)camera;
-(BOOL)isPaused;
-(_C3DNode*)nodeRef;
-(void*)__CFObject;
-(id)childNodesPassingTest:(/*^block*/id)arg1 ;
-(void)addAudioPlayer:(id)arg1 ;
-(C3DSceneRef)sceneRef;
-(void)_syncObjCAnimations;
-(_C3DAnimationManager*)animationManager;
-(void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2 ;
-(void)pauseAnimationForKey:(id)arg1 ;
-(void)resumeAnimationForKey:(id)arg1 ;
-(BOOL)isAnimationForKeyPaused:(id)arg1 ;
-(void)removeAnimationForKey:(id)arg1 fadeOutDuration:(double)arg2 ;
-(void)__removeAnimation:(id)arg1 forKey:(id)arg2 ;
-(_C3DAnimationChannel*)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2 ;
-(BOOL)isPausedOrPausedByInheritance;
-(id)presentationInstance;
-(BOOL)_isAReference;
-(void)_removeAction:(id)arg1 forKey:(id)arg2 ;
-(BOOL)_usesEulerRepresentation;
-(void)setGizmo:(BOOL)arg1 ;
-(SCNMatrix4)convertTransform:(SCNMatrix4)arg1 toNode:(id)arg2 ;
-(id)lightProbes;
-(void)_syncObjCModel;
-(void)_syncEntityObjCModel;
-(void)_setAttributes:(id)arg1 ;
-(id)initPresentationNodeWithNodeRef:(_C3DNode*)arg1 ;
-(void)_dump:(id)arg1 ;
-(SCNMatrix4)pivot;
-(void)setPivot:(SCNMatrix4)arg1 ;
-(long long)renderingOrder;
-(void)setRenderingOrder:(long long)arg1 ;
-(id<SCNNodeRendererDelegate>)rendererDelegate;
-(void)setRendererDelegate:(id<SCNNodeRendererDelegate>)arg1 ;
-(SCNSkinner *)skinner;
-(void)setSkinner:(SCNSkinner *)arg1 ;
-(SCNMorpher *)morpher;
-(void)setMorpher:(SCNMorpher *)arg1 ;
-(id)particleSystems;
-(BOOL)isGizmo;
-(NSArray *)actionKeys;
-(void)runAction:(id)arg1 forKey:(id)arg2 ;
-(id)_copyRecursively;
-(void)_initChildNodesArray;
-(void)_expandChildArrayIfNeeded;
-(id)initWithNodeRef:(_C3DNode*)arg1 ;
-(BOOL)_childNodesPassingTest:(/*^block*/id)arg1 recursively:(BOOL)arg2 output:(id)arg3 ;
-(id)childNodesPassingTest:(/*^block*/id)arg1 recursively:(BOOL)arg2 ;
-(BOOL)_enumerateChildNodesUsingBlock:(/*^block*/id)arg1 ;
-(void)_childNodesWithAttribute:(Class)arg1 output:(id)arg2 recursively:(BOOL)arg3 ;
-(id)objectInChildNodesWithAttribute:(id)arg1 firstOnly:(BOOL)arg2 ;
-(id)_findComponentWithType:(long long)arg1 ;
-(void)_setComponent:(id)arg1 withType:(long long)arg2 ;
-(void)_updateAffine;
-(SCNVector4)_quaternion;
-(void)_setQuaternion:(SCNVector4)arg1 ;
-(SCNVector3)_euler;
-(void)_updateTransform;
-(SCNMatrix4)convertTransform:(SCNMatrix4)arg1 fromNode:(id)arg2 ;
-(void)_removeComponentWithType:(long long)arg1 ;
-(void)_assignComponent:(id)arg1 toContainerWithType:(long long)arg2 ;
-(id)__light;
-(id)__skinner;
-(id)__morpher;
-(id)__camera;
-(id)__geometry;
-(BOOL)parseSpecialKey:(id)arg1 withPath:(id)arg2 intoDestination:(id*)arg3 remainingPath:(id*)arg4 ;
-(void)_reSyncModelTree;
-(unsigned long long)countOfChildNodes;
-(void)insertObject:(id)arg1 inChildNodesAtIndex:(unsigned long long)arg2 ;
-(BOOL)canAddChildNode:(id)arg1 ;
-(void)_setPaused:(BOOL)arg1 ;
-(void)__insertObject:(id)arg1 inChildNodesAtIndex:(unsigned long long)arg2 ;
-(void)__removeObjectFromChildNodesAtIndex:(unsigned long long)arg1 ;
-(void)removeObjectFromChildNodesAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)indexOfChildNode:(id)arg1 ;
-(void)replaceObjectInChildNodesAtIndex:(unsigned long long)arg1 withObject:(id)arg2 ;
-(BOOL)getBoundingSphereCenter:(SCNVector3*)arg1 radius:(double*)arg2 ;
-(BOOL)isPresentationInstance;
-(id)flattenedClone;
-(void)_actionsTimeJump:(double)arg1 ;
-(void)removeActionForKey:(id)arg1 ;
-(void)runAction:(id)arg1 forKey:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_removeDeadParticleSystem:(C3DParticleSystemRef)arg1 ;
-(id)_particleSystems;
-(id)_audioPlayers;
-(id)audioPlayers;
-(void)setBoundingBoxMin:(SCNVector3*)arg1 max:(SCNVector3*)arg2 ;
-(void)_customEncodingOfSCNNode:(id)arg1 ;
-(void)_customDecodingOfSCNNode:(id)arg1 ;
-(void)_didDecodeSCNNode:(id)arg1 ;
-(void)runAction:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)objectInChildNodesWithName:(id)arg1 ;
-(void)enumerateChildNodesUsingBlock:(/*^block*/id)arg1 ;
-(id)childNodesWithAttribute:(Class)arg1 recursively:(BOOL)arg2 ;
-(id)childNodeWithName:(id)arg1 ;
-(id)jsChildNodesWithAttribute:(id)arg1 ;
-(id)hitTestWithSegmentFromPoint:(SCNVector3)arg1 toPoint:(SCNVector3)arg2 options:(id)arg3 ;
-(void)setQuaternion:(SCNVector4)arg1 ;
-(id)mutableChildNodes;
-(BOOL)isJoint;
-(id)objectInChildNodesAtIndex:(unsigned long long)arg1 ;
-(void)removeAllChilds;
-(void)insertChildNode:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)replaceChildNode:(id)arg1 with:(id)arg2 ;
-(BOOL)getFrustum:(C3DPlane*)arg1 ;
-(id)getBoundingSphere;
-(id)getBoundingBox;
-(id)flattenedCopy;
-(void)setLightProbes:(id)arg1 ;
-(void)removeAllParticleSystems;
-(void)removeParticleSystem:(id)arg1 ;
-(unsigned long long)countOfParticleSystems;
-(id)objectInParticleSystemsAtIndex:(unsigned long long)arg1 ;
-(void)insertObject:(id)arg1 inParticleSystemsAtIndex:(unsigned long long)arg2 ;
-(void)removeObjectFromParticleSystemsAtIndex:(unsigned long long)arg1 ;
-(void)replaceObjectInParticleSystemsAtIndex:(unsigned long long)arg1 withObject:(id)arg2 ;
-(void)removeAllAudioPlayers;
-(void)removeAudioPlayer:(id)arg1 ;
-(unsigned long long)countOfAudioPlayers;
-(id)objectInAudioPlayersAtIndex:(unsigned long long)arg1 ;
-(void)insertObject:(id)arg1 inAudioPlayersAtIndex:(unsigned long long)arg2 ;
-(void)removeObjectFromAudioPlayersAtIndex:(unsigned long long)arg1 ;
-(void)replaceObjectInAudioPlayerAtIndex:(unsigned long long)arg1 withObject:(id)arg2 ;
-(void)addChildNode:(id)arg1 ;
-(id)scene;
-(void)removeFromParentNode;
-(id)childNodeWithName:(id)arg1 recursively:(BOOL)arg2 ;
-(SCNNode *)presentationNode;
-(BOOL)getBoundingBoxMin:(SCNVector3*)arg1 max:(SCNVector3*)arg2 ;
-(SCNVector3)convertPosition:(SCNVector3)arg1 fromNode:(id)arg2 ;
-(SCNVector3)convertPosition:(SCNVector3)arg1 toNode:(id)arg2 ;
-(void)setConstraints:(NSArray *)arg1 ;
-(SCNVector3)eulerAngles;
-(void)setEulerAngles:(SCNVector3)arg1 ;
-(SCNPhysicsField *)physicsField;
-(void)setPhysicsField:(SCNPhysicsField *)arg1 ;
-(void)addParticleSystem:(id)arg1 ;
-(SCNLight *)light;
-(void)setLight:(SCNLight *)arg1 ;
-(BOOL)castsShadow;
-(void)setCastsShadow:(BOOL)arg1 ;
-(BOOL)hasActions;
-(void)runAction:(id)arg1 ;
-(void)setAttribute:(id)arg1 forKey:(id)arg2 ;
-(void)setWorldTransform:(SCNMatrix4)arg1 ;
-(SCNMatrix4)worldTransform;
@end

