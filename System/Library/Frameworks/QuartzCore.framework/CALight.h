/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:30:02 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/Frameworks/QuartzCore.framework/QuartzCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <QuartzCore/QuartzCore-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSCoding.h>

@class NSString;

@interface CALight : NSObject <NSCopying, NSCoding> {

	void* _attr;
	void* _priv;

}

@property (copy) NSString * type; 
@property (copy) NSString * name; 
@property (getter=isEnabled) BOOL enabled; 
@property (assign) CGColorRef color; 
@property (assign) double intensity; 
@property (assign) double ambientIntensity; 
@property (assign) double diffuseIntensity; 
@property (assign) double specularIntensity; 
@property (assign) CAPoint3D direction; 
@property (retain) id image; 
@property (assign) double imageRotation; 
@property (copy) NSString * imageBlendMode; 
@property (assign) double imageNormalAngle; 
@property (assign) CAPoint3D position; 
@property (assign) double falloffDistance; 
@property (assign) double falloff; 
@property (assign) double coneAngle; 
@property (assign) double coneEdgeSoftness; 
+(id)defaultValueForKey:(id)arg1 ;
+(void)CAMLParserStartElement:(id)arg1 ;
+(id)lightWithType:(id)arg1 ;
+(id)CA_CAMLPropertyForKey:(id)arg1 ;
-(void)CAMLParser:(id)arg1 setValue:(id)arg2 forKey:(id)arg3 ;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLTypeForKey:(id)arg1 ;
-(Object*)CA_copyRenderValue;
-(BOOL)shouldArchiveValueForKey:(id)arg1 ;
-(double)ambientIntensity;
-(void)setAmbientIntensity:(double)arg1 ;
-(double)diffuseIntensity;
-(void)setDiffuseIntensity:(double)arg1 ;
-(double)specularIntensity;
-(void)setSpecularIntensity:(double)arg1 ;
-(double)falloffDistance;
-(void)setFalloffDistance:(double)arg1 ;
-(double)coneAngle;
-(void)setConeAngle:(double)arg1 ;
-(double)coneEdgeSoftness;
-(void)setConeEdgeSoftness:(double)arg1 ;
-(double)imageRotation;
-(void)setImageRotation:(double)arg1 ;
-(double)imageNormalAngle;
-(void)setImageNormalAngle:(double)arg1 ;
-(NSString *)imageBlendMode;
-(void)setImageBlendMode:(NSString *)arg1 ;
-(id)valueForKey:(id)arg1 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(void)setImage:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(void)setType:(NSString *)arg1 ;
-(NSString *)type;
-(void)setEnabled:(BOOL)arg1 ;
-(BOOL)isEnabled;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)image;
-(void)setPosition:(CAPoint3D)arg1 ;
-(id)valueForKeyPath:(id)arg1 ;
-(id)initWithType:(id)arg1 ;
-(void)setValue:(id)arg1 forKeyPath:(id)arg2 ;
-(CAPoint3D)position;
-(void)setDirection:(CAPoint3D)arg1 ;
-(CAPoint3D)direction;
-(CGColorRef)color;
-(void)setColor:(CGColorRef)arg1 ;
-(void)setFalloff:(double)arg1 ;
-(double)falloff;
-(double)intensity;
-(void)setIntensity:(double)arg1 ;
@end

