/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 5:24:55 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /System/Library/AccessibilityBundles/ZoomWindow.axuiservice/ZoomWindow
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ZoomWindow/ZoomWindow-Structs.h>
#import <ZoomWindow/ZWZoomViewController.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol ZWZoomLensViewControllerDelegate;
@class NSString, ZWLensZoomView, UIScrollView, UILongPressGestureRecognizer, UITapGestureRecognizer;

@interface ZWZoomLensViewController : ZWZoomViewController <UIGestureRecognizerDelegate> {

	CGPoint _lastDragOffset;
	BOOL _shouldNotifyDelegateOfDrag;
	double _lastTapTime;
	unsigned long long _prescrollTaps;
	BOOL _userIsInteractingWithLens;
	BOOL _userIsMovingLens;
	BOOL _inStandbyMode;
	id<ZWZoomLensViewControllerDelegate> _delegate;
	double _zoomFactor;
	NSString* _lensEffect;
	ZWLensZoomView* _lensZoomView;
	UIScrollView* _dummyScrollView;
	UILongPressGestureRecognizer* _longPressGestureRecognizer;
	UITapGestureRecognizer* _tapGestureRecognizer;
	NSString* _screenshotActionHandlerIdentifier;
	CGPoint _zoomPanOffset;

}

@property (assign,nonatomic,__weak) id<ZWZoomLensViewControllerDelegate> delegate;                   //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSString * identifier; 
@property (assign,nonatomic) double zoomFactor;                                                      //@synthesize zoomFactor=_zoomFactor - In the implementation block
@property (assign,nonatomic) CGPoint zoomPanOffset;                                                  //@synthesize zoomPanOffset=_zoomPanOffset - In the implementation block
@property (nonatomic,retain) NSString * lensEffect;                                                  //@synthesize lensEffect=_lensEffect - In the implementation block
@property (assign,nonatomic) BOOL userIsInteractingWithLens;                                         //@synthesize userIsInteractingWithLens=_userIsInteractingWithLens - In the implementation block
@property (assign,nonatomic) BOOL userIsMovingLens;                                                  //@synthesize userIsMovingLens=_userIsMovingLens - In the implementation block
@property (nonatomic,retain) ZWLensZoomView * lensZoomView;                                          //@synthesize lensZoomView=_lensZoomView - In the implementation block
@property (assign,nonatomic) BOOL inStandbyMode;                                                     //@synthesize inStandbyMode=_inStandbyMode - In the implementation block
@property (nonatomic,retain) UIScrollView * dummyScrollView;                                         //@synthesize dummyScrollView=_dummyScrollView - In the implementation block
@property (nonatomic,retain) UILongPressGestureRecognizer * longPressGestureRecognizer;              //@synthesize longPressGestureRecognizer=_longPressGestureRecognizer - In the implementation block
@property (nonatomic,retain) UITapGestureRecognizer * tapGestureRecognizer;                          //@synthesize tapGestureRecognizer=_tapGestureRecognizer - In the implementation block
@property (nonatomic,retain) NSString * screenshotActionHandlerIdentifier;                           //@synthesize screenshotActionHandlerIdentifier=_screenshotActionHandlerIdentifier - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setLensEffect:(NSString *)arg1 ;
-(void)setUserIsInteractingWithLens:(BOOL)arg1 ;
-(CGPoint)dummyScrollViewOffsetForSlug;
-(void)setUserIsMovingLens:(BOOL)arg1 ;
-(void)setLensZoomView:(ZWLensZoomView *)arg1 ;
-(void)setInStandbyMode:(BOOL)arg1 ;
-(void)setDummyScrollView:(UIScrollView *)arg1 ;
-(CGPoint)_lensDragMultiplier;
-(CGSize)dummyScrollViewContentSize;
-(BOOL)_shouldRoundLensCorners;
-(CGPoint)maximumPanOffsetWithZoomFactor:(double)arg1 ;
-(CGPoint)dummyScrollViewDefaultOffset;
-(NSString *)screenshotActionHandlerIdentifier;
-(void)setScreenshotActionHandlerIdentifier:(NSString *)arg1 ;
-(NSString *)lensEffect;
-(void)updateLensChromeAnimated:(BOOL)arg1 ;
-(UIScrollView *)dummyScrollView;
-(BOOL)inStandbyMode;
-(void)_applyInitialLayoutConstraints;
-(ZWLensZoomView *)lensZoomView;
-(id)dummyScrollViewPanGestureRecognizer;
-(id)zoomRootview:(id)arg1 viewForHitTestAtPoint:(CGPoint)arg2 ;
-(CGPoint)validPanOffsetForProposedOffset:(CGPoint)arg1 proposedZoomFactor:(double)arg2 ;
-(void)updateLensEffect:(id)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)updateZoomFactor:(double)arg1 panOffset:(CGPoint)arg2 animated:(BOOL)arg3 animationDuration:(double)arg4 completion:(/*^block*/id)arg5 ;
-(BOOL)_minimumZoomIndistinguishableFromStandbyMode;
-(BOOL)_shouldDisableLensEffectsForStandbyMode;
-(void)_updateLensChromeVisibility:(BOOL)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(CGPoint)offsetByPanningToRect:(CGRect)arg1 zoomFactor:(double)arg2 ;
-(id)initWithZoomFactor:(double)arg1 zoomPanOffset:(CGPoint)arg2 lensEffect:(id)arg3 ;
-(void)updateStandbyMode:(BOOL)arg1 zoomFactor:(double)arg2 panOffset:(CGPoint)arg3 lensEffect:(id)arg4 animated:(BOOL)arg5 completion:(/*^block*/id)arg6 ;
-(BOOL)userIsInteractingWithLens;
-(BOOL)shouldPanZoomContentForAxis:(long long)arg1 delta:(CGPoint)arg2 edgeMask:(unsigned long long)arg3 ;
-(CGPoint)offsetByPanningWithDelta:(CGPoint)arg1 axis:(long long)arg2 zoomFactor:(double)arg3 ;
-(BOOL)userIsMovingLens;
-(CGPoint)offsetByPanningToPoint:(CGPoint)arg1 zoomFactor:(double)arg2 ;
-(void)setDelegate:(id<ZWZoomLensViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(BOOL)scrollViewShouldScrollToTop:(id)arg1 ;
-(id<ZWZoomLensViewControllerDelegate>)delegate;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(NSString *)identifier;
-(void)setLongPressGestureRecognizer:(UILongPressGestureRecognizer *)arg1 ;
-(UILongPressGestureRecognizer *)longPressGestureRecognizer;
-(void)loadView;
-(void)viewDidLoad;
-(void)setZoomFactor:(double)arg1 ;
-(double)zoomFactor;
-(CGPoint)zoomPanOffset;
-(void)setZoomPanOffset:(CGPoint)arg1 ;
-(UITapGestureRecognizer *)tapGestureRecognizer;
-(void)_handleTap:(id)arg1 ;
-(void)setTapGestureRecognizer:(UITapGestureRecognizer *)arg1 ;
-(void)_handleLongPress:(id)arg1 ;
@end

