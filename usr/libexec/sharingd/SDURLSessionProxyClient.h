/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:28 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NDBackgroundSessionProtocol.h>
#import <libobjc.A.dylib/NSURLSessionDataDelegatePrivate.h>

@protocol NDBackgroundSessionClientSDURLSessionCompatibilityProtocolNSXPCProxyCreating, OS_dispatch_queue, SDURLSessionProxyClientDelegate;
@class NSString, NSURLSessionConfiguration, NSXPCConnection, NSObject, NSMutableDictionary, NSMutableSet, NSDictionary, NSURLSession;

@interface SDURLSessionProxyClient : NSObject <NDBackgroundSessionProtocol, NSURLSessionDataDelegatePrivate> {

	NSString* _clientBundleID;
	NSString* _fullIdentifier;
	NSString* _uuidString;
	NSURLSessionConfiguration* _configuration;
	id<NDBackgroundSessionClient><SDURLSessionCompatibilityProtocol><NSXPCProxyCreating> _clientProxy;
	NSXPCConnection* _xpcConnection;
	/*^block*/id _postInvalidationHandler;
	NSObject*<OS_dispatch_queue> _queue;
	NSMutableDictionary* _tasks;
	NSMutableDictionary* _resourceTimers;
	NSMutableDictionary* _watchdogTimers;
	NSMutableSet* _outstandingTaskIDs;
	NSMutableDictionary* _pendingMessagesByTask;
	NSMutableDictionary* _bodyStreamHandles;
	NSMutableDictionary* _identifiersToLocalTasks;
	NSMutableDictionary* _localTasksToIdentifiers;
	NSMutableDictionary* _identifiersToBodyStreamsFromCallback;
	NSDictionary* _delegateOptions;
	NSURLSession* _localSession;
	unsigned long long _taskSequenceNumber;
	BOOL _isInvalid;
	BOOL _shouldCancel;
	BOOL _expectingInvalidation;
	BOOL _shouldResendCreateSession;
	BOOL _isRetainingWiFi;
	id<SDURLSessionProxyClientDelegate> _delegate;

}

@property (readonly) id<SDURLSessionProxyClientDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) NSString * identifier; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)baseMessage;
-(void)updateCreateSessionMessageFromDelegateOptions:(id)arg1 ;
-(void)taskWithIdentifier:(unsigned long long)arg1 taskInfo:(id)arg2 completedWithError:(id)arg3 ;
-(void)completeInvalidation;
-(void)resendPendingMessage:(id)arg1 forWithIdentifier:(unsigned long long)arg2 ;
-(void)resendCreateSessionMessage;
-(void)sendTaskCreationMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 ;
-(id)descriptionForTaskWithIdentifier:(unsigned long long)arg1 ;
-(id)taskMessageForIdentifier:(unsigned long long)arg1 ;
-(void)touchWatchdogTimerForTaskWithIdentifier:(unsigned long long)arg1 ;
-(void)performNextReadFromBodyStreamForTaskIdentifier:(unsigned long long)arg1 ;
-(void)handleDidReceiveChallengeMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 withReply:(/*^block*/id)arg3 ;
-(void)handleWillSendRequestMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 withReply:(/*^block*/id)arg3 ;
-(void)handleDidReceiveResponseMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 withReply:(/*^block*/id)arg3 ;
-(void)handleDidSendBodyDataMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 ;
-(void)handleDidCompleteWithErrorMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 ;
-(void)handleDidReceiveDataMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 withReply:(/*^block*/id)arg3 ;
-(void)handleWillRetryMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 ;
-(void)handleBecameInvalidMessage:(id)arg1 ;
-(void)handleConnectionWaitingMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 ;
-(void)handleGetAuthHeadersMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 withReply:(/*^block*/id)arg3 ;
-(void)handleOpenBodyStreamMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 ;
-(void)handleWillPerformRedirectionMessage:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 withReply:(/*^block*/id)arg3 ;
-(void)deliverImmediateCancelledErrorForTaskWithIdentifier:(unsigned long long)arg1 ;
-(void)startReadingBodyStreamFromFileHandle:(id)arg1 forTaskIdentifier:(unsigned long long)arg2 ;
-(void)cancelWatchdogTimerForTaskWithIdentifier:(unsigned long long)arg1 ;
-(void)cancelResourceTimerForTaskWithIdentifier:(unsigned long long)arg1 ;
-(void)closeBodyStreamForTaskWithIdentifier:(unsigned long long)arg1 ;
-(BOOL)shouldUseDirectWiFi;
-(void)startResourceTimerForTaskWithIdentifier:(unsigned long long)arg1 overriddenStartTime:(double)arg2 ;
-(BOOL)taskIsUsingDirectWiFi:(unsigned long long)arg1 ;
-(unsigned long long)taskIdentifierForLocalTask:(id)arg1 ;
-(id)inputStreamWithFileHandle:(id)arg1 ;
-(id)initWithConfiguration:(id)arg1 bundleID:(id)arg2 clientProxy:(id)arg3 delegateOptions:(id)arg4 delegate:(id)arg5 ;
-(id)getTaskInformation;
-(void)cancelEverything;
-(void)devicesConnected;
-(void)devicesDisconnected;
-(void)handleMessage:(id)arg1 ofType:(unsigned short)arg2 withReply:(/*^block*/id)arg3 ;
-(void)handleFailedMessageSend:(id)arg1 ofType:(unsigned short)arg2 ;
-(void)uploadTaskWithRequest:(id)arg1 originalRequest:(id)arg2 fromFile:(id)arg3 sandboxExtensionData:(id)arg4 identifier:(unsigned long long)arg5 reply:(/*^block*/id)arg6 ;
-(void)retainWiFi;
-(void)releaseWiFi;
-(void)_URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_URLSession:(id)arg1 task:(id)arg2 getAuthHeadersForResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)invalidateWithReply:(/*^block*/id)arg1 ;
-(void)dataTaskWithRequest:(id)arg1 originalRequest:(id)arg2 identifier:(unsigned long long)arg3 reply:(/*^block*/id)arg4 ;
-(void)downloadTaskWithResumeData:(id)arg1 identifier:(unsigned long long)arg2 reply:(/*^block*/id)arg3 ;
-(void)downloadTaskWithRequest:(id)arg1 originalRequest:(id)arg2 downloadFilePath:(id)arg3 identifier:(unsigned long long)arg4 reply:(/*^block*/id)arg5 ;
-(void)avAssetDownloadTaskWithDownloadToken:(unsigned long long)arg1 URL:(id)arg2 destinationURL:(id)arg3 temporaryDestinationURL:(id)arg4 options:(id)arg5 identifier:(unsigned long long)arg6 reply:(/*^block*/id)arg7 ;
-(void)resetStorageWithReply:(/*^block*/id)arg1 ;
-(void)setPriority:(long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2 ;
-(void)setBytesPerSecondLimit:(long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2 ;
-(void)resumeTaskWithIdentifier:(unsigned long long)arg1 ;
-(void)cancelTaskWithIdentifier:(unsigned long long)arg1 byProducingResumeData:(/*^block*/id)arg2 ;
-(void)suspendTaskWithIdentifier:(unsigned long long)arg1 ;
-(void)setLoadingPoolPriority:(double)arg1 forTaskWithIdentifier:(unsigned long long)arg2 ;
-(void)setDescription:(id)arg1 forTask:(unsigned long long)arg2 ;
-(void)setXPCConnection:(id)arg1 ;
-(id<SDURLSessionProxyClientDelegate>)delegate;
-(NSString *)identifier;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(/*^block*/id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2 ;
-(void)cancelTaskWithIdentifier:(unsigned long long)arg1 ;
-(void)URLSession:(id)arg1 task:(id)arg2 _willSendRequestForEstablishedConnection:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 _isWaitingForConnectionWithReason:(long long)arg3 ;
@end

