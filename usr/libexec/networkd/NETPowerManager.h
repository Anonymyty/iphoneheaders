/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:26 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/networkd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_timer_aggregate, OS_xpc_object;
#import <networkd/networkd-Structs.h>
@class NSMutableArray, NSArray, NSObject, NSDate;

@interface NETPowerManager : NSObject {

	BOOL _powerPluggedIn;
	BOOL _thermalConditionIsGood;
	BOOL _deviceInBatterySaverDiscretionaryMode;
	BOOL _powerStateInDarkWake;
	BOOL _powerWillSleep;
	int _powerSourceNotifyToken;
	int _thermalLevelToken;
	int _batterySaverModeToken;
	int _thermalLevel;
	unsigned _sleepWakeNotifier;
	unsigned _sleepWakeConnection;
	NSMutableArray* _changeHandlers;
	NSArray* _powerPolicyTable;
	NSObject*<OS_dispatch_timer_aggregate> _wakeTimerAggregate;
	unsigned long long _minTimeslotInterval;
	long long _ccXPCActivityDelay;
	long long _ccXPCActivityGracePeriod;
	NSObject*<OS_xpc_object> _ccXPCActivityCriteria;
	NSDate* _ccXPCActivityLastRunDate;
	NSMutableArray* _outstandingPowerNapXPCActivityIDs;
	IONotificationPortRef _sleepWakeNotificationPort;

}

@property (readonly) BOOL powerPluggedIn;                                                  //@synthesize powerPluggedIn=_powerPluggedIn - In the implementation block
@property (readonly) BOOL thermalConditionIsGood;                                          //@synthesize thermalConditionIsGood=_thermalConditionIsGood - In the implementation block
@property (readonly) BOOL deviceInBatterySaverDiscretionaryMode;                           //@synthesize deviceInBatterySaverDiscretionaryMode=_deviceInBatterySaverDiscretionaryMode - In the implementation block
@property (readonly) BOOL powerStateInDarkWake;                                            //@synthesize powerStateInDarkWake=_powerStateInDarkWake - In the implementation block
@property (readonly) BOOL powerWillSleep;                                                  //@synthesize powerWillSleep=_powerWillSleep - In the implementation block
@property (retain) NSMutableArray * changeHandlers;                                        //@synthesize changeHandlers=_changeHandlers - In the implementation block
@property (assign) int powerSourceNotifyToken;                                             //@synthesize powerSourceNotifyToken=_powerSourceNotifyToken - In the implementation block
@property (assign) int thermalLevelToken;                                                  //@synthesize thermalLevelToken=_thermalLevelToken - In the implementation block
@property (assign) int batterySaverModeToken;                                              //@synthesize batterySaverModeToken=_batterySaverModeToken - In the implementation block
@property (assign) int thermalLevel;                                                       //@synthesize thermalLevel=_thermalLevel - In the implementation block
@property (retain) NSArray * powerPolicyTable;                                             //@synthesize powerPolicyTable=_powerPolicyTable - In the implementation block
@property (retain) NSObject*<OS_dispatch_timer_aggregate> wakeTimerAggregate;              //@synthesize wakeTimerAggregate=_wakeTimerAggregate - In the implementation block
@property (assign) unsigned long long minTimeslotInterval;                                 //@synthesize minTimeslotInterval=_minTimeslotInterval - In the implementation block
@property (assign) long long ccXPCActivityDelay;                                           //@synthesize ccXPCActivityDelay=_ccXPCActivityDelay - In the implementation block
@property (assign) long long ccXPCActivityGracePeriod;                                     //@synthesize ccXPCActivityGracePeriod=_ccXPCActivityGracePeriod - In the implementation block
@property (retain) NSObject*<OS_xpc_object> ccXPCActivityCriteria;                         //@synthesize ccXPCActivityCriteria=_ccXPCActivityCriteria - In the implementation block
@property (retain) NSDate * ccXPCActivityLastRunDate;                                      //@synthesize ccXPCActivityLastRunDate=_ccXPCActivityLastRunDate - In the implementation block
@property (retain) NSMutableArray * outstandingPowerNapXPCActivityIDs;                     //@synthesize outstandingPowerNapXPCActivityIDs=_outstandingPowerNapXPCActivityIDs - In the implementation block
@property (assign) IONotificationPortRef sleepWakeNotificationPort;                        //@synthesize sleepWakeNotificationPort=_sleepWakeNotificationPort - In the implementation block
@property (assign) unsigned sleepWakeNotifier;                                             //@synthesize sleepWakeNotifier=_sleepWakeNotifier - In the implementation block
@property (assign) unsigned sleepWakeConnection;                                           //@synthesize sleepWakeConnection=_sleepWakeConnection - In the implementation block
+(id)sharedPowerManager;
-(void)registerChangeHandler:(id)arg1 ;
-(void)registerChangeHandler:(id)arg1 ifNeededByParameters:(id)arg2 ;
-(void)unregisterChangeHandler:(id)arg1 ;
-(unsigned long long)getTimeslotForStart:(unsigned long long)arg1 duration:(unsigned long long)arg2 ;
-(id)powerPolicyForTimeslot:(unsigned long long)arg1 workload:(unsigned long long)arg2 ;
-(BOOL)isPowerPolicySatisfied:(id)arg1 whenExpensive:(BOOL)arg2 lqm:(int)arg3 unsatisfiedReason:(const char**)arg4 ;
-(void)notifyClientsThermalConditionChanged;
-(void)notifyClientsBatterySaverModeChanged;
-(void)notifyClientsPluggedInChanged;
-(void)updateDarkWake:(BOOL)arg1 andWillSleep:(BOOL)arg2 ;
-(void)updatePluggedIn;
-(void)updateThermalLevel;
-(void)updateBatterySaverMode;
-(void)setupPluggedIn;
-(void)setupThermalLevel;
-(void)setupTimers;
-(void)setupDarkWakeAndSleepNotificationCapabilities;
-(void)setupBatterSaverMode;
-(void)setupPowerPolicyTable;
-(void)addPowerInformationToPath:(id)arg1 ;
-(void)notifyAllClients;
-(void)setWakeTimerDelayAndGracePeriod;
-(BOOL)isPowerWorkloadPolicySatisfied:(id)arg1 whenExpensive:(BOOL)arg2 lqm:(int)arg3 unsatisfiedReason:(const char**)arg4 ;
-(void)_getTimeParametersForStart:(unsigned long long)arg1 duration:(unsigned long long)arg2 timeslot:(unsigned long long*)arg3 timerStart:(unsigned long long*)arg4 timerInterval:(unsigned long long*)arg5 leeway:(unsigned long long*)arg6 shouldCancelTimer:(BOOL*)arg7 ;
-(void)reevaluateWakeTimerAggregate;
-(void)updateWillSleep:(BOOL)arg1 notificationID:(long long)arg2 ;
-(id)updatePowerPolicyTimer:(id)arg1 start:(unsigned long long)arg2 duration:(unsigned long long)arg3 handler:(/*^block*/id)arg4 ;
-(id)cancelPowerPolicyTimer:(id)arg1 ;
-(BOOL)schedulePowerNapActivity:(id)arg1 atTime:(unsigned long long)arg2 duration:(unsigned long long)arg3 ;
-(void)cancelPowerNapActivity:(id)arg1 ;
-(void)triggerPowerNapActivities;
-(BOOL)powerPluggedIn;
-(BOOL)thermalConditionIsGood;
-(BOOL)deviceInBatterySaverDiscretionaryMode;
-(BOOL)powerStateInDarkWake;
-(BOOL)powerWillSleep;
-(NSMutableArray *)changeHandlers;
-(void)setChangeHandlers:(NSMutableArray *)arg1 ;
-(int)powerSourceNotifyToken;
-(void)setPowerSourceNotifyToken:(int)arg1 ;
-(int)thermalLevelToken;
-(void)setThermalLevelToken:(int)arg1 ;
-(int)batterySaverModeToken;
-(void)setBatterySaverModeToken:(int)arg1 ;
-(int)thermalLevel;
-(void)setThermalLevel:(int)arg1 ;
-(NSArray *)powerPolicyTable;
-(void)setPowerPolicyTable:(NSArray *)arg1 ;
-(NSObject*<OS_dispatch_timer_aggregate>)wakeTimerAggregate;
-(void)setWakeTimerAggregate:(NSObject*<OS_dispatch_timer_aggregate>)arg1 ;
-(unsigned long long)minTimeslotInterval;
-(void)setMinTimeslotInterval:(unsigned long long)arg1 ;
-(long long)ccXPCActivityDelay;
-(void)setCcXPCActivityDelay:(long long)arg1 ;
-(long long)ccXPCActivityGracePeriod;
-(void)setCcXPCActivityGracePeriod:(long long)arg1 ;
-(NSObject*<OS_xpc_object>)ccXPCActivityCriteria;
-(void)setCcXPCActivityCriteria:(NSObject*<OS_xpc_object>)arg1 ;
-(NSDate *)ccXPCActivityLastRunDate;
-(void)setCcXPCActivityLastRunDate:(NSDate *)arg1 ;
-(NSMutableArray *)outstandingPowerNapXPCActivityIDs;
-(void)setOutstandingPowerNapXPCActivityIDs:(NSMutableArray *)arg1 ;
-(IONotificationPortRef)sleepWakeNotificationPort;
-(void)setSleepWakeNotificationPort:(IONotificationPortRef)arg1 ;
-(unsigned)sleepWakeNotifier;
-(void)setSleepWakeNotifier:(unsigned)arg1 ;
-(unsigned)sleepWakeConnection;
-(void)setSleepWakeConnection:(unsigned)arg1 ;
-(void)dealloc;
-(id)init;
-(id)privateDescription;
@end

