/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:26 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/networkd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <networkd/networkd-Structs.h>
#import <networkd/NETHelperEndpoint.h>
#import <networkd/NETProxyLookupDelegate.h>
#import <networkd/NETDuetGateDelegate.h>
#import <networkd/NETLedBellyClientDelegate.h>
#import <networkd/NETAgentManagerDelegate.h>
#import <networkd/NETDataProtectionManagerDelegate.h>
#import <networkd/NETPowerManagerDelegate.h>
#import <networkd/NETQualityManagerDelegate.h>
#import <networkd/NETCellularFallbackWatcherDelegate.h>

@protocol OS_xpc_object, OS_dispatch_source, OS_tcp_connection;
@class NETOnDemandJob, NSString, NWEndpoint, NWPath, NSObject, NWParameters, NSSet, NSMutableSet, NWAddressEndpoint, NETProxyLookup, NETDuetGate, NETConnectionPool, NETLedBellyClient;

@interface NETClientConnection : NETHelperEndpoint <NETProxyLookupDelegate, NETDuetGateDelegate, NETLedBellyClientDelegate, NETAgentManagerDelegate, NETDataProtectionManagerDelegate, NETPowerManagerDelegate, NETQualityManagerDelegate, NETCellularFallbackWatcherDelegate> {

	char _processName[16];
	NETOnDemandJob* _onDemandJob;
	NSString* _effectiveBundleID;
	BOOL _isConnected;
	BOOL _overrideSatisfied;
	BOOL _attemptedAndFailed;
	BOOL _pendingTriggerAgentRestartOnSuccess;
	BOOL _pendingTriggerAgentShouldSendMessage;
	BOOL _isCellularFallback;
	BOOL _isLoopback;
	BOOL _isIPv6LinkLocal;
	BOOL _isPush;
	BOOL _isWaldo;
	BOOL _isCellFallbackWhitelisted;
	BOOL _isDNS;
	BOOL _wifiInUse;
	BOOL _mptcpCellAttempted;
	BOOL _watchingNetworkEvents;
	BOOL _crazyIvan46Started;
	unsigned _pendingTriggerAgentIFIndex;
	unsigned _sleepAssertionOutstanding;
	unsigned _tcpConnectResult;
	unsigned _evaluateOutstanding;
	unsigned _attemptOutstanding;
	int _lastAttemptError;
	NWEndpoint* _networkEndpoint;
	NWPath* _currentPath;
	NWPath* _connectedPath;
	NSObject*<OS_xpc_object> _details;
	NWEndpoint* _connectedEndpoint;
	NWParameters* _connectedParameters;
	unsigned long long _start;
	NSSet* _inactiveAgentUUIDs;
	NSSet* _outstandingTriggerAgentUUIDs;
	NSMutableSet* _updatedTriggerAgentUUIDs;
	NWAddressEndpoint* _reportedAddress;
	NSSet* _pendingTriggerAgentUUIDs;
	NSMutableSet* _receivedTriggerAgentUUIDs;
	NSObject*<OS_xpc_object> _pendingTriggerAgentMessage;
	unsigned long long _duetLastQueryTime;
	NETProxyLookup* _proxyLookup;
	NETDuetGate* _duetGate;
	NSObject*<OS_dispatch_source> _ccTimer;
	unsigned long long _connectReportTime;
	NSObject*<OS_tcp_connection> _tcpConnection;
	unsigned long long _previousPathHash;
	unsigned long long _pathSentTimestamp;
	NETConnectionPool* _connectionPool;
	NETLedBellyClient* _ledBellyClient;
	NWEndpoint* _derivedEndpoint;

}

@property (retain) NWEndpoint * networkEndpoint;                                     //@synthesize networkEndpoint=_networkEndpoint - In the implementation block
@property (retain) NWPath * currentPath;                                             //@synthesize currentPath=_currentPath - In the implementation block
@property (retain) NWPath * connectedPath;                                           //@synthesize connectedPath=_connectedPath - In the implementation block
@property (retain) NSObject*<OS_xpc_object> details;                                 //@synthesize details=_details - In the implementation block
@property (readonly) long long poolPriority; 
@property (assign) BOOL isConnected;                                                 //@synthesize isConnected=_isConnected - In the implementation block
@property (assign,nonatomic) BOOL overrideSatisfied;                                 //@synthesize overrideSatisfied=_overrideSatisfied - In the implementation block
@property (assign) BOOL attemptedAndFailed;                                          //@synthesize attemptedAndFailed=_attemptedAndFailed - In the implementation block
@property (retain) NETOnDemandJob * onDemandJob; 
@property (retain) NWEndpoint * connectedEndpoint;                                   //@synthesize connectedEndpoint=_connectedEndpoint - In the implementation block
@property (retain) NWParameters * connectedParameters;                               //@synthesize connectedParameters=_connectedParameters - In the implementation block
@property (assign) unsigned long long start;                                         //@synthesize start=_start - In the implementation block
@property (retain) NSSet * inactiveAgentUUIDs;                                       //@synthesize inactiveAgentUUIDs=_inactiveAgentUUIDs - In the implementation block
@property (retain) NSSet * outstandingTriggerAgentUUIDs;                             //@synthesize outstandingTriggerAgentUUIDs=_outstandingTriggerAgentUUIDs - In the implementation block
@property (retain) NSMutableSet * updatedTriggerAgentUUIDs;                          //@synthesize updatedTriggerAgentUUIDs=_updatedTriggerAgentUUIDs - In the implementation block
@property (retain) NWAddressEndpoint * reportedAddress;                              //@synthesize reportedAddress=_reportedAddress - In the implementation block
@property (retain) NSSet * pendingTriggerAgentUUIDs;                                 //@synthesize pendingTriggerAgentUUIDs=_pendingTriggerAgentUUIDs - In the implementation block
@property (retain) NSMutableSet * receivedTriggerAgentUUIDs;                         //@synthesize receivedTriggerAgentUUIDs=_receivedTriggerAgentUUIDs - In the implementation block
@property (retain) NSObject*<OS_xpc_object> pendingTriggerAgentMessage;              //@synthesize pendingTriggerAgentMessage=_pendingTriggerAgentMessage - In the implementation block
@property (assign) BOOL pendingTriggerAgentRestartOnSuccess;                         //@synthesize pendingTriggerAgentRestartOnSuccess=_pendingTriggerAgentRestartOnSuccess - In the implementation block
@property (assign) unsigned pendingTriggerAgentIFIndex;                              //@synthesize pendingTriggerAgentIFIndex=_pendingTriggerAgentIFIndex - In the implementation block
@property (assign) BOOL pendingTriggerAgentShouldSendMessage;                        //@synthesize pendingTriggerAgentShouldSendMessage=_pendingTriggerAgentShouldSendMessage - In the implementation block
@property (readonly) NSString * effectiveBundleID; 
@property (readonly) NSString * dnsName; 
@property (assign) unsigned long long duetLastQueryTime;                             //@synthesize duetLastQueryTime=_duetLastQueryTime - In the implementation block
@property (retain) NETProxyLookup * proxyLookup;                                     //@synthesize proxyLookup=_proxyLookup - In the implementation block
@property (retain) NETDuetGate * duetGate;                                           //@synthesize duetGate=_duetGate - In the implementation block
@property (assign,nonatomic) unsigned sleepAssertionOutstanding;                     //@synthesize sleepAssertionOutstanding=_sleepAssertionOutstanding - In the implementation block
@property (assign,nonatomic) BOOL isCellularFallback;                                //@synthesize isCellularFallback=_isCellularFallback - In the implementation block
@property (assign,nonatomic) BOOL isLoopback;                                        //@synthesize isLoopback=_isLoopback - In the implementation block
@property (assign,nonatomic) BOOL isIPv6LinkLocal;                                   //@synthesize isIPv6LinkLocal=_isIPv6LinkLocal - In the implementation block
@property (assign,nonatomic) BOOL isPush;                                            //@synthesize isPush=_isPush - In the implementation block
@property (assign,nonatomic) BOOL isWaldo;                                           //@synthesize isWaldo=_isWaldo - In the implementation block
@property (assign,nonatomic) BOOL isCellFallbackWhitelisted;                         //@synthesize isCellFallbackWhitelisted=_isCellFallbackWhitelisted - In the implementation block
@property (assign,nonatomic) BOOL isDNS;                                             //@synthesize isDNS=_isDNS - In the implementation block
@property (assign,nonatomic) BOOL wifiInUse;                                         //@synthesize wifiInUse=_wifiInUse - In the implementation block
@property (assign,nonatomic) BOOL mptcpCellAttempted;                                //@synthesize mptcpCellAttempted=_mptcpCellAttempted - In the implementation block
@property (assign,nonatomic) BOOL watchingNetworkEvents;                             //@synthesize watchingNetworkEvents=_watchingNetworkEvents - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> ccTimer;                            //@synthesize ccTimer=_ccTimer - In the implementation block
@property (assign) unsigned long long connectReportTime;                             //@synthesize connectReportTime=_connectReportTime - In the implementation block
@property (retain) NSObject*<OS_tcp_connection> tcpConnection;                       //@synthesize tcpConnection=_tcpConnection - In the implementation block
@property (assign) unsigned tcpConnectResult;                                        //@synthesize tcpConnectResult=_tcpConnectResult - In the implementation block
@property (assign) unsigned long long previousPathHash;                              //@synthesize previousPathHash=_previousPathHash - In the implementation block
@property (assign) unsigned long long pathSentTimestamp;                             //@synthesize pathSentTimestamp=_pathSentTimestamp - In the implementation block
@property (assign) unsigned evaluateOutstanding;                                     //@synthesize evaluateOutstanding=_evaluateOutstanding - In the implementation block
@property (assign) unsigned attemptOutstanding;                                      //@synthesize attemptOutstanding=_attemptOutstanding - In the implementation block
@property (assign) int lastAttemptError;                                             //@synthesize lastAttemptError=_lastAttemptError - In the implementation block
@property (retain) NETConnectionPool * connectionPool;                               //@synthesize connectionPool=_connectionPool - In the implementation block
@property (retain) NETLedBellyClient * ledBellyClient;                               //@synthesize ledBellyClient=_ledBellyClient - In the implementation block
@property (assign) BOOL crazyIvan46Started;                                          //@synthesize crazyIvan46Started=_crazyIvan46Started - In the implementation block
@property (retain) NWEndpoint * derivedEndpoint;                                     //@synthesize derivedEndpoint=_derivedEndpoint - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) int pid; 
@property (readonly) unsigned long long cid; 
@property (nonatomic,readonly) const char* name; 
+(void)handleChange:(const char*)arg1 line:(int)arg2 ;
+(void)forEach:(/*^block*/id)arg1 ;
+(BOOL)fetchAndResetNetworkdConnectionStats:(netcore_stats_networkd_report*)arg1 ;
-(void)destroy:(BOOL)arg1 ;
-(void)handleAgentChange:(id)arg1 ;
-(void)handlePowerChange;
-(void)handleDataProtectionChange;
-(void)handleInterestingFallbackNetworkEvent:(unsigned)arg1 ;
-(void)handleNetworkQualityChange:(id)arg1 ;
-(unsigned long long)cid;
-(void)switchToClient:(id)arg1 withID:(unsigned long long)arg2 ;
-(id)initWithParameters:(id)arg1 networkEndpoint:(id)arg2 path:(id)arg3 state:(id)arg4 client:(id)arg5 endpointID:(unsigned long long)arg6 start:(unsigned long long)arg7 ;
-(NWEndpoint *)networkEndpoint;
-(NSObject*<OS_tcp_connection>)tcpConnection;
-(void)setOnDemandJob:(NETOnDemandJob *)arg1 ;
-(void)handleMessage:(id)arg1 ofType:(unsigned long long)arg2 ;
-(void)ledBellyStateChanged:(id)arg1 ;
-(void)proxyLookupComplete:(id)arg1 ;
-(void)handleProxyChange;
-(void)setIsDNS:(BOOL)arg1 ;
-(NSObject*<OS_xpc_object>)pendingTriggerAgentMessage;
-(BOOL)pendingTriggerAgentShouldSendMessage;
-(NSSet *)pendingTriggerAgentUUIDs;
-(NSMutableSet *)receivedTriggerAgentUUIDs;
-(BOOL)pendingTriggerAgentRestartOnSuccess;
-(unsigned)pendingTriggerAgentIFIndex;
-(void)setPendingTriggerAgentMessage:(NSObject*<OS_xpc_object>)arg1 ;
-(void)setPendingTriggerAgentUUIDs:(NSSet *)arg1 ;
-(void)setReceivedTriggerAgentUUIDs:(NSMutableSet *)arg1 ;
-(void)setPendingTriggerAgentShouldSendMessage:(BOOL)arg1 ;
-(void)setPendingTriggerAgentIFIndex:(unsigned)arg1 ;
-(void)setPendingTriggerAgentRestartOnSuccess:(BOOL)arg1 ;
-(BOOL)startNetworkAgentsForEndpoint:(id)arg1 message:(id)arg2 sendRestartOnSuccess:(BOOL)arg3 resetCurrentPath:(BOOL)arg4 ;
-(NWAddressEndpoint *)reportedAddress;
-(NSObject*<OS_dispatch_source>)ccTimer;
-(void)setCcTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(unsigned)sleepAssertionOutstanding;
-(void)setSleepAssertionOutstanding:(unsigned)arg1 ;
-(void)decrementSleepAssertion;
-(NETLedBellyClient *)ledBellyClient;
-(void)setLedBellyClient:(NETLedBellyClient *)arg1 ;
-(void)setLastAttemptError:(int)arg1 ;
-(void)decrementConnectionAttemptOutstanding;
-(unsigned)evaluateOutstanding;
-(void)setEvaluateOutstanding:(unsigned)arg1 ;
-(void)incrementConnectionAttemptOutstanding;
-(unsigned long long)previousPathHash;
-(void)incrementSleepAssertion;
-(void)setPathSentTimestamp:(unsigned long long)arg1 ;
-(void)handleReachabilityReply:(id)arg1 decrementSleepAssert:(BOOL)arg2 ;
-(void)setPreviousPathHash:(unsigned long long)arg1 ;
-(void)sendPendingAgentMessage;
-(unsigned)attemptOutstanding;
-(void)setAttemptOutstanding:(unsigned)arg1 ;
-(void)setAttemptedAndFailed:(BOOL)arg1 ;
-(BOOL)attemptedAndFailed;
-(int)lastAttemptError;
-(void)handleAgentChangeForPendingMessage:(id)arg1 ;
-(NSSet *)outstandingTriggerAgentUUIDs;
-(NSMutableSet *)updatedTriggerAgentUUIDs;
-(NSSet *)inactiveAgentUUIDs;
-(void)incrementEvaluateOutstanding;
-(void)setInactiveAgentUUIDs:(NSSet *)arg1 ;
-(void)setOutstandingTriggerAgentUUIDs:(NSSet *)arg1 ;
-(void)setUpdatedTriggerAgentUUIDs:(NSMutableSet *)arg1 ;
-(void)decrementEvaluateOutstanding;
-(BOOL)crazyIvan46Started;
-(void)evaluatePath;
-(void)setCrazyIvan46Started:(BOOL)arg1 ;
-(void)evaluateNetworkPath;
-(void)evaluatePathMultipath;
-(void)evaluateCrazyIvan46;
-(void)evaluatePathConnectionPool;
-(NWEndpoint *)connectedEndpoint;
-(NWParameters *)connectedParameters;
-(void)setConnectedPath:(NWPath *)arg1 ;
-(void)setMptcpCellAttempted:(BOOL)arg1 ;
-(BOOL)mptcpCellAttempted;
-(id)createDataUsageSnapshotFromStruct:(const netcore_stats_data_usage_snapshot*)arg1 ;
-(id)createStatisticsReportFromStruct:(const netcore_stats_tcp_statistics_report*)arg1 ;
-(id)createFallbackReportFromStruct:(const netcore_stats_tcp_cell_fallback_report*)arg1 ;
-(void)reportAWDForConnectionStats:(const netcore_stats_tcp_report*)arg1 ;
-(void)reportAWDStatsForMPTCP:(id)arg1 ;
-(void)setConnectReportTime:(unsigned long long)arg1 ;
-(id)networkSignatureForInterface:(unsigned)arg1 ;
-(void)filloutNetworkObjectsWithEndpointDictionary:(id)arg1 parametersDictionary:(id)arg2 ;
-(id)scrubParametersForEntitlements:(id)arg1 ;
-(BOOL)voluntaryAgentsMatchAddress;
-(BOOL)startNetworkAgentsForMessage:(id)arg1 sendRestartOnSuccess:(BOOL)arg2 ;
-(void)cancelConditionalConnectionEvents;
-(void)setConnectedEndpoint:(NWEndpoint *)arg1 ;
-(void)setConnectedParameters:(NWParameters *)arg1 ;
-(void)setIsLoopback:(BOOL)arg1 ;
-(void)setIsIPv6LinkLocal:(BOOL)arg1 ;
-(BOOL)isWaldo;
-(BOOL)isCellFallbackWhitelisted;
-(void)setIsCellularFallback:(BOOL)arg1 ;
-(NETOnDemandJob *)onDemandJob;
-(void)resetProxyLookup:(BOOL)arg1 ;
-(void)evaluateConnectedPath;
-(void)evaluateLedBellyConnected;
-(BOOL)wifiInUse;
-(void)setWifiInUse:(BOOL)arg1 ;
-(void)evaluateEstablishedMultipath;
-(id)copyMatchingMultipathInterfaces;
-(void)handleConnectionStatsReport:(id)arg1 ;
-(void)handleWatchNetworkEvents:(id)arg1 ;
-(void)handleMPTCPStatsReport:(id)arg1 ;
-(void)handleMPTCPFailureReport:(id)arg1 ;
-(void)handleMPTCPResuming:(id)arg1 ;
-(void)handleMPTCPToTCPFallback:(id)arg1 ;
-(void)handleUpdate:(id)arg1 ;
-(void)handleConnectFail:(id)arg1 ;
-(void)handleDNSFail:(const char*)arg1 request:(id)arg2 ;
-(void)handleConnectReport:(id)arg1 ;
-(void)handleDestinationFallback:(id)arg1 ;
-(void)handleMessageForLedbellyFd:(id)arg1 ;
-(void)handleConnectionRetry:(id)arg1 ;
-(void)setNetworkEndpoint:(NWEndpoint *)arg1 ;
-(void)setIsPush:(BOOL)arg1 ;
-(void)setIsCellFallbackWhitelisted:(BOOL)arg1 ;
-(void)setIsWaldo:(BOOL)arg1 ;
-(void)setupConditionalConnectionEvents;
-(void)setConnectionPool:(NETConnectionPool *)arg1 ;
-(void)setDuetGate:(NETDuetGate *)arg1 ;
-(NETDuetGate *)duetGate;
-(NETProxyLookup *)proxyLookup;
-(void)setProxyLookup:(NETProxyLookup *)arg1 ;
-(unsigned long long)pathSentTimestamp;
-(BOOL)isCellularFallback;
-(void)duetGateChanged:(id)arg1 ;
-(BOOL)expensiveProhibited;
-(void)setOverrideSatisfied:(BOOL)arg1 ;
-(BOOL)needsLaunchOnDemand;
-(BOOL)overrideSatisfied;
-(void)setReportedAddress:(NWAddressEndpoint *)arg1 ;
-(unsigned long long)duetLastQueryTime;
-(void)setDuetLastQueryTime:(unsigned long long)arg1 ;
-(BOOL)isLoopback;
-(BOOL)isIPv6LinkLocal;
-(BOOL)isPush;
-(BOOL)isDNS;
-(BOOL)watchingNetworkEvents;
-(void)setWatchingNetworkEvents:(BOOL)arg1 ;
-(unsigned long long)connectReportTime;
-(void)setTcpConnection:(NSObject*<OS_tcp_connection>)arg1 ;
-(unsigned)tcpConnectResult;
-(void)setTcpConnectResult:(unsigned)arg1 ;
-(void)dealloc;
-(id)init;
-(NSString *)description;
-(const char*)name;
-(unsigned long long)start;
-(void)setStart:(unsigned long long)arg1 ;
-(const char*)processName;
-(void)resume;
-(NWPath *)currentPath;
-(void)setCurrentPath:(NWPath *)arg1 ;
-(NSObject*<OS_xpc_object>)details;
-(void)setDetails:(NSObject*<OS_xpc_object>)arg1 ;
-(NETConnectionPool *)connectionPool;
-(int)pid;
-(unsigned long long)helperClientID;
-(int)helperClientPID;
-(NWPath *)connectedPath;
-(void)setDerivedEndpoint:(NWEndpoint *)arg1 ;
-(NWEndpoint *)derivedEndpoint;
-(long long)poolPriority;
-(NSString *)effectiveBundleID;
-(void)evaluate;
-(void)setIsConnected:(BOOL)arg1 ;
-(NSString *)dnsName;
-(BOOL)isConnected;
@end

