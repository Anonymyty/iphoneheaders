/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:11 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/gamed
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <gamed/GKDataWriter.h>

@protocol OS_dispatch_queue, GKDatabaseWriter, GKDatabaseReader, GKDataWriter;
@class NSObject, NSSet, NSString;

@interface GKDelayedRequestWriter : NSObject <GKDataWriter> {

	BOOL _shouldWaitForNetworkError;
	NSObject*<OS_dispatch_queue> _operationQueue;
	NSSet* _resourcesPending;
	id<GKDatabaseWriter> _cacheWriter;
	id<GKDatabaseReader> _cacheReader;
	id<GKDataWriter> _networkWriter;
	double _intervalInSeconds;

}

@property (assign) BOOL shouldWaitForNetworkError;                                     //@synthesize shouldWaitForNetworkError=_shouldWaitForNetworkError - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> operationQueue;              //@synthesize operationQueue=_operationQueue - In the implementation block
@property (retain) NSSet * resourcesPending;                                           //@synthesize resourcesPending=_resourcesPending - In the implementation block
@property (nonatomic,retain) id<GKDatabaseWriter> cacheWriter;                         //@synthesize cacheWriter=_cacheWriter - In the implementation block
@property (nonatomic,retain) id<GKDatabaseReader> cacheReader;                         //@synthesize cacheReader=_cacheReader - In the implementation block
@property (nonatomic,retain) id<GKDataWriter> networkWriter;                           //@synthesize networkWriter=_networkWriter - In the implementation block
@property (assign,nonatomic) double intervalInSeconds;                                 //@synthesize intervalInSeconds=_intervalInSeconds - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)writerWithCacheWriter:(id)arg1 cacheReader:(id)arg2 networkWriter:(id)arg3 batchSubmissionInterval:(double)arg4 ;
-(void)writeResources:(id)arg1 handler:(/*^block*/id)arg2 ;
-(id)initWithCacheWriter:(id)arg1 cacheReader:(id)arg2 networkWriter:(id)arg3 batchSubmissionInterval:(double)arg4 ;
-(void)setCacheWriter:(id<GKDatabaseWriter>)arg1 ;
-(void)setCacheReader:(id<GKDatabaseReader>)arg1 ;
-(void)setNetworkWriter:(id<GKDataWriter>)arg1 ;
-(void)readAndSubmitDelayedRequestsOfResources:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)deleteSubmittedRequestsWithIDs:(id)arg1 onConnection:(id)arg2 ;
-(BOOL)shouldWaitForNetworkError;
-(NSSet *)resourcesPending;
-(void)setResourcesPending:(NSSet *)arg1 ;
-(void)batchAndPerformInGroup:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)submitDelayedRequestsForPlayer:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)setShouldWaitForNetworkError:(BOOL)arg1 ;
-(id<GKDatabaseWriter>)cacheWriter;
-(id<GKDatabaseReader>)cacheReader;
-(id<GKDataWriter>)networkWriter;
-(double)intervalInSeconds;
-(void)setIntervalInSeconds:(double)arg1 ;
-(void)dealloc;
-(void)setOperationQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)operationQueue;
@end

