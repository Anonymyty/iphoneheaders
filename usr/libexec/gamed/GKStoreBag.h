/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:11 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/gamed
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <gamed/gamed-Structs.h>
@class NSObject, GKDispatchGroup, NSURL, NSError, GKFairPlaySAPSession, NSSet, NSDictionary, NSDate;

@interface GKStoreBag : NSObject {

	NSObject*<OS_dispatch_queue> _syncQueue;
	GKDispatchGroup* _fetchGroup;
	int _playerIDHashMod;
	int _playerIDHashAdd;
	NSURL* _url;
	NSError* _error;
	GKFairPlaySAPSession* _SAPSession;
	NSSet* _APNSRequired;
	NSSet* _signatureRequired;
	NSSet* _responseSignatureRequired;
	NSDictionary* _internalBag;
	NSDate* _expiration;

}

@property (nonatomic,retain) NSURL * url;                                           //@synthesize url=_url - In the implementation block
@property (nonatomic,retain) NSError * error;                                       //@synthesize error=_error - In the implementation block
@property (setter=APSession,retain) GKFairPlaySAPSession * SAPSession;              //@synthesize SAPSession=_SAPSession - In the implementation block
@property (retain) NSSet * APNSRequired;                                            //@synthesize APNSRequired=_APNSRequired - In the implementation block
@property (retain) NSSet * signatureRequired;                                       //@synthesize signatureRequired=_signatureRequired - In the implementation block
@property (retain) NSSet * responseSignatureRequired;                               //@synthesize responseSignatureRequired=_responseSignatureRequired - In the implementation block
@property (nonatomic,retain) NSDictionary * internalBag;                            //@synthesize internalBag=_internalBag - In the implementation block
@property (nonatomic,retain) NSDate * expiration;                                   //@synthesize expiration=_expiration - In the implementation block
+(id)storeBagForEnvironment:(long long)arg1 ;
+(id)storeBagURLForEnvironment:(long long)arg1 ;
+(id)storeBagForURL:(id)arg1 ;
-(void)readDataForBagKey:(id)arg1 method:(id)arg2 postData:(id)arg3 client:(id)arg4 credential:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)getValuesForKeys:(id)arg1 queue:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)writeDataForBagKey:(id)arg1 postData:(id)arg2 client:(id)arg3 credential:(id)arg4 completion:(/*^block*/id)arg5 ;
-(BOOL)_isLastProtocolVersionUsedValid;
-(id)_storeBagForData:(id)arg1 error:(id*)arg2 ;
-(void)_setupSAPSessionWithRetries:(id)arg1 ;
-(void)_setupAPNSRequired:(id)arg1 ;
-(void)_setupSignatureRequired:(id)arg1 ;
-(void)_setupResponseSignatureRequired:(id)arg1 ;
-(NSDictionary *)internalBag;
-(void)setInternalBag:(NSDictionary *)arg1 ;
-(void)_updatePlayerIDHashParameters;
-(void)_fetchFromServerWithHandler:(/*^block*/id)arg1 ;
-(BOOL)_isValidAndNotExpired;
-(void)_fetchFromCacheWithHandler:(/*^block*/id)arg1 ;
-(void)updateURLPatternCache;
-(void)_fetchBagWithHandler:(/*^block*/id)arg1 ;
-(void)setAPNSRequired:(NSSet *)arg1 ;
-(void)setSignatureRequired:(NSSet *)arg1 ;
-(void)setResponseSignatureRequired:(NSSet *)arg1 ;
-(void)getBagWithHandler:(/*^block*/id)arg1 ;
-(BOOL)_shouldUseHTTPPipelining;
-(long long)_achievementsThrottleThreshold;
-(long long)_scoresThrottleThreshold;
-(SecTrustRef)_createTrustForCertificates:(id)arg1 host:(id)arg2 ;
-(BOOL)_checkData:(id)arg1 againstSignature:(id)arg2 withTrust:(SecTrustRef)arg3 ;
-(void)_setupSAPSession:(id)arg1 group:(id)arg2 retries:(long long)arg3 ;
-(void)readDataForURL:(id)arg1 postData:(id)arg2 client:(id)arg3 credential:(id)arg4 includeUDID:(BOOL)arg5 includeAPNS:(BOOL)arg6 completion:(/*^block*/id)arg7 ;
-(void)_sendOneAsyncTryWithRequest:(id)arg1 responseMustBeSigned:(BOOL)arg2 session:(id)arg3 retryCount:(int)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)_bagKeyValidationDict;
-(id)_requestWithURL:(id)arg1 method:(id)arg2 playerID:(id)arg3 authToken:(id)arg4 pushToken:(id)arg5 client:(id)arg6 postData:(id)arg7 includeUDID:(BOOL)arg8 includeAPNS:(BOOL)arg9 sapSession:(id)arg10 ;
-(void)_sendAsynchronousRequest:(id)arg1 responseMustBeSigned:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)getURLForKey:(id)arg1 queue:(id)arg2 handler:(/*^block*/id)arg3 ;
-(BOOL)isLoadValidForBagKey:(id)arg1 date:(id)arg2 ;
-(id)_networkSynchonizationQueue;
-(void)_loadDataForBagKey:(id)arg1 method:(id)arg2 postData:(id)arg3 client:(id)arg4 credential:(id)arg5 completion:(/*^block*/id)arg6 ;
-(BOOL)_isFetching;
-(id)omnitureQueryParametersForContext:(id)arg1 ;
-(BOOL)shouldUseHTTPPipelining;
-(long long)achievementsThrottleThreshold;
-(long long)scoresThrottleThreshold;
-(void)invalidateBagKeys:(id)arg1 ;
-(NSSet *)APNSRequired;
-(NSSet *)signatureRequired;
-(NSSet *)responseSignatureRequired;
-(BOOL)_isExpired;
-(void)dealloc;
-(id)description;
-(NSURL *)url;
-(BOOL)_isValid;
-(void)setUrl:(NSURL *)arg1 ;
-(id)initWithURL:(id)arg1 ;
-(id)valueForUndefinedKey:(id)arg1 ;
-(void)performAsync:(/*^block*/id)arg1 ;
-(void)setSAPSession:(GKFairPlaySAPSession *)arg1 ;
-(void)setError:(NSError *)arg1 ;
-(NSError *)error;
-(int)hashForPlayerID:(id)arg1 ;
-(void)performSync:(/*^block*/id)arg1 ;
-(GKFairPlaySAPSession *)SAPSession;
-(void)setExpiration:(NSDate *)arg1 ;
-(NSDate *)expiration;
@end

