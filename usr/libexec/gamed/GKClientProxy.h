/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:13 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/gamed
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <gamed/GKClientProtocol.h>
#import <gamed/_GKStateMachineDelegate.h>

@protocol GKUIViewService, OS_dispatch_queue;
@class NSObject, NSXPCConnection, GKEntitlements, NSNumber, NSString, NSDate, GKGameInternal, GKEventTuple, GKQuickAction, GKInviteSession, GKMatchResponse, _GKStateMachine, GKThreadsafeDictionary, GKDatabaseConnection, GKResourceManager, NSMutableSet, NSMapTable, NSDictionary, NSLocale;

@interface GKClientProxy : NSObject <GKClientProtocol, _GKStateMachineDelegate> {

	BOOL _deniedProductionEnvironment;
	BOOL _productionSigned;
	BOOL _installed;
	BOOL _supportsMultipleActivePlayers;
	unsigned char _achievementsRateLimitedCurrentState;
	unsigned char _scoresRateLimitedCurrentState;
	BOOL _initialized;
	int _pid;
	unsigned _applicationState;
	unsigned _previousApplicationState;
	GKClientProxy*<GKUIViewService> _weakViewService;
	NSObject*<OS_dispatch_queue> _replyQueue;
	NSObject*<OS_dispatch_queue> _authQueue;
	NSXPCConnection* _connection;
	GKEntitlements* _entitlements;
	NSNumber* _adamID;
	NSNumber* _externalVersion;
	NSString* _bundleIdentifier;
	NSString* _bundleVersion;
	NSString* _bundleShortVersion;
	long long _environment;
	NSDate* _achievementsRateLimitingStartDate;
	long long _achievementsRateLimitingCurrentNumberOfRequests;
	NSDate* _scoresRateLimitingStartDate;
	long long _scoresRateLimitingCurrentNumberOfRequests;
	NSString* _language;
	GKGameInternal* _currentGame;
	GKEventTuple* _launchEvent;
	GKQuickAction* _pendingQuickAction;
	GKInviteSession* _inviteSession;
	GKMatchResponse* _currentMatchResponse;
	_GKStateMachine* _initAppStateMachine;
	GKThreadsafeDictionary* _appSessions;
	NSObject*<OS_dispatch_queue> _delayedRequestsQueue;
	GKDatabaseConnection* _delayedRequestsDBConnection;
	NSObject*<OS_dispatch_queue> _cacheQueue;
	GKResourceManager* _resourceManager;
	NSMutableSet* _pendingDataTypesForRefresh;
	NSMapTable* _extensionProxies;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain,readonly) GKResourceManager * resourceManager; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> cacheQueue; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> replyQueue;                              //@synthesize replyQueue=_replyQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> authQueue;                                 //@synthesize authQueue=_authQueue - In the implementation block
@property (assign,nonatomic) int pid;                                                                //@synthesize pid=_pid - In the implementation block
@property (assign,nonatomic) NSXPCConnection * connection;                                           //@synthesize connection=_connection - In the implementation block
@property (retain) GKEntitlements * entitlements;                                                    //@synthesize entitlements=_entitlements - In the implementation block
@property (nonatomic,retain) NSNumber * adamID;                                                      //@synthesize adamID=_adamID - In the implementation block
@property (nonatomic,retain) NSNumber * externalVersion;                                             //@synthesize externalVersion=_externalVersion - In the implementation block
@property (nonatomic,retain) NSString * bundleIdentifier;                                            //@synthesize bundleIdentifier=_bundleIdentifier - In the implementation block
@property (nonatomic,retain) NSString * bundleVersion;                                               //@synthesize bundleVersion=_bundleVersion - In the implementation block
@property (nonatomic,retain) NSString * bundleShortVersion;                                          //@synthesize bundleShortVersion=_bundleShortVersion - In the implementation block
@property (assign,nonatomic) long long environment;                                                  //@synthesize environment=_environment - In the implementation block
@property (assign,nonatomic) BOOL deniedProductionEnvironment;                                       //@synthesize deniedProductionEnvironment=_deniedProductionEnvironment - In the implementation block
@property (assign,nonatomic) BOOL productionSigned;                                                  //@synthesize productionSigned=_productionSigned - In the implementation block
@property (assign,nonatomic) BOOL installed;                                                         //@synthesize installed=_installed - In the implementation block
@property (assign,nonatomic) BOOL supportsMultipleActivePlayers;                                     //@synthesize supportsMultipleActivePlayers=_supportsMultipleActivePlayers - In the implementation block
@property (nonatomic,retain) NSDate * achievementsRateLimitingStartDate;                             //@synthesize achievementsRateLimitingStartDate=_achievementsRateLimitingStartDate - In the implementation block
@property (assign,nonatomic) long long achievementsRateLimitingCurrentNumberOfRequests;              //@synthesize achievementsRateLimitingCurrentNumberOfRequests=_achievementsRateLimitingCurrentNumberOfRequests - In the implementation block
@property (assign,nonatomic) unsigned char achievementsRateLimitedCurrentState;                      //@synthesize achievementsRateLimitedCurrentState=_achievementsRateLimitedCurrentState - In the implementation block
@property (nonatomic,retain) NSDate * scoresRateLimitingStartDate;                                   //@synthesize scoresRateLimitingStartDate=_scoresRateLimitingStartDate - In the implementation block
@property (assign,nonatomic) long long scoresRateLimitingCurrentNumberOfRequests;                    //@synthesize scoresRateLimitingCurrentNumberOfRequests=_scoresRateLimitingCurrentNumberOfRequests - In the implementation block
@property (assign,nonatomic) unsigned char scoresRateLimitedCurrentState;                            //@synthesize scoresRateLimitedCurrentState=_scoresRateLimitedCurrentState - In the implementation block
@property (nonatomic,readonly) NSDictionary * gameDescriptor; 
@property (nonatomic,retain) NSString * language;                                                    //@synthesize language=_language - In the implementation block
@property (nonatomic,readonly) NSLocale * locale; 
@property (assign,nonatomic) GKClientProxy*<GKUIViewService> viewService;                            //@synthesize weakViewService=_weakViewService - In the implementation block
@property (nonatomic,retain) GKGameInternal * currentGame;                                           //@synthesize currentGame=_currentGame - In the implementation block
@property (assign) unsigned applicationState;                                                        //@synthesize applicationState=_applicationState - In the implementation block
@property (assign) unsigned previousApplicationState;                                                //@synthesize previousApplicationState=_previousApplicationState - In the implementation block
@property (nonatomic,retain) GKEventTuple * launchEvent;                                             //@synthesize launchEvent=_launchEvent - In the implementation block
@property (nonatomic,retain) GKQuickAction * pendingQuickAction;                                     //@synthesize pendingQuickAction=_pendingQuickAction - In the implementation block
@property (retain) GKInviteSession * inviteSession;                                                  //@synthesize inviteSession=_inviteSession - In the implementation block
@property (retain) GKMatchResponse * currentMatchResponse;                                           //@synthesize currentMatchResponse=_currentMatchResponse - In the implementation block
@property (assign) BOOL initialized;                                                                 //@synthesize initialized=_initialized - In the implementation block
@property (retain) _GKStateMachine * initAppStateMachine;                                            //@synthesize initAppStateMachine=_initAppStateMachine - In the implementation block
@property (nonatomic,retain) GKThreadsafeDictionary * appSessions;                                   //@synthesize appSessions=_appSessions - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> delayedRequestsQueue;                      //@synthesize delayedRequestsQueue=_delayedRequestsQueue - In the implementation block
@property (nonatomic,retain) GKDatabaseConnection * delayedRequestsDBConnection;                     //@synthesize delayedRequestsDBConnection=_delayedRequestsDBConnection - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> cacheQueue;                                //@synthesize cacheQueue=_cacheQueue - In the implementation block
@property (nonatomic,retain) GKResourceManager * resourceManager;                                    //@synthesize resourceManager=_resourceManager - In the implementation block
@property (nonatomic,retain) NSMutableSet * pendingDataTypesForRefresh;                              //@synthesize pendingDataTypesForRefresh=_pendingDataTypesForRefresh - In the implementation block
@property (nonatomic,retain) NSMapTable * extensionProxies;                                          //@synthesize extensionProxies=_extensionProxies - In the implementation block
+(void)performDelayedRequestsForEnvironment:(long long)arg1 ;
+(id)storeAndForwardDirectoryPathForEnvironment:(long long)arg1 ;
+(void)saveAppInitState:(id)arg1 forBundleID:(id)arg2 pid:(int)arg3 ;
+(id)lastKnownAppInitStateForClientWithBundleID:(id)arg1 pid:(int)arg2 ;
+(void)authenticationDidChange;
+(id)gameCenterClient;
+(id)clientForBundleID:(id)arg1 ;
+(id)clientForInviteSessionToken:(id)arg1 ;
+(id)clientForProcessIdentifier:(int)arg1 ;
+(id)clientForBundleID:(id)arg1 pid:(int)arg2 createIfNecessary:(BOOL)arg3 ;
+(id)foregroundClient;
+(id)clientForBundleID:(id)arg1 bundle:(id)arg2 pid:(int)arg3 createIfNecessary:(BOOL)arg4 ;
+(id)factoryQueue;
+(id)_clientLookup;
+(BOOL)isExtensionBundleID:(id)arg1 ;
+(id)clientsToBeEnumerated;
+(id)clientForMatchmakingRID:(id)arg1 ;
+(void)removeClient:(id)arg1 ;
+(void)enumerateClientsUsingBlock:(/*^block*/id)arg1 ;
+(void)removeAllCaches;
+(id)contextKeyForPlayer:(id)arg1 ;
+(id)newManagedObjectContextForClient:(id)arg1 player:(id)arg2 ;
+(id)cacheFileQueue;
+(id)cacheDirectoryForBundleID:(id)arg1 environment:(long long)arg2 ;
+(id)cacheDirectoryURLForClient:(id)arg1 player:(id)arg2 ;
+(id)cacheFileURLForClient:(id)arg1 player:(id)arg2 ;
+(id)_newManagedObjectContextForPlayer:(id)arg1 ;
+(void)removeCacheForPlayer:(id)arg1 ;
+(id)managedObjectModel;
+(id)syncQueue;
-(void)performDelayedRequestsForEnvironment:(long long)arg1 ;
-(id)issueFriendRequestsWriterWithCredential:(id)arg1 ;
-(id)acceptFriendRequestsWriterWithCredential:(id)arg1 ;
-(id)rejectFriendRequestsWriterWithCredential:(id)arg1 ;
-(id)removeFriendWriterWithCredential:(id)arg1 ;
-(id)storeAndForwardDirectoryPathForEnvironment:(long long)arg1 ;
-(id)requestsCacheForEnvironment:(long long)arg1 ;
-(void)_setupDelayedRequestsWriters;
-(id)_delayedRequestWriterWithCacheWriterClass:(Class)arg1 cacheReaderClass:(Class)arg2 networkWriterClass:(Class)arg3 bagKey:(id)arg4 batchSubmissionInterval:(long long)arg5 credential:(id)arg6 ;
-(id)submitAchievementsWriterWithCredential:(id)arg1 ;
-(id)submitScoresWriterWithCredential:(id)arg1 ;
-(void)performDelayedRequestsForCredential:(id)arg1 ;
-(id)issueChallengesWriterWithCredential:(id)arg1 ;
-(id)abortChallengesWriterWithCredential:(id)arg1 ;
-(id)setPlayerStatusWriterWithCredential:(id)arg1 ;
-(id)setPlayerPhotoWriterWithCredential:(id)arg1 ;
-(id)deletePlayerPhotoWriterWithCredential:(id)arg1 ;
-(id)submitRatingsWriterWithCredential:(id)arg1 ;
-(id)removeGameWriterWithCredential:(id)arg1 ;
-(void)_removeDelayedRequestStore;
-(void)performPassThroughAchievementRequestsForEnvironment:(long long)arg1 ;
-(void)performPassThroughScoreRequestsForEnvironment:(long long)arg1 ;
-(void)terminateWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)backgroundWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)appSessionForPlayer:(id)arg1 ;
-(void)addAppSession:(id)arg1 forCredential:(id)arg2 ;
-(oneway void)refreshPendingDataTypes;
-(void)removeAppSessionForPlayer:(id)arg1 ;
-(void)initializeWithCredential:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)bgInitializeWithCredential:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(oneway void)cancelGameInvite:(id)arg1 ;
-(oneway void)relayPushNotification:(id)arg1 ;
-(oneway void)refreshContentsForDataType:(unsigned)arg1 userInfo:(id)arg2 ;
-(oneway void)beginNetworkActivity;
-(oneway void)endNetworkActivity;
-(oneway void)resetNetworkActivity;
-(oneway void)friendRequestSelected:(id)arg1 ;
-(oneway void)receivedChallengeSelected:(id)arg1 ;
-(oneway void)completedChallengeSelected:(id)arg1 ;
-(oneway void)challengeReceived:(id)arg1 ;
-(oneway void)challengeCompleted:(id)arg1 ;
-(oneway void)setBadgeCount:(unsigned long long)arg1 forType:(unsigned long long)arg2 ;
-(oneway void)setPreferencesValues:(id)arg1 ;
-(oneway void)setCurrentGame:(id)arg1 serverEnvironment:(long long)arg2 reply:(/*^block*/id)arg3 ;
-(oneway void)authenticatedPlayersDidChange:(id)arg1 reply:(/*^block*/id)arg2 ;
-(oneway void)completedOptimisticAuthenticationWithResponse:(id)arg1 error:(id)arg2 ;
-(oneway void)respondedToNearbyInvite:(id)arg1 ;
-(oneway void)acceptMultiplayerGameInvite;
-(oneway void)acceptInviteWithNotification:(id)arg1 ;
-(oneway void)declineInviteWithNotification:(id)arg1 ;
-(oneway void)fetchTurnBasedData;
-(oneway void)scoreSelected:(id)arg1 ;
-(oneway void)achievementSelected:(id)arg1 ;
-(oneway void)setLogBits:(int)arg1 ;
-(void)didEnterForeground;
-(id)verifyAuthorized;
-(id)appInitState;
-(BOOL)setAppInitState:(id)arg1 ;
-(void)updateAppInitState;
-(void)sendAuthenticationDidChangeNotificationWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)stateDidChange;
-(id)missingTransitionFromState:(id)arg1 toState:(id)arg2 ;
-(oneway void)getServicesWithTransport:(id)arg1 forClient:(id)arg2 reply:(/*^block*/id)arg3 ;
-(oneway void)getPrivateServicesWithTransport:(id)arg1 forClient:(id)arg2 reply:(/*^block*/id)arg3 ;
-(id)serviceForClass:(Class)arg1 transport:(id)arg2 client:(id)arg3 credential:(id)arg4 ;
-(oneway void)setHostPID:(int)arg1 reply:(/*^block*/id)arg2 ;
-(oneway void)getAuthenticatedPlayerIDWithHandler:(/*^block*/id)arg1 ;
-(oneway void)getAccountNameWithHandler:(/*^block*/id)arg1 ;
-(oneway void)getAuthenticatedPlayerInfo:(/*^block*/id)arg1 ;
-(oneway void)getAuthenticatedLocalPlayersWithStatus:(unsigned long long)arg1 handler:(/*^block*/id)arg2 ;
-(oneway void)localizedMessageFromDictionary:(id)arg1 forBundleID:(id)arg2 handler:(/*^block*/id)arg3 ;
-(oneway void)loadRemoteImageDataForURL:(id)arg1 reply:(/*^block*/id)arg2 ;
-(oneway void)processQuickAction:(id)arg1 ;
-(oneway void)getServicesForPID:(int)arg1 localPlayer:(id)arg2 reply:(/*^block*/id)arg3 ;
-(oneway void)getPrivateServicesForPID:(int)arg1 localPlayer:(id)arg2 reply:(/*^block*/id)arg3 ;
-(id)transactionGroupForPlayer:(id)arg1 ;
-(void)invalidateStoreFrontDependentObjects;
-(id)_managedObjectContextForPlayer:(id)arg1 ;
-(id)_existingManagedObjectContextForPlayer:(id)arg1 ;
-(id)transactionGroupIfCacheExistsForPlayer:(id)arg1 ;
-(void)setLaunchEvent:(unsigned long long)arg1 withContext:(id)arg2 ;
-(GKInviteSession *)inviteSession;
-(void)cancelInvitationForSession:(id)arg1 playerID:(id)arg2 pushTokens:(id)arg3 handler:(/*^block*/id)arg4 ;
-(void)setInviteSession:(GKInviteSession *)arg1 ;
-(void)setDeniedProductionEnvironment:(BOOL)arg1 ;
-(void)setProductionSigned:(BOOL)arg1 ;
-(BOOL)isUIService;
-(void)setPreviousApplicationState:(unsigned)arg1 ;
-(void)resetCache:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)authQueue;
-(void)setPendingQuickAction:(GKQuickAction *)arg1 ;
-(BOOL)productionSigned;
-(id)credentialForPlayer:(id)arg1 ;
-(id)transportWithCredential:(id)arg1 ;
-(void)setExtensionProxy:(id)arg1 forBundleID:(id)arg2 ;
-(void)setAchievementsRateLimitedCurrentState:(unsigned char)arg1 ;
-(void)setAchievementsRateLimitingCurrentNumberOfRequests:(long long)arg1 ;
-(void)setScoresRateLimitedCurrentState:(unsigned char)arg1 ;
-(void)setScoresRateLimitingCurrentNumberOfRequests:(long long)arg1 ;
-(GKMatchResponse *)currentMatchResponse;
-(void)checkMatchStatus;
-(void)setResourceManager:(GKResourceManager *)arg1 ;
-(void)setInitAppStateMachine:(_GKStateMachine *)arg1 ;
-(void)initializeInitializationStateMachine;
-(BOOL)installed;
-(void)setBundleShortVersion:(NSString *)arg1 ;
-(NSMapTable *)extensionProxies;
-(GKEventTuple *)launchEvent;
-(void)setLaunchEvent:(GKEventTuple *)arg1 ;
-(BOOL)processMatchResponse:(id)arg1 ;
-(id)initWithBundleIdentifier:(id)arg1 bundleOrNil:(id)arg2 pid:(int)arg3 ;
-(void)updateIfRecentlyInstalled;
-(void)_setupCache;
-(void)setAuthQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(BOOL)deniedProductionEnvironment;
-(BOOL)supportsMultipleActivePlayers;
-(void)setSupportsMultipleActivePlayers:(BOOL)arg1 ;
-(NSDate *)achievementsRateLimitingStartDate;
-(void)setAchievementsRateLimitingStartDate:(NSDate *)arg1 ;
-(long long)achievementsRateLimitingCurrentNumberOfRequests;
-(unsigned char)achievementsRateLimitedCurrentState;
-(NSDate *)scoresRateLimitingStartDate;
-(void)setScoresRateLimitingStartDate:(NSDate *)arg1 ;
-(long long)scoresRateLimitingCurrentNumberOfRequests;
-(unsigned char)scoresRateLimitedCurrentState;
-(void)setCurrentGame:(GKGameInternal *)arg1 ;
-(unsigned)previousApplicationState;
-(GKQuickAction *)pendingQuickAction;
-(void)setCurrentMatchResponse:(GKMatchResponse *)arg1 ;
-(_GKStateMachine *)initAppStateMachine;
-(GKThreadsafeDictionary *)appSessions;
-(void)setAppSessions:(GKThreadsafeDictionary *)arg1 ;
-(NSObject*<OS_dispatch_queue>)delayedRequestsQueue;
-(void)setDelayedRequestsQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(GKDatabaseConnection *)delayedRequestsDBConnection;
-(void)setDelayedRequestsDBConnection:(GKDatabaseConnection *)arg1 ;
-(NSMutableSet *)pendingDataTypesForRefresh;
-(void)setPendingDataTypesForRefresh:(NSMutableSet *)arg1 ;
-(void)setExtensionProxies:(NSMapTable *)arg1 ;
-(GKClientProxy*<GKUIViewService>)viewService;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)description;
-(NSString *)bundleIdentifier;
-(long long)environment;
-(unsigned)applicationState;
-(NSLocale *)locale;
-(NSXPCConnection *)connection;
-(void)performAsync:(/*^block*/id)arg1 ;
-(void)setConnection:(NSXPCConnection *)arg1 ;
-(void)setEnvironment:(long long)arg1 ;
-(NSString *)language;
-(void)setLanguage:(NSString *)arg1 ;
-(void)setBundleVersion:(NSString *)arg1 ;
-(void)setBundleIdentifier:(NSString *)arg1 ;
-(NSString *)bundleVersion;
-(void)setEntitlements:(GKEntitlements *)arg1 ;
-(BOOL)initialized;
-(NSObject*<OS_dispatch_queue>)replyQueue;
-(void)setPid:(int)arg1 ;
-(int)pid;
-(void)setApplicationState:(unsigned)arg1 ;
-(NSNumber *)adamID;
-(void)setAdamID:(NSNumber *)arg1 ;
-(GKGameInternal *)currentGame;
-(NSNumber *)externalVersion;
-(NSDictionary *)gameDescriptor;
-(NSString *)bundleShortVersion;
-(void)setExternalVersion:(NSNumber *)arg1 ;
-(void)performSync:(/*^block*/id)arg1 ;
-(void)setInitialized:(BOOL)arg1 ;
-(void)setInstalled:(BOOL)arg1 ;
-(GKResourceManager *)resourceManager;
-(void)setViewService:(GKClientProxy*<GKUIViewService>)arg1 ;
-(NSObject*<OS_dispatch_queue>)cacheQueue;
-(void)setCacheQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(BOOL)isGameCenter;
-(GKEntitlements *)entitlements;
-(BOOL)isExtension;
@end

