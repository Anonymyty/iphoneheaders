/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:08 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/biometrickitd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <biometrickitd/biometrickitd-Structs.h>
@class BiometricKitXPCServer, NSString, NSDictionary, NSFileHandle, BLTimeBox, NSDate, NSException, NSDateFormatter, NSMutableString, BLTemplateList, BiometricKitIdentity, NSLock, NSMutableDictionary;

@interface BioLogBase : NSObject {

	BiometricKitXPCServer* _server;
	NSString* _rootPath;
	NSString* _logPath;
	NSString* _logFilePath;
	NSString* _lastLogMessage;
	NSDictionary* _fileAttributes;
	NSDictionary* _fileAttributesProtected;
	NSFileHandle* _logFile;
	BLTimeBox* _timeBox;
	NSDate* _logStartDate;
	NSDate* _lastStatusESDRecovery;
	NSException* _lastLogWriteException;
	NSDateFormatter* _timestampFormatter;
	NSDateFormatter* _fileNameFormatter;
	NSDateFormatter* _timeZoneFormatter;
	unsigned char _fingerStateCaptureCounter;
	NSMutableString* _imageCommentString;
	BLTemplateList* _templateList;
	BiometricKitIdentity* _lastMatchedIdentity;
	BOOL _matchForUnlock;
	BOOL _chargerConnected;
	BOOL _compact;
	unsigned long long _loggingType;
	unsigned long long _lastLogMessageRepeated;
	NSLock* _radarPromptLock;
	NSMutableDictionary* _logDetails;
	IONotificationPortRef _notificationPort;
	unsigned _mesaScanningStateNotification;
	unsigned _powerSourceNotification;
	unsigned long long _absoluteTimeOverride;

}

@property (assign) unsigned long long absoluteTimeOverride;              //@synthesize absoluteTimeOverride=_absoluteTimeOverride - In the implementation block
+(void)enableSensorStatusMessages:(BOOL)arg1 ;
+(void)updateLogger:(id*)arg1 withServerObject:(id)arg2 identities:(id)arg3 ;
-(id)initToPath:(id)arg1 withServerObject:(id)arg2 identities:(id)arg3 compactMode:(BOOL)arg4 ;
-(void)uninitializeEventSystem;
-(id)log:(id)arg1 withDetails:(id)arg2 timestamp:(unsigned long long)arg3 fromClient:(id)arg4 endingWithToken:(char*)arg5 ;
-(void)closeLogFile;
-(void)compactLog;
-(id)logNameFromDate:(id)arg1 ;
-(void)logLogStart;
-(void)logProtectedConfigurationSync:(id)arg1 fromClient:(id)arg2 ;
-(void)logCalibrationData:(id)arg1 ;
-(void)logTemplateList:(id)arg1 fromIdentities:(id)arg2 ;
-(BOOL)createNewLog;
-(void)initializeEventSystem;
-(void)synchronizeLogFile;
-(id)_log:(id)arg1 withDetails:(id)arg2 timestamp:(unsigned long long)arg3 fromClient:(id)arg4 forClients:(id)arg5 endingWithToken:(char*)arg6 checkingLogEnd:(BOOL)arg7 ;
-(void)checkLogEndWithAbsoluteTime:(unsigned long long)arg1 ;
-(void)logPowerSourceStateAsync:(BOOL)arg1 initial:(BOOL)arg2 ;
-(id)stringFromTemplateByIdentity:(id)arg1 ;
-(id)stringFromTemplateList;
-(void)logTemplateList:(id)arg1 withIdentity:(id)arg2 listingAllIdentities:(BOOL)arg3 imageMetadata:(SCD_Struct_Bi1*)arg4 ;
-(id)imageFileNameWithTimestamp:(unsigned long long)arg1 captureCounter:(unsigned)arg2 ;
-(void)logTopology:(SCD_Struct_Bi4*)arg1 ;
-(void)noteAssertionFailureWithResultCode:(int)arg1 ;
-(void)logASLDelayedWithRadarPromptOnError:(BOOL)arg1 ;
-(id)log:(id)arg1 withDetails:(id)arg2 timestamp:(unsigned long long)arg3 forClients:(id)arg4 endingWithToken:(char*)arg5 ;
-(void)logTemplateUpdate:(id)arg1 ;
-(void)logTemplateUpdateResult:(id)arg1 ;
-(void)addImageComment:(id)arg1 ;
-(void)logTemplateGraphState:(SCD_Struct_Bi7*)arg1 ;
-(void)logError:(id)arg1 withDetails:(id)arg2 status:(int)arg3 ;
-(void)promptFileRadar:(id)arg1 ;
-(void)logASLWithRadarPromptOnError:(id)arg1 ;
-(void)logCapture:(id)arg1 withTimestamp:(unsigned long long)arg2 captureCounter:(unsigned)arg3 ;
-(void)logImage:(id)arg1 withWidth:(unsigned)arg2 height:(unsigned)arg3 timestamp:(unsigned long long)arg4 captureCounter:(unsigned)arg5 ;
-(void)logStackshotWithErrorCode:(long long)arg1 ;
-(void)logTemplateListWithIdentity:(id)arg1 listingAllIdentities:(BOOL)arg2 ;
-(void)logMobileKeyBagLockStatus:(int)arg1 ;
-(void)logAsync:(id)arg1 withDetails:(id)arg2 timestamp:(unsigned long long)arg3 endingWithToken:(char*)arg4 ;
-(BOOL)chargerConnected:(BOOL*)arg1 ;
-(void)logPowerSource:(BOOL)arg1 withAbsoluteTime:(unsigned long long)arg2 async:(BOOL)arg3 ;
-(void)logCurrentTemplateList;
-(void)logStatusMessage:(int)arg1 withData:(id)arg2 timestamp:(unsigned long long)arg3 forClients:(id)arg4 ;
-(void)logTemplateListFromIdentities:(id)arg1 ;
-(void)logThermalLevel:(unsigned char)arg1 ;
-(void)logDisplayState:(BOOL)arg1 ;
-(void)logSaveTemplateListUseCache:(BOOL)arg1 ;
-(void)logSaveTemplateListError:(int)arg1 ;
-(void)logCall:(SEL)arg1 withParameters:(id)arg2 fromClient:(id)arg3 ;
-(void)logCall:(SEL)arg1 withError:(int)arg2 ;
-(void)logSensorStatus:(id)arg1 ;
-(void)logHomeButtonState:(BOOL)arg1 withTimestamp:(unsigned long long)arg2 ;
-(void)logKernelMessage:(id)arg1 ;
-(void)logDelegateRegistered:(BOOL)arg1 fromClient:(id)arg2 ;
-(void)logEnrollStartFromClient:(id)arg1 ;
-(void)logMatchStartFromClient:(id)arg1 ;
-(void)logMatchStartWithOptions:(id)arg1 fromClient:(id)arg2 ;
-(void)logFingerDetectStartWithOptions:(id)arg1 fromClient:(id)arg2 ;
-(void)logCancelFromClient:(id)arg1 ;
-(void)logUpdateIdentity:(id)arg1 fromClient:(id)arg2 ;
-(void)logRemoveIdentity:(id)arg1 fromClient:(id)arg2 ;
-(void)logGetIdentityFromUUID:(id)arg1 fromClient:(id)arg2 ;
-(void)logGetIdentities:(id)arg1 fromClient:(id)arg2 ;
-(void)logGetMaxIdentityCount:(int)arg1 fromClient:(id)arg2 ;
-(void)logProtectedConfiguration:(id)arg1 fromClient:(id)arg2 ;
-(void)logDisconnectingClient:(id)arg1 ;
-(void)logEnrollStartError:(int)arg1 ;
-(void)logMatchStartError:(int)arg1 ;
-(void)logFingerDetectStartError:(int)arg1 ;
-(void)logCancelError:(int)arg1 ;
-(void)logUpdateIdentity:(id)arg1 withError:(int)arg2 ;
-(void)logRemoveIdentity:(id)arg1 withError:(int)arg2 ;
-(void)logProtectedConfigurationError:(int)arg1 ;
-(void)logEnrollResultIdentity:(id)arg1 withTimestamp:(unsigned long long)arg2 forClients:(id)arg3 ;
-(void)logMatchResultIdentity:(id)arg1 withDetails:(id)arg2 timestamp:(unsigned long long)arg3 forClients:(id)arg4 ;
-(id)packCurrentLog;
-(id)packAllLogs;
-(unsigned long long)absoluteTimeOverride;
-(void)setAbsoluteTimeOverride:(unsigned long long)arg1 ;
-(void)dealloc;
-(void)updateIdentity:(id)arg1 ;
@end

