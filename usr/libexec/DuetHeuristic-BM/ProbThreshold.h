/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:07 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/DuetHeuristic-BM
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, NSMutableDictionary, CDSession, CDDPluginConnection, NSMutableArray, CDAdmissionControlLogWriter;

@interface ProbThreshold : NSObject {

	NSObject*<OS_dispatch_queue> probThresholdQueue;
	NSMutableDictionary* localThres;
	NSMutableDictionary* remoteThres;
	NSMutableDictionary* localPersistentPools;
	NSMutableDictionary* remotePersistentPools;
	long long lastKnownBON;
	long long lastKnownBONRemote;
	CDSession* session;
	int mode;
	CDDPluginConnection* coreDuetConn;
	NSMutableDictionary* cachedProbability;
	NSMutableDictionary* decisionTables;
	NSMutableDictionary* batteryInfo;
	NSMutableDictionary* softwareUpdateDecision;
	NSMutableArray* cachedKeyArray;
	int systemCondToken;
	BOOL admissionLoggingEnabled;
	unsigned long long minimumDatabaseAge;
	CDAdmissionControlLogWriter* _admissionLog;

}

@property (assign) BOOL admissionLoggingEnabled; 
@property (assign) unsigned long long minimumDatabaseAge; 
@property (retain) CDAdmissionControlLogWriter * admissionLog;              //@synthesize admissionLog=_admissionLog - In the implementation block
-(void)invalidateThreshold;
-(BOOL)doAdmission:(id)arg1 withId:(unsigned long long)arg2 admissionKey:(id)arg3 value:(id)arg4 forRemote:(BOOL)arg5 device:(id)arg6 withOptions:(id)arg7 ;
-(void)setLocalSoftwareThres:(long long)arg1 ;
-(void)setRemoteSoftwareThres:(long long)arg1 ;
-(void)setBatteryInfomation:(BOOL)arg1 batteryLevel:(unsigned long long)arg2 batteryCapacity:(unsigned long long)arg3 connected:(BOOL)arg4 ;
-(id)init:(id)arg1 conn:(id)arg2 defaultConfig:(id)arg3 classConfig:(id)arg4 productConfig:(id)arg5 Token:(int)arg6 ;
-(void)setDecisionTables:(id)arg1 ;
-(void)populateSoftwareUpdateFromDictionary:(id)arg1 ;
-(void)populateDecisionTables:(id)arg1 classConfig:(id)arg2 productConfig:(id)arg3 ;
-(void)initializePersistentPools;
-(void)_setSoftwareThres:(long long)arg1 forRemote:(BOOL)arg2 decisionTables:(id)arg3 ;
-(id)cachedKeyFromParams:(id)arg1 admissionKey:(id)arg2 values:(id)arg3 forRemote:(BOOL)arg4 device:(id)arg5 ;
-(void)preloadForecastResult:(id)arg1 admissionKey:(id)arg2 device:(id)arg3 insertKey:(id)arg4 forRemote:(BOOL)arg5 ;
-(double)defaultProbability:(id)arg1 clientId:(id)arg2 ;
-(double)tallyUpProbabilityWithDictionary:(id)arg1 values:(id)arg2 ;
-(BOOL)softwareUpdateAllow;
-(id)loadDictionaryOnParameter:(id)arg1 admissionKey:(id)arg2 values:(id)arg3 forRemote:(BOOL)arg4 device:(id)arg5 appRefresh:(BOOL)arg6 ;
-(double)probabilityFromDictionary:(id)arg1 values:(id)arg2 withOptions:(id)arg3 clientId:(id)arg4 ;
-(BOOL)compareThreshold:(double)arg1 forRemote:(BOOL)arg2 withOptions:(id)arg3 ;
-(CDAdmissionControlLogWriter *)admissionLog;
-(unsigned long long)minimumDatabaseAge;
-(void)setMinimumDatabaseAge:(unsigned long long)arg1 ;
-(void)setAdmissionLog:(CDAdmissionControlLogWriter *)arg1 ;
-(void)setAdmissionLoggingEnabled:(BOOL)arg1 ;
-(BOOL)admissionLoggingEnabled;
-(void)setOperatingMode:(int)arg1 ;
@end

