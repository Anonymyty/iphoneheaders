/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:27 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/pkd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_xpc_object;
#import <pkd/pkd-Structs.h>
@class NSObject, PKDServer, PKBundle;

@interface PKDXpcClient : NSObject {

	BOOL _acceptWork;
	unsigned _requestCount;
	NSObject*<OS_xpc_object> _connection;
	PKDServer* _server;
	PKBundle* _bundle;
	SecTaskRef __task;

}

@property (__weak) NSObject*<OS_xpc_object> connection;              //@synthesize connection=_connection - In the implementation block
@property (retain) PKDServer * server;                               //@synthesize server=_server - In the implementation block
@property (readonly) int pid; 
@property (retain) PKBundle * bundle;                                //@synthesize bundle=_bundle - In the implementation block
@property (assign) BOOL acceptWork;                                  //@synthesize acceptWork=_acceptWork - In the implementation block
@property (assign) SecTaskRef _task;                                 //@synthesize _task=__task - In the implementation block
@property (assign,nonatomic) unsigned requestCount;                  //@synthesize requestCount=_requestCount - In the implementation block
-(id)initWithConnection:(id)arg1 server:(id)arg2 ;
-(id)entitlementValueForKey:(id)arg1 ;
-(BOOL)acceptWork;
-(void)setAcceptWork:(BOOL)arg1 ;
-(void)set_task:(SecTaskRef)arg1 ;
-(void)dying;
-(void)dead;
-(SecTaskRef)_task;
-(void)dealloc;
-(id)description;
-(PKDServer *)server;
-(unsigned)requestCount;
-(PKBundle *)bundle;
-(void)setBundle:(PKBundle *)arg1 ;
-(NSObject*<OS_xpc_object>)connection;
-(void)setConnection:(NSObject*<OS_xpc_object>)arg1 ;
-(void)setRequestCount:(unsigned)arg1 ;
-(BOOL)hasEntitlement:(id)arg1 ;
-(int)pid;
-(void)setServer:(PKDServer *)arg1 ;
@end

