/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:09 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/coreduetd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Foundation/NSXPCListener.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <libobjc.A.dylib/_CDInteractionXPCProtocol.h>

@protocol _DKLocationHistorian, OS_dispatch_queue;
@class _CDInteractionStore, _CDInteractionAdviceEngine, _DKDataProtectionStateMonitor, _CDInteractionPolicies, NSObject, _CDSpotlightItemRecorder, NSString;

@interface CDPeopleDaemon : NSXPCListener <NSXPCListenerDelegate, _CDInteractionXPCProtocol> {

	_CDInteractionStore* _store;
	_CDInteractionAdviceEngine* _advisor;
	_DKDataProtectionStateMonitor* _dataProtection;
	_CDInteractionPolicies* _policies;
	id<_DKLocationHistorian> _locationHistorian;
	NSObject*<OS_dispatch_queue> _workQueue;
	_CDSpotlightItemRecorder* _recorder;

}

@property (nonatomic,retain) _CDSpotlightItemRecorder * recorder;              //@synthesize recorder=_recorder - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)writeRepopulationCheckpoint:(id)arg1 ;
+(id)readRepopulationCheckpoint;
+(id)sharedInstance;
-(void)maintainPrivacy;
-(void)setupDataProtectionChangeHandler;
-(BOOL)versionCheckAndUpgradeIfNecessaryAndPossible;
-(void)setupSpotlightReceiver;
-(BOOL)requestInteractionRepopulation;
-(void)fillInCurrentLocationIfNeeded:(id)arg1 ;
-(id)init;
-(void)setRecorder:(_CDSpotlightItemRecorder *)arg1 ;
-(_CDSpotlightItemRecorder *)recorder;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)rankCandidateContacts:(id)arg1 usingSettings:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)adviseInteractionsUsingSettings:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)adviseInteractionsForDate:(id)arg1 usingSettings:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)adviseInteractionsForLocation:(id)arg1 usingSettings:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)adviseSocialInteractionsForDate:(id)arg1 andSeedContacts:(id)arg2 usingSettings:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)adviseInteractionsForKeywordsInString:(id)arg1 usingSettings:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)tuneSocialAdvisorUsingSettings:(id)arg1 heartBeatHandler:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)setLocationHistorian:(id)arg1 ;
-(void)recordInteractions:(id)arg1 enforceDataLimits:(BOOL)arg2 enforcePrivacy:(BOOL)arg3 reply:(/*^block*/id)arg4 ;
-(void)queryInteractionsUsingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(unsigned long long)arg3 reply:(/*^block*/id)arg4 ;
-(void)queryContactsUsingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(unsigned long long)arg3 reply:(/*^block*/id)arg4 ;
-(void)countInteractionsUsingPredicate:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)countContactsUsingPredicate:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)deleteInteractionsMatchingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(unsigned long long)arg3 reply:(/*^block*/id)arg4 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 account:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 domainIdentifier:(id)arg2 reply:(/*^block*/id)arg3 ;
-(BOOL)isClassCLocked;
-(void)handleError:(id)arg1 ;
-(id)workQueue;
@end

