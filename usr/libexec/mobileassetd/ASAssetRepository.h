/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:26 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/mobileassetd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol ASAssetMetadataUpdatePolicy, OS_dispatch_queue;
@class NSURL, NSDictionary, NSCache, NSObject, NSArray;

@interface ASAssetRepository : NSObject {

	NSURL* _repositoryURL;
	NSURL* _supplementalAssetMetadataDirectoryURL;
	id<ASAssetMetadataUpdatePolicy> _updatePolicy;
	double _automaticMetadataUpdateIntervalOverride;
	NSDictionary* _assetTypeDescriptors;
	NSCache* _availableAssetsMetadataCache;
	NSCache* _installedAssetsMetadataCache;
	NSObject*<OS_dispatch_queue> _queue;
	/*^block*/id _assetUpdateAvailableHandler;

}

@property (nonatomic,copy) NSURL * repositoryURL; 
@property (nonatomic,copy) NSURL * supplementalAssetMetadataDirectoryURL; 
@property (nonatomic,retain) id<ASAssetMetadataUpdatePolicy> updatePolicy; 
@property (assign,nonatomic) double automaticMetadataUpdateIntervalOverride; 
@property (nonatomic,readonly) NSArray * assetTypeDescriptors; 
@property (nonatomic,copy) id assetUpdateAvailableHandler;                                //@synthesize assetUpdateAvailableHandler=_assetUpdateAvailableHandler - In the implementation block
-(id)installedAndDownloadingAssetsOfAssetType:(id)arg1 error:(id*)arg2 ;
-(BOOL)removeAsset:(id)arg1 ofAssetType:(id)arg2 error:(id*)arg3 ;
-(id)initWithRepositoryURL:(id)arg1 ;
-(void)setUpdatePolicy:(id<ASAssetMetadataUpdatePolicy>)arg1 ;
-(void)setAssetUpdateAvailableHandler:(id)arg1 ;
-(void)setSupplementalAssetMetadataDirectoryURL:(NSURL *)arg1 ;
-(id)attributeForKey:(id)arg1 onAsset:(id)arg2 ofAssetType:(id)arg3 error:(id*)arg4 ;
-(BOOL)validateAsset:(id)arg1 ofAssetType:(id)arg2 error:(id*)arg3 ;
-(id)assetsOfAssetType:(id)arg1 matchingPredicate:(id)arg2 error:(id*)arg3 ;
-(void)updateMetadataForAssetType:(id)arg1 withOptions:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setRepositoryURL:(NSURL *)arg1 ;
-(void)setAutomaticMetadataUpdateIntervalOverride:(double)arg1 ;
-(BOOL)updateAllStaleMetadata:(id*)arg1 ;
-(BOOL)setAttribute:(id)arg1 forKey:(id)arg2 onAssetType:(id)arg3 error:(id*)arg4 ;
-(id)attributeForKey:(id)arg1 onAssetType:(id)arg2 error:(id*)arg3 ;
-(double)timeUntilNextAutomaticMetadataUpdate;
-(BOOL)setAttributes:(id)arg1 onAsset:(id)arg2 ofAssetType:(id)arg3 error:(id*)arg4 ;
-(id)attributesForKeys:(id)arg1 onAsset:(id)arg2 ofAssetType:(id)arg3 error:(id*)arg4 ;
-(void)scanCachedMetadataForUpdates;
-(BOOL)importAssetTypeDescriptors:(id)arg1 ;
-(BOOL)performDataMigrationAndReturnError:(id*)arg1 ;
-(void)_discardCachedAssetMetadata;
-(id)_assetTypeDescriptorsURL;
-(id)_assetTypeDescriptors;
-(id)_relativePathToMetadataForAssetType:(id)arg1 extension:(id)arg2 ;
-(id)_cachedAssetMetadataForAssetType:(id)arg1 ;
-(id)_assetTypeDescriptorForAssetType:(id)arg1 ;
-(BOOL)_assetTypeDescriptorSupportsAutomaticAssetUpdates:(id)arg1 ;
-(void)_findUpdatesForAssets:(id)arg1 withAvailableAssets:(id)arg2 usingDescriptor:(id)arg3 ;
-(id)_lastDownloadedDateForAssetMetadataType:(id)arg1 fromURL:(id)arg2 ;
-(BOOL)_lastModifiedDateIsValid:(id)arg1 ;
-(void)_cacheAssetMetadata:(id)arg1 forAssetType:(id)arg2 ;
-(int)_verifyAssetMetadata:(id)arg1 ;
-(void)_scanAssets:(id)arg1 forUpdatesForAssetType:(id)arg2 ;
-(void)_downloadResourceAtURL:(id)arg1 withOptions:(id)arg2 ifNewerThan:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)_remoteURLForAssetType:(id)arg1 relativeTo:(id)arg2 error:(id*)arg3 ;
-(void)_downloadMetadataForAssetType:(id)arg1 fromURL:(id)arg2 options:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_updateMetadataForAssetType:(id)arg1 withOptions:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)_URLForInstalledAssetMetadataForAssetType:(id)arg1 ;
-(id)_installedAssetMetadataForAssetType:(id)arg1 ;
-(BOOL)_setInstalledAssetsMetadataValue:(id)arg1 forKey:(id)arg2 onAssetType:(id)arg3 error:(id*)arg4 ;
-(id)_URLForCachedAssetMetadataForAssetType:(id)arg1 ;
-(id)_supplementalAssetMetadataForAssetType:(id)arg1 ;
-(id)_metadataForAvailableAssetsOfAssetType:(id)arg1 ;
-(id)_installedAndDownloadingAssetsOfAssetType:(id)arg1 error:(id*)arg2 ;
-(id)_assetsOfAssetType:(id)arg1 matchingPredicate:(id)arg2 error:(id*)arg3 ;
-(BOOL)_enumerateInstalledAssetsUsingBlock:(/*^block*/id)arg1 ;
-(BOOL)_setAttributes:(id)arg1 onAsset:(id)arg2 ofAssetType:(id)arg3 error:(id*)arg4 ;
-(id)_assetMatchingAttributes:(id)arg1 ofAssetType:(id)arg2 atIndex:(unsigned long long*)arg3 error:(id*)arg4 ;
-(BOOL)_setInstalledAssetAttributes:(id)arg1 forAssetType:(id)arg2 error:(id*)arg3 ;
-(BOOL)_removeAsset:(id)arg1 ofAssetType:(id)arg2 error:(id*)arg3 ;
-(BOOL)_writeAssetIntoInstalledAssetMetadata:(id)arg1 assetType:(id)arg2 error:(id*)arg3 ;
-(double)_timeUntilNextAutomaticMetadataUpdateForAssetType:(id)arg1 withMetadata:(id)arg2 ;
-(void)_enumerateCachedMetadataUsingBlock:(/*^block*/id)arg1 ;
-(double)_timeUntilNextAutomaticMetadataUpdate;
-(void)_updateAllStaleMetadata:(/*^block*/id)arg1 ;
-(NSURL *)repositoryURL;
-(NSURL *)supplementalAssetMetadataDirectoryURL;
-(double)automaticMetadataUpdateIntervalOverride;
-(NSArray *)assetTypeDescriptors;
-(id)assetUpdateAvailableHandler;
-(BOOL)setAttribute:(id)arg1 forKey:(id)arg2 onAsset:(id)arg3 ofAssetType:(id)arg4 error:(id*)arg5 ;
-(id)directoryURLForAssetsOfAssetType:(id)arg1 ;
-(BOOL)writeAssetIntoInstalledAssetMetadata:(id)arg1 assetType:(id)arg2 error:(id*)arg3 ;
-(BOOL)enumerateInstalledAssetsUsingBlock:(/*^block*/id)arg1 ;
-(BOOL)enumerateInstalledAssetsOfAssetType:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)dealloc;
-(void)resetCaches;
-(id<ASAssetMetadataUpdatePolicy>)updatePolicy;
@end

