/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:26 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/mobileassetd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <mobileassetd/mobileassetd-Structs.h>
#import <mobileassetd/ASDownload.h>
@class NSURL, ASAssetRepository;


@protocol ASDownload <NSObject>
@property (assign,getter=isCancelled,nonatomic) BOOL cancelled; 
@property (assign,getter=isPaused,nonatomic) BOOL paused; 
@property (getter=isStalled,nonatomic,readonly) BOOL stalled; 
@property (assign,nonatomic) BOOL downloadDidEnd; 
@property (nonatomic,readonly) _MobileAsset* mobileAsset; 
@property (nonatomic,readonly) NSURL * archiveURL; 
@property (nonatomic,readonly) NSURL * remoteURL; 
@property (nonatomic,readonly) NSURL * localCacheServerURL; 
@property (nonatomic,retain,readonly) ASAssetRepository * assetRepository; 
@property (nonatomic,readonly) BOOL useStreamingZip; 
@required
-(NSURL *)archiveURL;
-(void)downloadDidFinish;
-(void)downloadDidFail:(id)arg1;
-(ASAssetRepository *)assetRepository;
-(void)fireProgressWithOperation:(id)arg1 progress:(float)arg2 callbackState:(id)arg3;
-(int)resumeAfterDownload;
-(void)setDownloadDidEnd:(BOOL)arg1;
-(void)fireErrorWithError:(id)arg1;
-(BOOL)useStreamingZip;
-(void)fireErrorInDomain:(id)arg1 errorCode:(long long)arg2 userInfo:(id)arg3;
-(BOOL)verifyFreeDiskSpace:(long long)arg1 error:(id*)arg2;
-(id)downloadRequestForURL:(id)arg1 useQueuingService:(BOOL)arg2 error:(id*)arg3;
-(BOOL)downloadDidEnd;
-(NSURL *)localCacheServerURL;
-(_MobileAsset*)mobileAsset;
-(BOOL)isCancelled;
-(void)setCancelled:(BOOL)arg1;
-(void)setPaused:(BOOL)arg1;
-(NSURL *)remoteURL;
-(BOOL)isStalled;
-(BOOL)isPaused;

@end


@protocol OS_dispatch_semaphore, ASDownloadDelegate, OS_dispatch_queue;
@class NSURL, ASAssetRepository, NSDictionary, NSString, MobileAssetReport, NSObject, NSURLRequest;

@interface ASDownload : NSObject <ASDownload> {

	_MobileAsset* _asset;
	NSURL* _remoteURL;
	NSURL* _archiveURL;
	NSURL* _assetURL;
	NSURL* _localCacheServerURL;
	NSDictionary* _downloadOptions;
	NSString* _currentOperationString;
	float _lastProgressUpdate;
	BOOL _checkedForLocalCache;
	BOOL _downloadDidEnd;
	BOOL _cancelled;
	BOOL _paused;
	MobileAssetReport* _report;
	NSObject*<OS_dispatch_semaphore> _pauseSemaphore;
	id<ASDownloadDelegate> _delegate;
	/*^block*/id _progressHandler;
	/*^block*/id _pauseCompletion;
	/*^block*/id _resumeCompletion;
	/*^block*/id _cancelCompletion;
	NSObject*<OS_dispatch_queue> _queue;
	BOOL downloadDidEnd;
	BOOL _isPreinstalled;
	BOOL _isAutoUpdate;
	BOOL _isBackgrounded;
	BOOL _nowServingDidFail;
	BOOL _didUseNowServing;
	ASAssetRepository* _assetRepository;
	NSURLRequest* _lastNowServingRequest;

}

@property (assign,nonatomic) BOOL isPreinstalled;                               //@synthesize isPreinstalled=_isPreinstalled - In the implementation block
@property (assign,nonatomic) BOOL isAutoUpdate;                                 //@synthesize isAutoUpdate=_isAutoUpdate - In the implementation block
@property (nonatomic,retain) id<ASDownloadDelegate> delegate;                   //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) id progressHandler;                                  //@synthesize progressHandler=_progressHandler - In the implementation block
@property (nonatomic,copy) id pauseCompletion;                                  //@synthesize pauseCompletion=_pauseCompletion - In the implementation block
@property (nonatomic,copy) id resumeCompletion;                                 //@synthesize resumeCompletion=_resumeCompletion - In the implementation block
@property (nonatomic,copy) id cancelCompletion;                                 //@synthesize cancelCompletion=_cancelCompletion - In the implementation block
@property (nonatomic,retain) NSDictionary * downloadOptions;                    //@synthesize downloadOptions=_downloadOptions - In the implementation block
@property (nonatomic,retain) NSString * currentOperationString;                 //@synthesize currentOperationString=_currentOperationString - In the implementation block
@property (nonatomic,retain) ASAssetRepository * assetRepository;               //@synthesize assetRepository=_assetRepository - In the implementation block
@property (nonatomic,readonly) NSDictionary * assetAttributes; 
@property (assign,nonatomic) BOOL isBackgrounded;                               //@synthesize isBackgrounded=_isBackgrounded - In the implementation block
@property (assign,nonatomic) BOOL nowServingDidFail;                            //@synthesize nowServingDidFail=_nowServingDidFail - In the implementation block
@property (assign,nonatomic) BOOL didUseNowServing;                             //@synthesize didUseNowServing=_didUseNowServing - In the implementation block
@property (nonatomic,retain) NSURLRequest * lastNowServingRequest;              //@synthesize lastNowServingRequest=_lastNowServingRequest - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,getter=isCancelled,nonatomic) BOOL cancelled;                 //@synthesize cancelled=_cancelled - In the implementation block
@property (assign,getter=isPaused,nonatomic) BOOL paused;                       //@synthesize paused=_paused - In the implementation block
@property (getter=isStalled,nonatomic,readonly) BOOL stalled; 
@property (assign,nonatomic) BOOL downloadDidEnd; 
@property (nonatomic,readonly) _MobileAsset* mobileAsset;                       //@synthesize asset=_asset - In the implementation block
@property (nonatomic,readonly) NSURL * archiveURL;                              //@synthesize archiveURL=_archiveURL - In the implementation block
@property (nonatomic,readonly) NSURL * remoteURL;                               //@synthesize remoteURL=_remoteURL - In the implementation block
@property (nonatomic,readonly) NSURL * localCacheServerURL;                     //@synthesize localCacheServerURL=_localCacheServerURL - In the implementation block
@property (nonatomic,readonly) BOOL useStreamingZip; 
+(id)downloadWithAsset:(_MobileAsset*)arg1 downloadOptions:(id)arg2 downloadDelegate:(id)arg3 assetRepository:(id)arg4 ;
+(id)downloadWithAsset:(_MobileAsset*)arg1 downloadDelegate:(id)arg2 assetRepository:(id)arg3 ;
+(void)setContentCacheURLs:(id)arg1 ;
+(id)downloadsDictQueue;
+(id)downloadsDict;
-(void)setIsAutoUpdate:(BOOL)arg1 ;
-(void)startBackgroundedDownload:(/*^block*/id)arg1 ;
-(void)updateOptions:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)initWithAsset:(_MobileAsset*)arg1 downloadDelegate:(id)arg2 assetRepository:(id)arg3 ;
-(void)_populatelocalCacheServerURL;
-(void)_startDownload:(/*^block*/id)arg1 ;
-(NSURL *)archiveURL;
-(void)downloadDidFinish;
-(void)downloadDidFail:(id)arg1 ;
-(ASAssetRepository *)assetRepository;
-(void)fireProgressWithOperation:(id)arg1 progress:(float)arg2 callbackState:(id)arg3 ;
-(void)stopObservingDownload;
-(int)resumeAfterDownload;
-(void)setDownloadDidEnd:(BOOL)arg1 ;
-(BOOL)isAutoUpdate;
-(BOOL)isPreinstalled;
-(int)populateURLs;
-(void)_saveDownloadOptions;
-(void)logDownload:(BOOL)arg1 ;
-(void)_handleFileURLDownload;
-(void)fireErrorWithError:(id)arg1 ;
-(void)notifyPauseClients:(int)arg1 ;
-(void)setPauseCompletion:(id)arg1 ;
-(void)pauseDidFinish:(int)arg1 ;
-(void)_pause:(/*^block*/id)arg1 ;
-(void)resumeDidFinish:(int)arg1 ;
-(void)notifyResumeClients:(int)arg1 ;
-(void)setResumeCompletion:(id)arg1 ;
-(void)notifyCancelClients:(int)arg1 ;
-(void)setCancelCompletion:(id)arg1 ;
-(void)cancellationDidFinish:(int)arg1 ;
-(BOOL)useStreamingZip;
-(void)waitForUnpause;
-(int)verifyArchiveHash;
-(void)resetProgressWithOperation:(id)arg1 ;
-(void)setNowServingDidFail:(BOOL)arg1 ;
-(BOOL)didUseNowServing;
-(void)_retryDownloadAfterInterval:(id)arg1 withQueueToken:(id)arg2 ;
-(void)_retryDownloadWithoutNowServing;
-(void)setCurrentOperationString:(NSString *)arg1 ;
-(NSString *)currentOperationString;
-(id)cancelCompletion;
-(id)pauseCompletion;
-(id)resumeCompletion;
-(BOOL)nowServingDidFail;
-(void)setDidUseNowServing:(BOOL)arg1 ;
-(void)setLastNowServingRequest:(NSURLRequest *)arg1 ;
-(NSURLRequest *)lastNowServingRequest;
-(void)fireErrorInDomain:(id)arg1 errorCode:(long long)arg2 userInfo:(id)arg3 ;
-(BOOL)verifyFreeDiskSpace:(long long)arg1 error:(id*)arg2 ;
-(id)downloadRequestForURL:(id)arg1 useQueuingService:(BOOL)arg2 error:(id*)arg3 ;
-(BOOL)downloadDidEnd;
-(NSURL *)localCacheServerURL;
-(void)usePreinstalledAssetArchive:(id)arg1 ;
-(void)setIsPreinstalled:(BOOL)arg1 ;
-(void)setAssetRepository:(ASAssetRepository *)arg1 ;
-(_MobileAsset*)mobileAsset;
-(id)assetType;
-(void)setDelegate:(id<ASDownloadDelegate>)arg1 ;
-(void)dealloc;
-(id<ASDownloadDelegate>)delegate;
-(BOOL)isBackgrounded;
-(void)setIsBackgrounded:(BOOL)arg1 ;
-(BOOL)isCancelled;
-(void)setCancelled:(BOOL)arg1 ;
-(void)setPaused:(BOOL)arg1 ;
-(void)startDownload:(/*^block*/id)arg1 ;
-(void)setProgressHandler:(id)arg1 ;
-(NSDictionary *)downloadOptions;
-(void)_resume:(/*^block*/id)arg1 ;
-(void)cancel:(/*^block*/id)arg1 ;
-(NSURL *)remoteURL;
-(NSDictionary *)assetAttributes;
-(void)resume:(/*^block*/id)arg1 ;
-(void)_downloadDidFail:(id)arg1 ;
-(id)progressHandler;
-(BOOL)isStalled;
-(void)_cancel:(/*^block*/id)arg1 ;
-(BOOL)isPaused;
-(void)setDownloadOptions:(NSDictionary *)arg1 ;
-(void)pause:(/*^block*/id)arg1 ;
@end

