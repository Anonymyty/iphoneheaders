/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:08 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/backboardd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <backboardd/BKGSEventClient.h>

@interface BKAccelerometerClient : BKGSEventClient {

	float _xThreshold;
	float _yThreshold;
	float _zThreshold;
	BOOL _passiveOrientationEvents;
	BOOL _wantsOrientationEvents;
	BOOL _wantsAccelerometerEvents;
	double _accelerometerUpdateInterval;
	double _lastAccelerometerEventTimestamp;

}

@property (assign,nonatomic) BOOL wantsAccelerometerEvents;                                                                                                           //@synthesize wantsAccelerometerEvents=_wantsAccelerometerEvents - In the implementation block
@property (assign,nonatomic) double accelerometerUpdateInterval;                                                                                                      //@synthesize accelerometerUpdateInterval=_accelerometerUpdateInterval - In the implementation block
@property (assign,nonatomic) float xThreshold;                                                                                                                        //@synthesize xThreshold=_xThreshold - In the implementation block
@property (assign,nonatomic) float yThreshold;                                                                                                                        //@synthesize yThreshold=_yThreshold - In the implementation block
@property (assign,nonatomic) float zThreshold;                                                                                                                        //@synthesize zThreshold=_zThreshold - In the implementation block
@property (assign,nonatomic) BOOL passiveOrientationEvents;                                                                                                           //@synthesize passiveOrientationEvents=_passiveOrientationEvents - In the implementation block
@property (assign,nonatomic) BOOL wantsOrientationEvents;                                                                                                             //@synthesize wantsOrientationEvents=_wantsOrientationEvents - In the implementation block
@property (assign,setter=_setLastAccelerometerEventTimestamp:,getter=_lastAccelerometerEventTimestamp,nonatomic) double lastAccelerometerEventTimestamp;              //@synthesize lastAccelerometerEventTimestamp=_lastAccelerometerEventTimestamp - In the implementation block
-(BOOL)wantsAccelerometerEvents;
-(BOOL)_passesThresholdForX:(float)arg1 y:(float)arg2 z:(float)arg3 ;
-(BOOL)_shouldSendSampleEventWithTimestamp:(double)arg1 samplingInterval:(double)arg2 ;
-(void)_setLastAccelerometerEventTimestamp:(double)arg1 ;
-(void)handleAccelerometerEventWithTimestamp:(double)arg1 x:(float)arg2 y:(float)arg3 z:(float)arg4 samplingInterval:(double)arg5 ;
-(void)handleOrientationEvent:(long long)arg1 orientationLocked:(BOOL)arg2 ;
-(void)setWantsAccelerometerEvents:(BOOL)arg1 ;
-(void)setWantsOrientationEvents:(BOOL)arg1 ;
-(BOOL)wantsOrientationEvents;
-(double)_lastAccelerometerEventTimestamp;
-(void)setPassiveOrientationEvents:(BOOL)arg1 ;
-(float)xThreshold;
-(float)yThreshold;
-(float)zThreshold;
-(BOOL)passiveOrientationEvents;
-(void)setXThreshold:(float)arg1 ;
-(void)setYThreshold:(float)arg1 ;
-(void)setZThreshold:(float)arg1 ;
-(void)setAccelerometerUpdateInterval:(double)arg1 ;
-(double)accelerometerUpdateInterval;
-(id)descriptionBuilderWithMultilinePrefix:(id)arg1 ;
-(void)_queue_invalidate;
@end

