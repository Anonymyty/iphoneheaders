/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:36 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/wcd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSXPCConnectionDelegate.h>
#import <libobjc.A.dylib/WCXPCManagerDaemonProtocol.h>
#import <wcd/WCDSystemObserver.h>

@protocol WCDClientDelegate, OS_os_transaction;
@class NSString, NSXPCConnection, NSObject, NSMutableArray;

@interface WCDClient : NSObject <NSXPCConnectionDelegate, WCXPCManagerDaemonProtocol, WCDSystemObserver> {

	BOOL _counterpartCanEstablishXPCConnection;
	BOOL _privileged;
	BOOL _clientSupportsActiveDeviceSwitch;
	BOOL _counterpartCanEstablishXPCConnectionCalled;
	BOOL _privilegedCalled;
	BOOL _pendingContentDequeued;
	BOOL _previousReachable;
	BOOL _background;
	BOOL _allowMessageSending;
	NSString* _bundleID;
	NSString* _communicationID;
	NSString* _clientCurrentPairingID;
	NSXPCConnection* _connection;
	NSObject*<WCDClientDelegate> _delegate;
	NSObject*<OS_os_transaction> _transaction;
	NSMutableArray* _outstandingMessagesToSend;

}

@property (readonly) NSString * bundleID;                                            //@synthesize bundleID=_bundleID - In the implementation block
@property (copy) NSString * communicationID;                                         //@synthesize communicationID=_communicationID - In the implementation block
@property (assign,nonatomic) BOOL counterpartCanEstablishXPCConnection;              //@synthesize counterpartCanEstablishXPCConnection=_counterpartCanEstablishXPCConnection - In the implementation block
@property (readonly) BOOL reachable; 
@property (nonatomic,copy) NSString * clientCurrentPairingID;                        //@synthesize clientCurrentPairingID=_clientCurrentPairingID - In the implementation block
@property (nonatomic,retain) NSXPCConnection * connection;                           //@synthesize connection=_connection - In the implementation block
@property (__weak) NSObject*<WCDClientDelegate> delegate;                            //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL privileged;                                        //@synthesize privileged=_privileged - In the implementation block
@property (assign) BOOL clientSupportsActiveDeviceSwitch;                            //@synthesize clientSupportsActiveDeviceSwitch=_clientSupportsActiveDeviceSwitch - In the implementation block
@property (assign) BOOL counterpartCanEstablishXPCConnectionCalled;                  //@synthesize counterpartCanEstablishXPCConnectionCalled=_counterpartCanEstablishXPCConnectionCalled - In the implementation block
@property (assign) BOOL privilegedCalled;                                            //@synthesize privilegedCalled=_privilegedCalled - In the implementation block
@property (assign) BOOL pendingContentDequeued;                                      //@synthesize pendingContentDequeued=_pendingContentDequeued - In the implementation block
@property (retain) NSObject*<OS_os_transaction> transaction;                         //@synthesize transaction=_transaction - In the implementation block
@property (assign) BOOL previousReachable;                                           //@synthesize previousReachable=_previousReachable - In the implementation block
@property (readonly) BOOL background;                                                //@synthesize background=_background - In the implementation block
@property (readonly) BOOL watchAppInstalled; 
@property (readonly) BOOL complicationEnabled; 
@property (assign) BOOL allowMessageSending;                                         //@synthesize allowMessageSending=_allowMessageSending - In the implementation block
@property (readonly) long long outstandingMessagesToSendCount; 
@property (retain) NSMutableArray * outstandingMessagesToSend;                       //@synthesize outstandingMessagesToSend=_outstandingMessagesToSend - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)clientsStorageURL;
-(void)debugInfoRequested:(id)arg1 ;
-(void)systemObserverInitialSetUpComplete;
-(void)systemObserverActiveDeviceSwitchStarted;
-(void)systemObserverActiveDeviceConnectedChanged;
-(void)systemObserverPairedListChanged;
-(void)systemObserverRemoteFirstUnlockedChanged;
-(void)systemObserverGlanceIdentifiersChanged;
-(void)systemObserverNotificationIdentifiersChanged;
-(void)systemObserverWatchAppsInstalledChanged;
-(void)systemObserverActiveComplicationsChanged;
-(void)systemObserverUIActiveStateChanged;
-(void)systemObserverAppDidSuspendForBundleID:(id)arg1 ;
-(void)systemObserverProcessStateChangedForBundleID:(id)arg1 ;
-(void)setupBundleIDMonitoring;
-(void)loadPersistedClientState;
-(void)clearPersistedClientState;
-(long long)outstandingMessagesToSendCount;
-(NSString *)communicationID;
-(id)clientStorageFileURL;
-(void)setClientCurrentPairingID:(NSString *)arg1 ;
-(void)setClientSupportsActiveDeviceSwitch:(BOOL)arg1 ;
-(NSString *)clientCurrentPairingID;
-(BOOL)clientSupportsActiveDeviceSwitch;
-(void)persistClientState;
-(BOOL)privilegedCalled;
-(void)setPrivilegedCalled:(BOOL)arg1 ;
-(void)updateClientWithSessionState;
-(BOOL)watchAppInstalled;
-(BOOL)counterpartCanEstablishXPCConnectionCalled;
-(void)setCounterpartCanEstablishXPCConnectionCalled:(BOOL)arg1 ;
-(void)terminateApplicationDueToSwitchIfEligible;
-(void)setPendingContentDequeued:(BOOL)arg1 ;
-(BOOL)counterpartCanEstablishXPCConnection;
-(BOOL)previousReachable;
-(void)setPreviousReachable:(BOOL)arg1 ;
-(BOOL)privileged;
-(BOOL)complicationEnabled;
-(id)newSessionState;
-(void)dequeuePendingContent;
-(BOOL)pendingContentDequeued;
-(void)addOutstandingMessage:(id)arg1 ;
-(void)removeOutstandingMessage:(id)arg1 ;
-(void)setAllowMessageSending:(BOOL)arg1 ;
-(NSMutableArray *)outstandingMessagesToSend;
-(void)updateMessagesClientIfNeeded;
-(id)initWithCommunicationID:(id)arg1 connection:(id)arg2 ;
-(void)setPrivileged:(BOOL)arg1 ;
-(void)setCounterpartCanEstablishXPCConnection:(BOOL)arg1 ;
-(BOOL)glanceActive;
-(BOOL)notificationActive;
-(BOOL)foregroundOrPrivileged;
-(void)setCommunicationID:(NSString *)arg1 ;
-(void)setOutstandingMessagesToSend:(NSMutableArray *)arg1 ;
-(void)setDelegate:(NSObject*<WCDClientDelegate>)arg1 ;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)description;
-(NSObject*<WCDClientDelegate>)delegate;
-(id)remoteObjectProxy;
-(BOOL)background;
-(NSXPCConnection *)connection;
-(void)setConnection:(NSXPCConnection *)arg1 ;
-(void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(BOOL)arg3 ;
-(void)handleRequest:(id)arg1 ;
-(void)handleResponse:(id)arg1 ;
-(void)setTransaction:(NSObject*<OS_os_transaction>)arg1 ;
-(NSString *)bundleID;
-(NSObject*<OS_os_transaction>)transaction;
-(BOOL)iOSDeviceNeedsFirstUnlock;
-(void)sessionReadyForInitialStateForClientPairingID:(id)arg1 supportsActiveDeviceSwitch:(BOOL)arg2 withErrorHandler:(/*^block*/id)arg3 ;
-(void)updateApplicationContext:(id)arg1 clientPairingID:(id)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)transferFile:(id)arg1 sandboxToken:(id)arg2 clientPairingID:(id)arg3 errorHandler:(/*^block*/id)arg4 ;
-(void)cancelSendWithIdentifier:(id)arg1 ;
-(void)transferUserInfo:(id)arg1 withURL:(id)arg2 clientPairingID:(id)arg3 errorHandler:(/*^block*/id)arg4 ;
-(BOOL)allowMessageSending;
-(void)handleSentMessageWithIdentifier:(id)arg1 error:(id)arg2 ;
-(void)acknowledgeFileIndexWithIdentifier:(id)arg1 clientPairingID:(id)arg2 ;
-(void)acknowledgeFileResultIndexWithIdentifier:(id)arg1 clientPairingID:(id)arg2 ;
-(void)acknowledgeUserInfoIndexWithIdentifier:(id)arg1 clientPairingID:(id)arg2 ;
-(void)acknowledgeUserInfoResultIndexWithIdentifier:(id)arg1 clientPairingID:(id)arg2 ;
-(void)handleApplicationContextWithPairingID:(id)arg1 ;
-(void)handleFileResultWithPairingID:(id)arg1 ;
-(void)handleIncomingFileWithPairingID:(id)arg1 ;
-(void)handleUserInfoResultWithPairingID:(id)arg1 ;
-(void)handleIncomingUserInfoWithPairingID:(id)arg1 ;
-(void)handleActiveDeviceSwitchStarted;
-(void)cancelAllOutstandingMessages;
-(void)sendMessage:(id)arg1 clientPairingID:(id)arg2 acceptanceHandler:(/*^block*/id)arg3 ;
-(BOOL)reachable;
@end

