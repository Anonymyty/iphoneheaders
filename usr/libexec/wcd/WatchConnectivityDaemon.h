/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:37 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/wcd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <wcd/WCDSystemObserver.h>
#import <wcd/WCDClientDelegate.h>
#import <wcd/IDSServiceDelegate.h>

@class NSXPCListener, WCDPrivateClient, WCDFirstUnlockManager, WCDPairedSyncManager, NSMutableDictionary, NSSet, _CDComplications, IDSService, NSString;

@interface WatchConnectivityDaemon : NSObject <NSXPCListenerDelegate, WCDSystemObserver, WCDClientDelegate, IDSServiceDelegate> {

	NSXPCListener* _xpcPrivateListener;
	WCDPrivateClient* _privateClient;
	WCDFirstUnlockManager* _firstUnlockManager;
	WCDPairedSyncManager* _pairedSyncManager;
	NSXPCListener* _xpcListener;
	NSMutableDictionary* _communicationIdentifierToClient;
	NSMutableDictionary* _sendIdentifierToHandler;
	NSMutableDictionary* _pendingMessageRequests;
	NSMutableDictionary* _coreLocationAssertions;
	NSMutableDictionary* _companionAppAssertions;
	NSSet* _counterpartClientCommunicationIdentifiers;
	_CDComplications* _duetComplications;
	IDSService* _idsService;
	IDSService* _insecureIDSService;
	NSString* _idsServiceIdentifier;
	NSString* _idsInsecureServiceIdentifier;

}

@property (readonly) IDSService * idsService;                              //@synthesize idsService=_idsService - In the implementation block
@property (readonly) IDSService * insecureIDSService;                      //@synthesize insecureIDSService=_insecureIDSService - In the implementation block
@property (readonly) NSString * idsServiceIdentifier;                      //@synthesize idsServiceIdentifier=_idsServiceIdentifier - In the implementation block
@property (readonly) NSString * idsInsecureServiceIdentifier;              //@synthesize idsInsecureServiceIdentifier=_idsInsecureServiceIdentifier - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedDaemon;
-(void)subscribeToAllNotifications;
-(void)debugInfoRequested:(id)arg1 ;
-(id)stateDump;
-(void)sendFirstUnlockState:(id)arg1 ;
-(void)sendFirstUnlockAck:(id)arg1 ;
-(void)sendFirstUnlockRequest:(id)arg1 ;
-(void)systemObserverInitialSetUpComplete;
-(void)systemObserverActiveDeviceSwitchStarted;
-(void)systemObserverInstalledApplicationsChanged;
-(void)systemObserverAppDidTerminateForBundleID:(id)arg1 ;
-(void)clientXPCConnectionDidDisconnect:(id)arg1 ;
-(void)clientReachabilityDidChange:(id)arg1 ;
-(void)dequeueContentForClient:(id)arg1 ;
-(void)sendMessage:(id)arg1 withIdentifier:(id)arg2 isResponse:(BOOL)arg3 clientID:(id)arg4 clientPairingID:(id)arg5 errorHandler:(/*^block*/id)arg6 ;
-(void)updateApplicationContext:(id)arg1 clientID:(id)arg2 clientPairingID:(id)arg3 errorHandler:(/*^block*/id)arg4 ;
-(void)transferFile:(id)arg1 withMetadata:(id)arg2 identifier:(id)arg3 clientID:(id)arg4 clientPairingID:(id)arg5 errorHandler:(/*^block*/id)arg6 ;
-(void)sendComplicationUserInfo:(id)arg1 clientID:(id)arg2 clientPairingID:(id)arg3 identifier:(id)arg4 errorHandler:(/*^block*/id)arg5 ;
-(void)transferUserInfo:(id)arg1 withMetadata:(id)arg2 identifier:(id)arg3 clientID:(id)arg4 clientPairingID:(id)arg5 errorHandler:(/*^block*/id)arg6 ;
-(void)sendDaemonDidStart;
-(void)loadPersistedClients;
-(id)createNewClientObjectWithCommunicationID:(id)arg1 connection:(id)arg2 ;
-(BOOL)listenerShouldAcceptNewConnection:(id)arg1 ;
-(BOOL)privateListenerShouldAcceptNewConnection:(id)arg1 ;
-(BOOL)checkAndHandleiOSExtensionConnection:(id)arg1 ;
-(void)updateClientWithValues:(id)arg1 ;
-(void)updateAllClientsWithValues;
-(void)dequeuePendingComplicationPings;
-(void)dequeuePendingMessagesForCommunicationID:(id)arg1 ;
-(void)releaseCLInUseAssertionForIdentifier:(id)arg1 ;
-(IDSService *)insecureIDSService;
-(id)dataFromUUIDString:(id)arg1 ;
-(BOOL)errorIfPreconditionsNotSatisfiedWithClientPairingID:(id)arg1 error:(id*)arg2 ;
-(id)WCErrorForIDSError:(id)arg1 ;
-(void)duetIdentifiersForCompanionAppID:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)launchCompanionAppID:(id)arg1 ;
-(id)bundleIDForCommunicationID:(id)arg1 ;
-(id)moveFileToClientInbox:(id)arg1 bundleID:(id)arg2 pairingID:(id)arg3 fileIdentifier:(id)arg4 userInfoData:(id)arg5 error:(id*)arg6 ;
-(BOOL)fileTransferExistsForPairingID:(id)arg1 identifier:(id)arg2 bundleID:(id)arg3 ;
-(void)persistFileTransferResult:(id)arg1 pairingID:(id)arg2 bundleID:(id)arg3 identifier:(id)arg4 ;
-(void)storeComplicationUserInfoTransfer:(id)arg1 bundleID:(id)arg2 pairingID:(id)arg3 ;
-(void)handleComplicationPingForCommunicationIdentifier:(id)arg1 ;
-(id)moveUserInfoToClientInbox:(id)arg1 bundleID:(id)arg2 pairingID:(id)arg3 userInfoIdentifier:(id)arg4 ;
-(BOOL)userInfoExistsForPairingID:(id)arg1 identifier:(id)arg2 bundleID:(id)arg3 ;
-(void)persistUserInfoTransferResult:(id)arg1 pairingID:(id)arg2 bundleID:(id)arg3 identifier:(id)arg4 ;
-(NSString *)idsInsecureServiceIdentifier;
-(NSString *)idsServiceIdentifier;
-(id)pairingIDForIDSUniqueDeviceID:(id)arg1 ;
-(BOOL)notifyIfFileTransferWithCommunicationID:(id)arg1 pairingID:(id)arg2 sendID:(id)arg3 success:(BOOL)arg4 error:(id)arg5 ;
-(BOOL)notifyIfUserInfoTransferWithCommunicationID:(id)arg1 pairingID:(id)arg2 sendID:(id)arg3 success:(BOOL)arg4 error:(id)arg5 ;
-(const char*)descriptionFromPayloadSendType:(unsigned short)arg1 ;
-(void)handleIncomingRequest:(id)arg1 withCommunicationID:(id)arg2 ;
-(void)persistAppContext:(id)arg1 bundleID:(id)arg2 pairingID:(id)arg3 ;
-(void)handleIncomingUserInfoTransferProto:(id)arg1 communicationID:(id)arg2 pairingID:(id)arg3 sendID:(id)arg4 ;
-(void)handleCounterpartDaemonDidStart;
-(void)handleDaemonClientsInformation:(id)arg1 ;
-(void)handlePairedSyncComplicationsStartedWithIdentifier:(id)arg1 ;
-(void)handlePairedSyncComplicationsStartedAck:(id)arg1 identifier:(id)arg2 ;
-(void)handleIncomingFileURL:(id)arg1 communicationID:(id)arg2 pairingID:(id)arg3 sendID:(id)arg4 metadata:(id)arg5 ;
-(void)handleIncomingUserInfoURL:(id)arg1 communicationID:(id)arg2 pairingID:(id)arg3 sendID:(id)arg4 ;
-(void)updateActiveDeviceConnectedForService:(id)arg1 ;
-(void)acquireCLInUseAssertionForIdentifier:(id)arg1 ;
-(void)cleanUpProcessAssertionForIdentifier:(id)arg1 ;
-(void)acquireBackgroundAssertionForIdentifier:(id)arg1 ;
-(void)handleAquiredAssertion:(id)arg1 identifier:(id)arg2 ;
-(id)createBackgroundAssertionTimerForIdentifier:(id)arg1 ;
-(id)complicationUserInfoPathInDataContainer:(id)arg1 pairingID:(id)arg2 ;
-(id)createCLInUseTimerForIdentifier:(id)arg1 ;
-(void)sendDaemonClientsInformation;
-(void)addCounterpartClientCommunicationIdentifier:(id)arg1 ;
-(void)sendPairedSyncForComplicationsStartedWithIdentifier:(id)arg1 ;
-(void)forgetClientConnectTimer;
-(void)privateClientConnectTimerFired;
-(void)sendPairedSyncForComplicationsStartedAckWithIdentifier:(id)arg1 success:(BOOL)arg2 ;
-(id)init;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)cancelSendWithIdentifier:(id)arg1 ;
-(IDSService *)idsService;
-(void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 metadata:(id)arg4 fromID:(id)arg5 context:(id)arg6 ;
-(void)service:(id)arg1 devicesChanged:(id)arg2 ;
-(void)service:(id)arg1 nearbyDevicesChanged:(id)arg2 ;
-(void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(BOOL)arg4 error:(id)arg5 context:(id)arg6 ;
-(void)service:(id)arg1 didSwitchActivePairedDevice:(id)arg2 acknowledgementBlock:(/*^block*/id)arg3 ;
@end

