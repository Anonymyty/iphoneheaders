/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:19 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/locationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/IDSServiceDelegate.h>

@class IDSDevice, IDSService, NSString;

@interface CLCompanionTransport : NSObject <IDSServiceDelegate> {

	BOOL _isConnected;
	IDSDevice* _pairedDevice;
	double _pairedDeviceLastSeenTimestamp;
	IDSService* _idsService;
	/*^block*/id _receivedMessageHandler;
	/*^block*/id _connectionUpdateHandler;

}

@property (nonatomic,retain) IDSService * idsService;                 //@synthesize idsService=_idsService - In the implementation block
@property (copy) id receivedMessageHandler;                           //@synthesize receivedMessageHandler=_receivedMessageHandler - In the implementation block
@property (copy) id connectionUpdateHandler;                          //@synthesize connectionUpdateHandler=_connectionUpdateHandler - In the implementation block
@property (assign) BOOL isConnected;                                  //@synthesize isConnected=_isConnected - In the implementation block
@property (retain) IDSDevice * pairedDevice;                          //@synthesize pairedDevice=_pairedDevice - In the implementation block
@property (assign) double pairedDeviceLastSeenTimestamp;              //@synthesize pairedDeviceLastSeenTimestamp=_pairedDeviceLastSeenTimestamp - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)computeMD5:(id)arg1 ;
-(id)initWithSilo:(id)arg1 ;
-(void)setReceivedMessageHandler:(id)arg1 ;
-(void)setConnectionUpdateHandler:(id)arg1 ;
-(void)sendMessage:(id)arg1 type:(unsigned short)arg2 priority:(long long)arg3 fireAndForget:(BOOL)arg4 encrypt:(BOOL)arg5 bypassConnectionCheck:(BOOL)arg6 timeout:(double)arg7 ;
-(double)pairedDeviceLastSeenTimestamp;
-(id)connectionUpdateHandler;
-(void)updateIDSStatus;
-(void)handleOdometerCyclingSubscribe:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleOdometerCyclingUnsubscribe:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleOdometerCyclingData:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleOdometerBatchMode:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleOdometerElevationSubscribe:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleOdometerElevationUnsubscribe:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleOdometerElevationData:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleTrackUpdateSubscribe:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleTrackUpdateUnsubscribe:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleTrackUpdateData:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleOdometerCoarseElevationSubscribe:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleOdometerCoarseElevationUnsubscribe:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleOdometerCoarseElevationData:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleMotionCalsUpdate:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleCompanionPingData:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)handleTrackUpdateInvalidGradientData:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)setPairedDeviceLastSeenTimestamp:(double)arg1 ;
-(void)updateIDSStatusAndNotify;
-(id)receivedMessageHandler;
-(void)receivedMessage:(unsigned short)arg1 data:(id)arg2 identifierString:(id)arg3 ;
-(void)dealloc;
-(void)setPairedDevice:(IDSDevice *)arg1 ;
-(void)setIsConnected:(BOOL)arg1 ;
-(BOOL)isConnected;
-(IDSService *)idsService;
-(IDSDevice *)pairedDevice;
-(void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)service:(id)arg1 activeAccountsChanged:(id)arg2 ;
-(void)service:(id)arg1 nearbyDevicesChanged:(id)arg2 ;
-(void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(BOOL)arg4 error:(id)arg5 ;
-(void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 hasBeenDeliveredWithContext:(id)arg4 ;
-(void)setIdsService:(IDSService *)arg1 ;
@end

