/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:19 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/locationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <locationd/locationd-Structs.h>
#import <locationd/CLIntersiloService.h>
#import <locationd/CLRoutineMonitorClientProtocol.h>
#import <locationd/CLClientAuthorizationCacheClientProtocol.h>
#import <locationd/CLSignificantVisitManagerServiceProtocol.h>

@protocol CLClientAuthorizationCacheProtocol, CLRoutineMonitorServiceProtocol;
@class NSMutableArray, NSString;

@interface CLSignificantVisitManager : CLIntersiloService <CLRoutineMonitorClientProtocol, CLClientAuthorizationCacheClientProtocol, CLSignificantVisitManagerServiceProtocol> {

	unique_ptr<CLClientManager_Type::Client, std::__1::default_delete<CLClientManager_Type::Client> >* _clientManagerClient;
	unique_ptr<CLDarwinNotifier_Type::Client, std::__1::default_delete<CLDarwinNotifier_Type::Client> >* _darwinNotifierClient;
	map<id<CLSignificantVisitManagerClientProtocol>, NSString *, std::__1::less<id<CLSignificantVisitManagerClientProtocol> >, std::__1::allocator<std::__1::pair<const id<CLSignificantVisitManagerClientProtocol>, NSString *> > >* _clientToKey;
	BOOL _clientsActive;
	BOOL _armed;
	CLPersistentStore* _clientInterest;
	CLPersistentStore* _clientAuthDate;
	id<CLClientAuthorizationCacheProtocol> _clientAuthorizationCache;
	NSMutableArray* _recentVisits;
	id<CLRoutineMonitorServiceProtocol> _routineMonitor;

}

@property (assign,nonatomic) BOOL clientsActive;                                                           //@synthesize clientsActive=_clientsActive - In the implementation block
@property (assign,nonatomic) CLPersistentStore* clientInterest;                                            //@synthesize clientInterest=_clientInterest - In the implementation block
@property (assign,nonatomic) CLPersistentStore* clientAuthDate;                                            //@synthesize clientAuthDate=_clientAuthDate - In the implementation block
@property (nonatomic,retain) id<CLClientAuthorizationCacheProtocol> clientAuthorizationCache;              //@synthesize clientAuthorizationCache=_clientAuthorizationCache - In the implementation block
@property (nonatomic,retain) NSMutableArray * recentVisits;                                                //@synthesize recentVisits=_recentVisits - In the implementation block
@property (nonatomic,retain) id<CLRoutineMonitorServiceProtocol> routineMonitor;                           //@synthesize routineMonitor=_routineMonitor - In the implementation block
@property (assign,nonatomic) BOOL armed;                                                                   //@synthesize armed=_armed - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) BOOL valid; 
+(void)becameFatallyBlocked:(id)arg1 ;
+(id)getSilo;
+(void)performSyncOnSilo:(id)arg1 invoker:(/*^block*/id)arg2 ;
+(BOOL)isSupported;
-(void)connectClient:(R)arg1 withKey:(id)arg2 :(id)arg3 ;
-(void)startMonitoringSignificantVisitsForClient:(R)arg1 :(id)arg2 ;
-(void)stopMonitoringSignificantVisitsForClient:(R)arg1 :(id)arg2 ;
-(id<CLRoutineMonitorServiceProtocol>)routineMonitor;
-(void)onVisit:(id)arg1 ;
-(void)setRoutineMonitor:(id<CLRoutineMonitorServiceProtocol>)arg1 ;
-(void)setClientInterest:(CLPersistentStore*)arg1 ;
-(void)setClientAuthDate:(CLPersistentStore*)arg1 ;
-(CLPersistentStore*)clientInterest;
-(CLPersistentStore*)clientAuthDate;
-(void)setRecentVisits:(NSMutableArray *)arg1 ;
-(void)setClientAuthorizationCache:(id<CLClientAuthorizationCacheProtocol>)arg1 ;
-(id<CLClientAuthorizationCacheProtocol>)clientAuthorizationCache;
-(void)setArmed:(BOOL)arg1 ;
-(void)checkForMonitoring;
-(void)flushAll;
-(void)flushAuthDates;
-(void)flushInterest;
-(BOOL)clientsActive;
-(void)setClientsActive:(BOOL)arg1 ;
-(NSMutableArray *)recentVisits;
-(id)keyForClient:(R)arg1 :(id)arg2 ;
-(BOOL)isClientWithKeyInterested:(id)arg1 ;
-(void)removeOldVisits;
-(void)deliverVisit:(id)arg1 toClient:(R)arg2 :(id)arg3 ;
-(id)authorizationDateForClientWithKey:(id)arg1 ;
-(void)performBlockWhenArmed:(/*^block*/id)arg1 ;
-(BOOL)armed;
-(void)sendVisitsToClient:(R)arg1 :(id)arg2 ;
-(void)ensureMonitoring;
-(void)notifyClientsOfVisit:(id)arg1 ;
-(void)onClientManagerNotification:(int)arg1 data:(NotificationData)arg2 ;
-(void)onInterestStoreTimer:(CFRunLoopTimerRef)arg1 ;
-(void)onAuthDateStoreTimer:(CFRunLoopTimerRef)arg1 ;
-(void)onDarwinNotifierNotification:(int)arg1 data:(NotificationData)arg2 ;
-(void)beginService;
-(void)endService;
-(id)initInSilo:(id)arg1 ;
-(void)stopMonitoring;
-(void)disconnectClient:(R)arg1 :(id)arg2 ;
@end

