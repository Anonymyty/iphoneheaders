/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:20 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/locationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <locationd/locationd-Structs.h>
#import <locationd/CLIntersiloService.h>
#import <locationd/CMStrideCalibratorServiceProtocol.h>

@class CMStrideCalibrationBins, CLTimer, CalibrationTrack, CalTrackFinder, NSString;

@interface CMStrideCalibrator : CLIntersiloService <CMStrideCalibratorServiceProtocol> {

	unique_ptr<CLStepCountNotifier_Type::Client, std::__1::default_delete<CLStepCountNotifier_Type::Client> >* _stepCountClient;
	queue<std::__1::pair<double, unsigned int>, std::__1::deque<std::__1::pair<double, unsigned int>, std::__1::allocator<std::__1::pair<double, unsigned int> > > >* _stepWindow;
	unique_ptr<CLOdometerNotifier_Type::Client, std::__1::default_delete<CLOdometerNotifier_Type::Client> >* _odometerClient;
	unique_ptr<CLMotionState_Type::Client, std::__1::default_delete<CLMotionState_Type::Client> >* _motionStateClient;
	vector<std::__1::pair<double, CLMotionActivity::Type>, std::__1::allocator<std::__1::pair<double, CLMotionActivity::Type> > >* _activityWindow;
	unique_ptr<CLMotionStateMediator_Type::Client, std::__1::default_delete<CLMotionStateMediator_Type::Client> >* _motionStateMediatorClient;
	unique_ptr<CLLocationProvider_Type::Client, std::__1::default_delete<CLLocationProvider_Type::Client> >* _locationProviderClient;
	CLServiceLocationProvider* _serviceLocationProvider;
	unique_ptr<CLServiceLocationProvider_Type::Client, std::__1::default_delete<CLServiceLocationProvider_Type::Client> >* _serviceLocationClient;
	double _lastGoodLocFix;
	shared_ptr<CLPersistentTimer>* _batchTimer;
	CLStepCountRecorderDb* _stepCountDb;
	shared_ptr<CMStrideCalRecorderDb>* _strideCalDb;
	CMStrideCalibrationBins* _strideCalibrationBins;
	long long _currentSessionOverride;
	int _locationState;
	BOOL _forcedGizmoRequested;
	vector<CLElevationChangeEntry, std::__1::allocator<CLElevationChangeEntry> >* _elevationWindow;
	unique_ptr<CLCompanionNotifier_Type::Client, std::__1::default_delete<CLCompanionNotifier_Type::Client> >* _companionClient;
	double _minForcedAttemptWait;
	double _minCalibrationSuccessWait;
	double _minCalibrationConvergedWait;
	int _minStepsBeforeForce;
	double _stepWindowTime;
	BOOL _canSkipChecksInWindow;
	CLTimer* _stopOpportunisticCalibrationTimer;
	CalibrationTrack* fLatestTrack;
	CalibrationTrack* fLatestInvalidGradientTrack;
	CLStrideCalibrationSessionMetrics _sessionMetrics;
	CalTrackFinder* _trackFinder;

}

@property (assign) int locationState; 
@property (retain) CalTrackFinder * trackFinder;                    //@synthesize trackFinder=_trackFinder - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) BOOL valid; 
+(void)becameFatallyBlocked:(id)arg1 ;
+(id)getSilo;
+(void)performSyncOnSilo:(id)arg1 invoker:(/*^block*/id)arg2 ;
+(BOOL)isSupported;
-(void)setBins:(id)arg1 ;
-(void)resetBins;
-(id)syncgetDefaultBins;
-(BOOL)syncgetIsCalibrationConvergedForSpeed:(double)arg1 ;
-(void)setGizmoSession:(long long)arg1 ;
-(double)syncgetKValueForSpeed:(double)arg1 ;
-(id)syncgetBins;
-(BOOL)syncgetIsWalkCalibrationAvailable;
-(BOOL)syncgetIsRunCalibrationAvailable;
-(void)setLatestTrack:(id)arg1 ;
-(void)setLatestInvalidGradientTrack:(id)arg1 ;
-(void)setLocationState:(int)arg1 ;
-(void)checkAuthorization;
-(void)quitForcedLocationState;
-(void)setUpdateFinishedHandler;
-(void)startSessionMetrics:(double)arg1 session:(int)arg2 ;
-(int)locationState;
-(BOOL)shouldSkipChecksInWindow;
-(unsigned)stepsInWindow;
-(BOOL)isRunningStateInWindow;
-(void)attemptForcedLocation;
-(void)logInvalidGradientTrackToAWD:(double)arg1 ;
-(void)updateCalibrationBins:(double)arg1 ;
-(void)ageOutStepArray;
-(void)ageOutMotionStateArray;
-(void)checkForStateTransition;
-(CalTrackFinder *)trackFinder;
-(void)setTrackFinder:(CalTrackFinder *)arg1 ;
-(void)sendCurrentTrack:(id)arg1 ;
-(BOOL)checkValidTrack:(const CLStepDistance*)arg1 track:(id)arg2 ;
-(BOOL)checkValidTrackGradient:(double)arg1 track:(id)arg2 ;
-(void)endSessionMetrics:(double)arg1 ;
-(BOOL)isCalibrationConvergedStdForBinWithSpeed:(double)arg1 ;
-(BOOL)isCalibrationConvergedMedianForSpeed:(double)arg1 ;
-(void)onStepNotification:(int)arg1 data:(NotificationData*)arg2 ;
-(void)onOdometerNotification:(int)arg1 data:(NotificationData)arg2 ;
-(void)onMotionStateNotification:(int)arg1 data:(NotificationData)arg2 ;
-(void)onLocationNotification:(int)arg1 data:(NotificationData*)arg2 ;
-(void)onBatchTimer:(CLPersistentTimer*)arg1 ;
-(void)onCompanionNotification:(int)arg1 data:(NotificationData)arg2 ;
-(void)onMotionStateMediatorNotification:(int)arg1 data:(NotificationData)arg2 ;
-(void)beginService;
-(void)endService;
-(id)initInSilo:(id)arg1 ;
@end

