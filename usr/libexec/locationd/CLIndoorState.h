/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:22 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/locationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <locationd/locationd-Structs.h>
@class NSSet;

@interface CLIndoorState : NSObject {

	CLNavModeEstimator* _navModeEstimator;
	optional<CLLastFix> _latestPosition;
	optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > > > _lastIndoorError;
	optional<std::__1::vector<AvailabilityTile, std::__1::allocator<AvailabilityTile> > > _availabilityTiles;
	BOOL _wifiPowered;
	BOOL _gpsAssistanceRequested;
	BOOL _keybagLocked;
	BOOL _fSpectatingLocation;
	int _pipelinedSeeded;
	int _state;
	unsigned _tilePrefetchPredictionActivityCycleAllowance;
	int _latestReason;
	NSSet* _pipelinedVenues;
	double _availabilityZScoreConfidenceInterval;
	double _prefetchRadiusMeters;
	unsigned long long _prefetchMaxFloorsPerPrefetch;
	double _prefetchClusterMergeRadius;
	CLNavModeClassificationEstimate _latestNavModeEstimate;

}

@property (assign,nonatomic) int pipelinedSeeded;                                                //@synthesize pipelinedSeeded=_pipelinedSeeded - In the implementation block
@property (nonatomic,copy) NSSet * pipelinedVenues;                                              //@synthesize pipelinedVenues=_pipelinedVenues - In the implementation block
@property (assign,nonatomic) int state;                                                          //@synthesize state=_state - In the implementation block
@property (assign,nonatomic) BOOL wifiPowered;                                                   //@synthesize wifiPowered=_wifiPowered - In the implementation block
@property (assign,nonatomic) BOOL gpsAssistanceRequested;                                        //@synthesize gpsAssistanceRequested=_gpsAssistanceRequested - In the implementation block
@property (assign,nonatomic) BOOL keybagLocked;                                                  //@synthesize keybagLocked=_keybagLocked - In the implementation block
@property (assign,nonatomic) BOOL fSpectatingLocation;                                           //@synthesize fSpectatingLocation=_fSpectatingLocation - In the implementation block
@property (assign,nonatomic) double availabilityZScoreConfidenceInterval;                        //@synthesize availabilityZScoreConfidenceInterval=_availabilityZScoreConfidenceInterval - In the implementation block
@property (assign,nonatomic) unsigned tilePrefetchPredictionActivityCycleAllowance;              //@synthesize tilePrefetchPredictionActivityCycleAllowance=_tilePrefetchPredictionActivityCycleAllowance - In the implementation block
@property (assign,nonatomic) double prefetchRadiusMeters;                                        //@synthesize prefetchRadiusMeters=_prefetchRadiusMeters - In the implementation block
@property (assign,nonatomic) unsigned long long prefetchMaxFloorsPerPrefetch;                    //@synthesize prefetchMaxFloorsPerPrefetch=_prefetchMaxFloorsPerPrefetch - In the implementation block
@property (assign,nonatomic) double prefetchClusterMergeRadius;                                  //@synthesize prefetchClusterMergeRadius=_prefetchClusterMergeRadius - In the implementation block
@property (assign,nonatomic) CLNavModeClassificationEstimate latestNavModeEstimate;              //@synthesize latestNavModeEstimate=_latestNavModeEstimate - In the implementation block
@property (assign,nonatomic) int latestReason;                                                   //@synthesize latestReason=_latestReason - In the implementation block
-(void)setPrefetchClusterMergeRadius:(double)arg1 ;
-(double)prefetchClusterMergeRadius;
-(unsigned)tilePrefetchPredictionActivityCycleAllowance;
-(void)setTilePrefetchPredictionActivityCycleAllowance:(unsigned)arg1 ;
-(CLNavModeEstimator*)navModeEstimator;
-(void)resetNavModeEstimator;
-(optional<CLLastFix>=Baligned_storage<CLLastFix>=(dummy_u=[152c]a8)}}Ref)latestPosition;
-(void)setLatestPosition:(CLLastFix)arg1 ;
-(optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > > >=Baligned_storage<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > > >=(dummy_u=[8c]a8)}}Ref)lastIndoorError;
-(void)setLastIndoorError:(optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > > >=Baligned_storage<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > > >=(dummy_u=[8c]a8)}}Ref)arg1 ;
-(BOOL)availabilityTilesLoaded;
-(vector<AvailabilityTile, std::__1::allocator<AvailabilityTile> >*)availabilityTiles;
-(void)setAvailabilityTiles:(vector<AvailabilityTile, std::__1::allocator<AvailabilityTile> >*)arg1 withZScoreConfidenceInterval:(double)arg2 ;
-(void)updatePrefetchParameters:(id)arg1 ;
-(void)clearAvailabilityTiles;
-(int)pipelinedSeeded;
-(void)setPipelinedSeeded:(int)arg1 ;
-(NSSet *)pipelinedVenues;
-(void)setPipelinedVenues:(NSSet *)arg1 ;
-(BOOL)wifiPowered;
-(void)setWifiPowered:(BOOL)arg1 ;
-(BOOL)gpsAssistanceRequested;
-(void)setGpsAssistanceRequested:(BOOL)arg1 ;
-(BOOL)keybagLocked;
-(void)setKeybagLocked:(BOOL)arg1 ;
-(BOOL)fSpectatingLocation;
-(void)setFSpectatingLocation:(BOOL)arg1 ;
-(double)availabilityZScoreConfidenceInterval;
-(void)setAvailabilityZScoreConfidenceInterval:(double)arg1 ;
-(double)prefetchRadiusMeters;
-(void)setPrefetchRadiusMeters:(double)arg1 ;
-(unsigned long long)prefetchMaxFloorsPerPrefetch;
-(void)setPrefetchMaxFloorsPerPrefetch:(unsigned long long)arg1 ;
-(CLNavModeClassificationEstimate)latestNavModeEstimate;
-(void)setLatestNavModeEstimate:(CLNavModeClassificationEstimate)arg1 ;
-(int)latestReason;
-(void)setLatestReason:(int)arg1 ;
-(id)init;
-(int)state;
-(void)setState:(int)arg1 ;
@end

