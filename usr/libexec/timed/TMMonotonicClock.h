/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:36 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/libexec/timed
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <timed/TMMonotonicClock.h>

@protocol TMMonotonicClock <NSObject>
@property (nonatomic,readonly) unsigned long long machTime; 
@property (nonatomic,readonly) double coarseMonotonicTime; 
@required
-(double)coarseMonotonicTime;
-(BOOL)isMachTimeValid:(unsigned long long)arg1;
-(void)montonicTimeForMachTime:(unsigned long long)arg1 toQueue:(id)arg2 withCompletionHandler:(/*^block*/id)arg3;
-(unsigned long long)machTime;

@end


@protocol OS_dispatch_queue;
@class NSObject, NSString;

@interface TMMonotonicClock : NSObject <TMMonotonicClock> {

	double _lastCoarseMonotonicTime;
	unsigned long long _lastCoarseMonotonicTimeMachTime;
	double _cachedMonotonicTime;
	unsigned long long _cachedMachTime;
	double _cachedUncertainty;
	unsigned long long _lastWake;
	double _syncInterval;
	NSObject*<OS_dispatch_queue> _workQ;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> workQ;              //@synthesize workQ=_workQ - In the implementation block
@property (nonatomic,readonly) unsigned long long lastWake; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned long long machTime; 
@property (nonatomic,readonly) double coarseMonotonicTime; 
-(id)initWithSyncInterval:(double)arg1 ;
-(double)coarseMonotonicTime;
-(BOOL)isMachTimeValid:(unsigned long long)arg1 ;
-(void)montonicTimeForMachTime:(unsigned long long)arg1 toQueue:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(NSObject*<OS_dispatch_queue>)workQ;
-(unsigned long long)lastWake;
-(void)setWorkQ:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)dealloc;
-(id)init;
-(unsigned long long)machTime;
@end

