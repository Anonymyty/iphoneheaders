/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 26, 2017 at 12:28:37 AM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /usr/sbin/BTServer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <BTServer/BTServer-Structs.h>
@class NSURL;

@interface LeDeviceCache : NSObject {

	LeDeviceCacheEventListener* _listener;
	sqlite3Ref _pairedDatabase;
	sqlite3Ref _otherDatabase;
	sqlite3_stmtRef _writePairedDeviceStmt;
	sqlite3_stmtRef _writeOtherDeviceStmt;
	int _maxSeenDevices;
	int _maxConnectedDevices;
	int _seenDeviceCount;
	int _connectedDeviceCount;

}

@property (nonatomic,readonly) int maxSeenDevices;                        //@synthesize maxSeenDevices=_maxSeenDevices - In the implementation block
@property (nonatomic,readonly) int maxConnectedDevices;                   //@synthesize maxConnectedDevices=_maxConnectedDevices - In the implementation block
@property (assign,nonatomic) int seenDeviceCount;                         //@synthesize seenDeviceCount=_seenDeviceCount - In the implementation block
@property (assign,nonatomic) int connectedDeviceCount;                    //@synthesize connectedDeviceCount=_connectedDeviceCount - In the implementation block
@property (nonatomic,readonly) NSURL * databaseContainerURL; 
+(id)sharedInstance;
-(void)printDebug;
-(BOOL)initializeDatabases:(LeDeviceCacheEventListener*)arg1 queue:(id)arg2 ;
-(void)tryLoadProtectedCache;
-(LeDevice*)loadPairedDevice:(LeUuid)arg1 address:(LeDeviceAddress)arg2 ;
-(LeDevice*)readDevice:(LeUuid)arg1 ;
-(LeDevice*)readDeviceByAddress:(LeDeviceAddress)arg1 ;
-(int)duplicatePairedDevicesForAddress:(LeDeviceAddress)arg1 originalUuid:(LeUuid)arg2 ;
-(void)writeDevice:(const LeDevice*)arg1 ;
-(void)removeDevice:(const LeDevice*)arg1 internal:(BOOL)arg2 ;
-(NSURL *)databaseContainerURL;
-(const char*)friendlyNameForType:(unsigned long long)arg1 ;
-(void)updateProtectedCacheMetrics;
-(BOOL)readIntFromDatabase:(sqlite3Ref)arg1 statement:(id)arg2 value:(int*)arg3 ;
-(const char*)tableNameForType:(unsigned long long)arg1 ;
-(LeDevice*)readDeviceFromDatabase:(sqlite3Ref)arg1 statement:(id)arg2 ;
-(void)evictIfNeeded:(BOOL)arg1 ;
-(int)connectedDeviceCount;
-(void)setConnectedDeviceCount:(int)arg1 ;
-(int)seenDeviceCount;
-(void)setSeenDeviceCount:(int)arg1 ;
-(void)createTablesForDatabase:(sqlite3Ref)arg1 type:(unsigned long long)arg2 ;
-(BOOL)createDatabase:(sqlite3*)arg1 type:(unsigned long long)arg2 path:(const char*)arg3 flags:(int)arg4 ;
-(void)migratePlistData:(id)arg1 database:(sqlite3Ref)arg2 type:(unsigned long long)arg3 ;
-(id)nameFromSanitizedName:(id)arg1 ;
-(int)maxConnectedDevices;
-(int)maxSeenDevices;
-(void)printDatabase:(unsigned long long)arg1 ;
-(id)init;
-(BOOL)loadDatabase:(unsigned long long)arg1 ;
@end

