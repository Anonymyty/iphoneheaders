/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, January 25, 2017 at 3:20:15 PM Eastern Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /Applications/News.app/Frameworks/Silex.framework/Silex
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Silex/Silex-Structs.h>
#import <Silex/SXComponentView.h>
#import <Silex/SXVideoPlayerInternalDelegate.h>
#import <Silex/SXVideoPlayerDataSource.h>

@class SXMediaExposureEvent, SXVideoPlayerViewController, NSString;

@interface SXVideoComponentView : SXComponentView <SXVideoPlayerInternalDelegate, SXVideoPlayerDataSource> {

	BOOL _hasOwnershipOverVideoPlayer;
	BOOL _videoPlayerWasInjected;
	BOOL _isReceivingScrollOffsetCallbacks;
	SXMediaExposureEvent* _activeExposureEvent;
	SXVideoPlayerViewController* _videoPlayerViewController;

}

@property (nonatomic,retain) SXMediaExposureEvent * activeExposureEvent;                           //@synthesize activeExposureEvent=_activeExposureEvent - In the implementation block
@property (nonatomic,retain) SXVideoPlayerViewController * videoPlayerViewController;              //@synthesize videoPlayerViewController=_videoPlayerViewController - In the implementation block
@property (assign,nonatomic) BOOL hasOwnershipOverVideoPlayer;                                     //@synthesize hasOwnershipOverVideoPlayer=_hasOwnershipOverVideoPlayer - In the implementation block
@property (assign,nonatomic) BOOL videoPlayerWasInjected;                                          //@synthesize videoPlayerWasInjected=_videoPlayerWasInjected - In the implementation block
@property (assign,nonatomic) BOOL isReceivingScrollOffsetCallbacks;                                //@synthesize isReceivingScrollOffsetCallbacks=_isReceivingScrollOffsetCallbacks - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(CGRect)transitionContentFrame;
-(id)imageContentView;
-(void)renderContents;
-(void)presentingScrollViewDidScroll:(CGPoint)arg1 ;
-(id)initWithComponent:(id)arg1 componentLayout:(id)arg2 context:(id)arg3 ;
-(void)presentComponent;
-(BOOL)isReceivingScrollOffsetCallbacks;
-(void)setIsReceivingScrollOffsetCallbacks:(BOOL)arg1 ;
-(void)registerForScrollViewContentOffsetCallback;
-(void)unregisterForScrollViewContentOffsetCallback;
-(void)finishMediaExposureEvent;
-(void)createMediaExposureEventIfLoadedAndVisible;
-(void)visibilityStateDidChangeFromState:(long long)arg1 ;
-(SXMediaExposureEvent *)activeExposureEvent;
-(void)setActiveExposureEvent:(SXMediaExposureEvent *)arg1 ;
-(void)setHasOwnershipOverVideoPlayer:(BOOL)arg1 ;
-(BOOL)hasOwnershipOverVideoPlayer;
-(SXVideoPlayerViewController *)videoPlayerViewController;
-(BOOL)shouldPausePreroll;
-(BOOL)videoPlayerWasInjected;
-(BOOL)videoPlayerShouldReuseAVPlayerViewController:(id)arg1 ;
-(BOOL)videoPlayerShouldStartPlayback:(id)arg1 ;
-(void)videoPlayerPlayButtonTapped:(id)arg1 ;
-(void)videoPlayerDidStartPlayback:(id)arg1 ;
-(void)videoPlayerDidResumePlayback:(id)arg1 ;
-(void)videoPlayerDidPausePlayback:(id)arg1 ;
-(void)videoPlayerDidFinishPlayback:(id)arg1 ;
-(void)videoPlayerDidFailPlayback:(id)arg1 ;
-(void)videoPlayerPrerollDidStartPlayback:(id)arg1 ;
-(void)videoPlayerPrerollDidResumePlayback:(id)arg1 ;
-(void)videoPlayerPrerollDidPausePlayback:(id)arg1 ;
-(void)videoPlayerPrerollDidFinishPlayback:(id)arg1 ;
-(/*^block*/id)videoPlayer:(id)arg1 thumbnailWithCompletionBlock:(/*^block*/id)arg2 ;
-(/*^block*/id)videoPlayer:(id)arg1 contextWithCompletionBlock:(/*^block*/id)arg2 ;
-(BOOL)videoPlayerSupportsPreroll:(id)arg1 ;
-(void)setVideoPlayerViewController:(SXVideoPlayerViewController *)arg1 ;
-(void)setVideoPlayerWasInjected:(BOOL)arg1 ;
-(void)dealloc;
-(void)willMoveToWindow:(id)arg1 ;
-(CGRect)visibleFrame;
-(void)discardContents;
@end

